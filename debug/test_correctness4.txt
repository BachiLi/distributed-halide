mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/erf.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_erf -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_erf
Maximum number of incorrect mantissa bits: 3 @ -1.0353
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/exception.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_exception -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_exception
Not performing exceptions test because Halide was compiled without exceptions.

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/explicit_inline_reductions.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_explicit_inline_reductions -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_explicit_inline_reductions

  a_copy[i].min: min(sum$2.s0.v2.min, sum$2.s1.v2.min)
  a[i].min: min(sum$2.s1.v2.min, sum$2.s0.v2.min)

  a_copy[i].max: max(sum$2.s0.v2.max, sum$2.s1.v2.max)
  a[i].max: max(sum$2.s1.v2.max, sum$2.s0.v2.max)

  a_copy[i].min: min(sum.s0.v0.min, sum.s1.v0.min)
  a[i].min: min(sum.s1.v0.min, sum.s0.v0.min)

  a_copy[i].max: max(sum.s0.v0.max, sum.s1.v0.max)
  a[i].max: max(sum.s1.v0.max, sum.s0.v0.max)

  a_copy[i].min: min(sum$3.s0.v4.min, sum$3.s1.v4.min)
  a[i].min: min(sum$3.s1.v4.min, sum$3.s0.v4.min)

  a_copy[i].max: max(sum$3.s0.v4.max, sum$3.s1.v4.max)
  a[i].max: max(sum$3.s1.v4.max, sum$3.s0.v4.max)

  a_copy[i].min: min(sum$3.s0.v5.min, sum$3.s1.v5.min)
  a[i].min: min(sum$3.s1.v5.min, sum$3.s0.v5.min)

  a_copy[i].max: max(sum$3.s0.v5.max, sum$3.s1.v5.max)
  a[i].max: max(sum$3.s1.v5.max, sum$3.s0.v5.max)

  a_copy[i].min: min(product$2.s0.v8.min, product$2.s1.v8.min)
  a[i].min: min(product$2.s1.v8.min, product$2.s0.v8.min)

  a_copy[i].max: max(product$2.s0.v8.max, product$2.s1.v8.max)
  a[i].max: max(product$2.s1.v8.max, product$2.s0.v8.max)

  a_copy[i].min: min(f.s0.x.min, f.s1.r1.x$r.min)
  a[i].min: min(f.s1.r1.x$r.min, f.s0.x.min)

  a_copy[i].max: max(f.s0.x.max, f.s1.r1.x$r.max)
  a[i].max: max(f.s1.r1.x$r.max, f.s0.x.max)

  a_copy[i].min: min(f.s0.y.min, f.s1.y.min)
  a[i].min: min(f.s1.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, f.s1.y.max)
  a[i].max: max(f.s1.y.max, f.s0.y.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, min(f.s1.r1.x$r.min, f.s0.x.min))
  a[i].min: min(f.s1.r1.x$r.min, f.s0.x.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, max(f.s1.r1.x$r.max, f.s0.x.max))
  a[i].max: max(f.s1.r1.x$r.max, f.s0.x.max)

  a_copy[i].min: min(f.s1.y.min, min(f.s1.y.min, f.s0.y.min))
  a[i].min: min(f.s1.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s1.y.max, max(f.s1.y.max, f.s0.y.max))
  a[i].max: max(f.s1.y.max, f.s0.y.max)

  a_copy[i].min: min(min(product$2.s1.v8.min, f.s1.r1.x$r.min), min(product$2.s1.v8.min, product$2.s0.v8.min))
  a[i].min: min(product$2.s1.v8.min, min(product$2.s0.v8.min, f.s1.r1.x$r.min))

  a_copy[i].max: max(max(product$2.s1.v8.max, f.s1.r1.x$r.max), max(product$2.s1.v8.max, product$2.s0.v8.max))
  a[i].max: max(product$2.s1.v8.max, max(product$2.s0.v8.max, f.s1.r1.x$r.max))

  a_copy[i].min: min(min(sum.s1.v0.min, product.s1.r3.x$r.min), min(sum.s1.v0.min, sum.s0.v0.min))
  a[i].min: min(sum.s1.v0.min, min(sum.s0.v0.min, product.s1.r3.x$r.min))

  a_copy[i].max: max(max(sum.s1.v0.max, product.s1.r3.x$r.max), max(sum.s1.v0.max, sum.s0.v0.max))
  a[i].max: max(sum.s1.v0.max, max(sum.s0.v0.max, product.s1.r3.x$r.max))

  a_copy[i].min: min(min(sum$2.s1.v2.min, product.s1.r3.x$r.min), min(sum$2.s1.v2.min, sum$2.s0.v2.min))
  a[i].min: min(sum$2.s1.v2.min, min(sum$2.s0.v2.min, product.s1.r3.x$r.min))

  a_copy[i].max: max(max(sum$2.s1.v2.max, product.s1.r3.x$r.max), max(sum$2.s1.v2.max, sum$2.s0.v2.max))
  a[i].max: max(sum$2.s1.v2.max, max(sum$2.s0.v2.max, product.s1.r3.x$r.max))

  a_copy[i].min: min(min(sum$3.s1.v4.min, product$2.s1.v8.min), min(sum$3.s1.v4.min, sum$3.s0.v4.min))
  a[i].min: min(sum$3.s1.v4.min, min(sum$3.s0.v4.min, product$2.s1.v8.min))

  a_copy[i].max: max(max(sum$3.s1.v4.max, product$2.s1.v8.max), max(sum$3.s1.v4.max, sum$3.s0.v4.max))
  a[i].max: max(sum$3.s1.v4.max, max(sum$3.s0.v4.max, product$2.s1.v8.max))

  a_copy[i].min: min(min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min), min(sum$3.s1.v5.min, sum$3.s0.v5.min))
  a[i].min: min(sum$3.s1.v5.min, min(sum$3.s0.v5.min, product$2.s1.r3.x$r.min))

  a_copy[i].max: max(max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max), max(sum$3.s1.v5.max, sum$3.s0.v5.max))
  a[i].max: max(sum$3.s1.v5.max, max(sum$3.s0.v5.max, product$2.s1.r3.x$r.max))

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min: min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max: max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min: min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max: max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min: min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max: max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min: min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max: max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min: min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max: max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min: min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max: max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min: min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max: max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min: min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max: max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, product$2.s1.v8.min)
  a[i].min: min(product$2.s1.v8.min, f.s1.r1.x$r.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, product$2.s1.v8.max)
  a[i].max: max(product$2.s1.v8.max, f.s1.r1.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min: min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max: max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min: min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max: max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min: min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max: max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min: min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max: max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, product$2.s1.v8.min)
  a[i].min: min(product$2.s1.v8.min, f.s1.r1.x$r.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, product$2.s1.v8.max)
  a[i].max: max(product$2.s1.v8.max, f.s1.r1.x$r.max)

  a_copy[i].min: min(f.min.0, f.s1.r1.x$r.min)
  a[i].min: min(f.s1.r1.x$r.min, f.min.0)

  a_copy[i].max: max(((f.min.0 + f.extent.0) - 1), f.s1.r1.x$r.max)
  a[i].max: max(f.s1.r1.x$r.max, ((f.extent.0 + f.min.0) + -1))

  a_copy[i].min: min(f.min.1, f.s1.y.min)
  a[i].min: min(f.s1.y.min, f.min.1)

  a_copy[i].max: max(((f.min.1 + f.extent.1) - 1), f.s1.y.max)
  a[i].max: max(f.s1.y.max, ((f.extent.1 + f.min.1) + -1))

  a_copy[i].min: min(sum$2.s0.v2.min, sum$2.s1.v2.min)
  a[i].min: min(sum$2.s1.v2.min, sum$2.s0.v2.min)

  a_copy[i].max: max(sum$2.s0.v2.max, sum$2.s1.v2.max)
  a[i].max: max(sum$2.s1.v2.max, sum$2.s0.v2.max)

  a_copy[i].min: min(min(sum$2.s1.v2.min, product.s1.r3.x$r), min(sum$2.s1.v2.min, sum$2.s0.v2.min))
  a[i].min: min(sum$2.s1.v2.min, min(sum$2.s0.v2.min, product.s1.r3.x$r))

  a_copy[i].max: max(max(sum$2.s1.v2.max, product.s1.r3.x$r), max(sum$2.s1.v2.max, sum$2.s0.v2.max))
  a[i].max: max(sum$2.s1.v2.max, max(sum$2.s0.v2.max, product.s1.r3.x$r))

  a_copy[i].min: min(sum.s0.v0.min, sum.s1.v0.min)
  a[i].min: min(sum.s1.v0.min, sum.s0.v0.min)

  a_copy[i].max: max(sum.s0.v0.max, sum.s1.v0.max)
  a[i].max: max(sum.s1.v0.max, sum.s0.v0.max)

  a_copy[i].min: min(min(sum.s1.v0.min, product.s1.r3.x$r), min(sum.s1.v0.min, sum.s0.v0.min))
  a[i].min: min(sum.s1.v0.min, min(sum.s0.v0.min, product.s1.r3.x$r))

  a_copy[i].max: max(max(sum.s1.v0.max, product.s1.r3.x$r), max(sum.s1.v0.max, sum.s0.v0.max))
  a[i].max: max(sum.s1.v0.max, max(sum.s0.v0.max, product.s1.r3.x$r))

  a_copy[i].min: min(product$2.s0.v8.min, product$2.s1.v8.min)
  a[i].min: min(product$2.s1.v8.min, product$2.s0.v8.min)

  a_copy[i].max: max(product$2.s0.v8.max, product$2.s1.v8.max)
  a[i].max: max(product$2.s1.v8.max, product$2.s0.v8.max)

  a_copy[i].min: min(min(product$2.s1.v8.min, f.s1.r1.x$r), min(product$2.s1.v8.min, product$2.s0.v8.min))
  a[i].min: min(product$2.s1.v8.min, min(product$2.s0.v8.min, f.s1.r1.x$r))

  a_copy[i].max: max(max(product$2.s1.v8.max, f.s1.r1.x$r), max(product$2.s1.v8.max, product$2.s0.v8.max))
  a[i].max: max(product$2.s1.v8.max, max(product$2.s0.v8.max, f.s1.r1.x$r))

  a_copy[i].min: min(sum$3.s0.v4.min, sum$3.s1.v4.min)
  a[i].min: min(sum$3.s1.v4.min, sum$3.s0.v4.min)

  a_copy[i].max: max(sum$3.s0.v4.max, sum$3.s1.v4.max)
  a[i].max: max(sum$3.s1.v4.max, sum$3.s0.v4.max)

  a_copy[i].min: min(sum$3.s0.v5.min, sum$3.s1.v5.min)
  a[i].min: min(sum$3.s1.v5.min, sum$3.s0.v5.min)

  a_copy[i].max: max(sum$3.s0.v5.max, sum$3.s1.v5.max)
  a[i].max: max(sum$3.s1.v5.max, sum$3.s0.v5.max)

  a_copy[i].min: min(min(sum$3.s1.v4.min, product$2.s1.v8), min(sum$3.s1.v4.min, sum$3.s0.v4.min))
  a[i].min: min(sum$3.s1.v4.min, min(sum$3.s0.v4.min, product$2.s1.v8))

  a_copy[i].max: max(max(sum$3.s1.v4.max, product$2.s1.v8), max(sum$3.s1.v4.max, sum$3.s0.v4.max))
  a[i].max: max(sum$3.s1.v4.max, max(sum$3.s0.v4.max, product$2.s1.v8))

  a_copy[i].min: min(min(sum$3.s1.v5.min, product$2.s1.r3.x$r), min(sum$3.s1.v5.min, sum$3.s0.v5.min))
  a[i].min: min(sum$3.s1.v5.min, min(sum$3.s0.v5.min, product$2.s1.r3.x$r))

  a_copy[i].max: max(max(sum$3.s1.v5.max, product$2.s1.r3.x$r), max(sum$3.s1.v5.max, sum$3.s0.v5.max))
  a[i].max: max(sum$3.s1.v5.max, max(sum$3.s0.v5.max, product$2.s1.r3.x$r))

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_bounds_inference.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_bounds_inference -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_bounds_inference
