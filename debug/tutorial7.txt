cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/halide/bin:/home/psuriana/halide/non-linear-FM/bin/:/home/psuriana/halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/halide/bin/tutorial_lesson_07_multi_stage_pipelines

  a_copy[i].min: min((output.s0.x.min - 1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max - 1), output.s0.x.max)
  a[i].max: output.s0.x.max

  a_copy[i].min: (output.s0.y.min - 1)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: (output.s0.y.max - 1)
  a[i].max: (output.s0.y.max + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max(output.s0.x.max, (output.s0.x.max + 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min - 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max((output.s0.y.max + -1), (output.s0.y.max - 1))
  a[i].max: (output.s0.y.max + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min - 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), (output.s0.x.max - 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max((output.s0.y.max + -1), output.s0.y.max)
  a[i].max: output.s0.y.max

  a_copy[i].min: min((output.s0.x.min + -1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), output.s0.x.max)
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min - 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), (output.s0.x.max - 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max(output.s0.y.max, (output.s0.y.max + 1))
  a[i].max: (output.s0.y.max + 1)

  a_copy[i].min: min((output.s0.x.min + -1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), output.s0.x.max)
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min - 1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max - 1), output.s0.x.max)
  a[i].max: output.s0.x.max

  a_copy[i].min: (output.s0.y.min - 1)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: (output.s0.y.max - 1)
  a[i].max: (output.s0.y.max + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max(output.s0.x.max, (output.s0.x.max + 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min - 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max((output.s0.y.max + -1), (output.s0.y.max - 1))
  a[i].max: (output.s0.y.max + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min - 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), (output.s0.x.max - 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max((output.s0.y.max + -1), output.s0.y.max)
  a[i].max: output.s0.y.max

  a_copy[i].min: min((output.s0.x.min + -1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), output.s0.x.max)
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].min: min((output.s0.y.min + -1), output.s0.y.min)
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min - 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), (output.s0.x.max - 1))
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].max: max(output.s0.y.max, (output.s0.y.max + 1))
  a[i].max: (output.s0.y.max + 1)

  a_copy[i].min: min((output.s0.x.min + -1), output.s0.x.min)
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].max: max((output.s0.x.max + 1), output.s0.x.max)
  a[i].max: (output.s0.x.max + 1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min((output.s0.x.min + -1), (output.s0.x.min + 1))
  a[i].min: (output.s0.x.min + -1)

  a_copy[i].min: min((output.s0.y.min + -1), (output.s0.y.min + 1))
  a[i].min: (output.s0.y.min + -1)

  a_copy[i].min: min(max(min((output$2.s0.x.min + -1), 767), 0), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max((output$2.s0.x.min + -1), 0), 767)

  a_copy[i].max: max(max(min((output$2.s0.x.max + -1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min(output$2.s0.x.max, 767), 0)

  a_copy[i].min: max(min((output$2.s0.y.min + -1), 1279), 0)
  a[i].min: min(max((output$2.s0.y.min + -1), 0), 1279)

  a_copy[i].min: min(min(max((output$2.s0.x.min + -1), 0), 767), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))

  a_copy[i].max: max(max(min(output$2.s0.x.max, 767), 0), max(min((output$2.s0.x.max + 1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max((output$2.s0.y.min + -1), 0), 1279), max(min((output$2.s0.y.min + -1), 1279), 0))
  a[i].min: min(max((output$2.s0.y.min + -1), 0), 1279)

  a_copy[i].min: min(min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)), max(min((output$2.s0.x.min + -1), 767), 0))
  a[i].min: min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min((output$2.s0.x.max + -1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max((output$2.s0.y.min + -1), 0), 1279), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].max: max(max(min((output$2.s0.y.max + -1), 1279), 0), max(min(output$2.s0.y.max, 1279), 0))
  a[i].max: max(min(output$2.s0.y.max, 1279), 0)

  a_copy[i].min: min(min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + -1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min((output$2.s0.x.max + -1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))

  a_copy[i].max: max(max(min(output$2.s0.y.max, 1279), 0), max(min((output$2.s0.y.max + 1), 1279), 0))
  a[i].max: max(min((output$2.s0.y.max + 1), 1279), 0)

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279))), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279))), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))

  a_copy[i].min: min(max(min((output$2.s0.x.min + -1), 767), 0), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max((output$2.s0.x.min + -1), 0), 767)

  a_copy[i].max: max(max(min((output$2.s0.x.max + -1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min(output$2.s0.x.max, 767), 0)

  a_copy[i].min: max(min((output$2.s0.y.min + -1), 1279), 0)
  a[i].min: min(max((output$2.s0.y.min + -1), 0), 1279)

  a_copy[i].min: min(min(max((output$2.s0.x.min + -1), 0), 767), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))

  a_copy[i].max: max(max(min(output$2.s0.x.max, 767), 0), max(min((output$2.s0.x.max + 1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max((output$2.s0.y.min + -1), 0), 1279), max(min((output$2.s0.y.min + -1), 1279), 0))
  a[i].min: min(max((output$2.s0.y.min + -1), 0), 1279)

  a_copy[i].min: min(min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)), max(min((output$2.s0.x.min + -1), 767), 0))
  a[i].min: min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min((output$2.s0.x.max + -1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max((output$2.s0.y.min + -1), 0), 1279), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].max: max(max(min((output$2.s0.y.max + -1), 1279), 0), max(min(output$2.s0.y.max, 1279), 0))
  a[i].max: max(min(output$2.s0.y.max, 1279), 0)

  a_copy[i].min: min(min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min(output$2.s0.y.min, 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + -1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min((output$2.s0.x.max + -1), 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + -1), 0), 1279)), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))

  a_copy[i].max: max(max(min(output$2.s0.y.max, 1279), 0), max(min((output$2.s0.y.max + 1), 1279), 0))
  a[i].max: max(min((output$2.s0.y.max + 1), 1279), 0)

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min(output$2.s0.x.min, 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].max: max(max(min((output$2.s0.x.max + 1), 767), 0), max(min(output$2.s0.x.max, 767), 0))
  a[i].max: max(min((output$2.s0.x.max + 1), 767), 0)

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279))), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))

  a_copy[i].min: min(min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767))), max(min((output$2.s0.x.min + 1), 767), 0))
  a[i].min: min(max(output$2.s0.x.min, 0), min(max((output$2.s0.x.min + 1), 0), min(max((output$2.s0.x.min + -1), 0), 767)))

  a_copy[i].min: min(min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279))), max(min((output$2.s0.y.min + 1), 1279), 0))
  a[i].min: min(max(output$2.s0.y.min, 0), min(max((output$2.s0.y.min + 1), 0), min(max((output$2.s0.y.min + -1), 0), 1279)))
Success!

