mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/min_extent.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_min_extent -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_min_extent
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/mod.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_mod -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_mod
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/multi_output_pipeline_with_bad_sizes.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_multi_output_pipeline_with_bad_sizes -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_multi_output_pipeline_with_bad_sizes

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$43) min: f.s0.x; max: f.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0
Constraint violated: f.1.extent.0 (101) == f.0.extent.0 (f.0.extent.0)

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/multipass_constraints.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_multipass_constraints -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_multipass_constraints

  a_copy[i].min: min(out.s0.x.min, out.s1.x.min)
  a[i].min     : min(out.s1.x.min, out.s0.x.min)

  a_copy[i].max: max(out.s0.x.max, (((((out.s1.x.max - out.s1.x.min)/4)*4) + out.s1.x.min) + 3))
  a[i].max     : max((((((out.s1.x.max - out.s1.x.min)/4)*4) + out.s1.x.min) + 3), out.s0.x.max)

  a_copy[i].min: min(out.s0.y.min, out.s1.y.min)
  a[i].min     : min(out.s1.y.min, out.s0.y.min)

  a_copy[i].max: max(out.s0.y.max, out.s1.y.max)
  a[i].max     : max(out.s1.y.max, out.s0.y.max)

  a_copy[i].min: min(out.s1.x.min, out.s0.x.min)
  a[i].min     : min(out.s0.x.min, out.s1.x.min)

  a_copy[i].max: max((((((out.s1.x.max - out.s1.x.min)/4)*4) + out.s1.x.min) + 3), out.s0.x.max)
  a[i].max     : max(out.s0.x.max, (((((out.s1.x.max - out.s1.x.min)/4)*4) + out.s1.x.min) + 3))

  a_copy[i].min: min(out.s1.y.min, out.s0.y.min)
  a[i].min     : min(out.s0.y.min, out.s1.y.min)

  a_copy[i].max: max(out.s1.y.max, out.s0.y.max)
  a[i].max     : max(out.s0.y.max, out.s1.y.max)
Frac: -1*out.extent.0 + out.s1.x.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.extent.0 + out.s1.x.max + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].max: max((select((out.extent.0 < 22), (out.extent.0 + 1), out.extent.0) + -1), out.s1.x.max)
  a[i].max     : max(out.s1.x.max, select((out.extent.0 < 22), out.extent.0, (out.extent.0 + -1)))

  a_copy[i].min: min(out.min.1, out.s1.y.min)
  a[i].min     : min(out.s1.y.min, out.min.1)

  a_copy[i].max: max(((out.min.1 + out.extent.1) + -1), out.s1.y.max)
  a[i].max     : max(out.s1.y.max, ((out.extent.1 + out.min.1) + -1))

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/multi_pass_reduction.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_multi_pass_reduction -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_multi_pass_reduction

  a_copy[i].min: min((f.s1.r1.x$r.min + -1), (11 - f.s2.r1.x$r.max))
  a[i].min     : min((11 - f.s2.r1.x$r.max), (f.s1.r1.x$r.min + -1))

  a_copy[i].max: max(f.s1.r1.x$r.max, (11 - f.s2.r1.x$r.min))
  a[i].max     : max((11 - f.s2.r1.x$r.min), f.s1.r1.x$r.max)

  a_copy[i].min: min(min((11 - f.s2.r1.x$r.max), (f.s1.r1.x$r.min + -1)), (10 - f.s2.r1.x$r.max))
  a[i].min     : min((f.s1.r1.x$r.min + -1), (10 - f.s2.r1.x$r.max))

  a_copy[i].max: max(max((11 - f.s2.r1.x$r.min), f.s1.r1.x$r.max), (10 - f.s2.r1.x$r.min))
  a[i].max     : max(f.s1.r1.x$r.max, (11 - f.s2.r1.x$r.min))

  a_copy[i].min: min(f.s0.x.min, f.s1.r1.x$r.min)
  a[i].min     : min(f.s1.r1.x$r.min, f.s0.x.min)

  a_copy[i].max: max(f.s0.x.max, f.s1.r1.x$r.max)
  a[i].max     : max(f.s1.r1.x$r.max, f.s0.x.max)

  a_copy[i].min: min(min(f.s1.r1.x$r.min, f.s0.x.min), (10 - f.s2.r1.x$r.max))
  a[i].min     : min((10 - f.s2.r1.x$r.max), min(f.s0.x.min, f.s1.r1.x$r.min))

  a_copy[i].max: max(max(f.s1.r1.x$r.max, f.s0.x.max), (10 - f.s2.r1.x$r.min))
  a[i].max     : max((10 - f.s2.r1.x$r.min), max(f.s0.x.max, f.s1.r1.x$r.max))

  a_copy[i].min: min(min((f.s1.r1.x$r.min + -1), min(f.s0.x.min, f.s1.r1.x$r.min)), (10 - f.s2.r1.x$r.max))
  a[i].min     : min((10 - f.s2.r1.x$r.max), min(f.s0.x.min, (f.s1.r1.x$r.min + -1)))

  a_copy[i].max: max(max(f.s1.r1.x$r.max, (11 - f.s2.r1.x$r.min)), max((10 - f.s2.r1.x$r.min), max(f.s0.x.max, f.s1.r1.x$r.max)))
  a[i].max     : max(f.s0.x.max, max((11 - f.s2.r1.x$r.min), f.s1.r1.x$r.max))

  a_copy[i].min: min(f.min.0, (f.s1.r1.x$r.min + -1))
  a[i].min     : min((f.s1.r1.x$r.min + -1), f.min.0)

  a_copy[i].max: max(((f.min.0 + f.extent.0) + -1), f.s1.r1.x$r.max)
  a[i].max     : max(f.s1.r1.x$r.max, ((f.extent.0 + f.min.0) + -1))

  a_copy[i].min: min(min((f.s1.r1.x$r.min + -1), f.min.0), (10 - f.s2.r1.x$r.max))
  a[i].min     : min((10 - f.s2.r1.x$r.max), min(f.min.0, (f.s1.r1.x$r.min + -1)))

  a_copy[i].max: max(max(f.s1.r1.x$r.max, ((f.extent.0 + f.min.0) + -1)), (11 - f.s2.r1.x$r.min))
  a[i].max     : max((11 - f.s2.r1.x$r.min), max(((f.min.0 + f.extent.0) + -1), f.s1.r1.x$r.max))

  a_copy[i].min: min(f.min.0, (10 - f.s2.r1.x$r.max))
  a[i].min     : min((10 - f.s2.r1.x$r.max), f.min.0)

  a_copy[i].max: max(((f.min.0 + f.extent.0) + -1), (11 - f.s2.r1.x$r.min))
  a[i].max     : max((11 - f.s2.r1.x$r.min), ((f.extent.0 + f.min.0) + -1))

  a_copy[i].min: min(f$2.s0.x.min, f$2.s1.r.x$r.min)
  a[i].min     : min(f$2.s1.r.x$r.min, f$2.s0.x.min)

  a_copy[i].max: max(f$2.s0.x.max, f$2.s1.r.x$r.max)
  a[i].max     : max(f$2.s1.r.x$r.max, f$2.s0.x.max)

  a_copy[i].min: min(min(f$2.s1.r.x$r.min, f$2.s0.x.min), 17)
  a[i].min     : min(min(f$2.s0.x.min, f$2.s1.r.x$r.min), 17)

  a_copy[i].max: max(max(f$2.s1.r.x$r.max, f$2.s0.x.max), 17)
  a[i].max     : max(max(f$2.s0.x.max, f$2.s1.r.x$r.max), 17)

  a_copy[i].min: min(min(f$2.s0.x.min, f$2.s1.r.x$r.min), 17)
  a[i].min     : min(min(f$2.s1.r.x$r.min, f$2.s0.x.min), 17)

  a_copy[i].max: max(max(f$2.s0.x.max, f$2.s1.r.x$r.max), 109)
  a[i].max     : max(max(f$2.s1.r.x$r.max, f$2.s0.x.max), 109)

  a_copy[i].min: min(min(min(f$2.s1.r.x$r.min, f$2.s0.x.min), f$2.s4.r2.x$r.min), 17)
  a[i].min     : min(min(f$2.s4.r2.x$r.min, min(f$2.s0.x.min, f$2.s1.r.x$r.min)), 17)

  a_copy[i].max: max(max(max(f$2.s1.r.x$r.max, f$2.s0.x.max), f$2.s4.r2.x$r.max), 109)
  a[i].max     : max(max(f$2.s4.r2.x$r.max, max(f$2.s0.x.max, f$2.s1.r.x$r.max)), 109)

  a_copy[i].min: min((f$2.s1.r.x$r.min + -1), min(min(f$2.s4.r2.x$r.min, min(f$2.s0.x.min, f$2.s1.r.x$r.min)), 17))
  a[i].min     : min(min(f$2.s0.x.min, min(f$2.s4.r2.x$r.min, (f$2.s1.r.x$r.min + -1))), 17)

  a_copy[i].max: max(f$2.s1.r.x$r.max, max(max(f$2.s4.r2.x$r.max, max(f$2.s0.x.max, f$2.s1.r.x$r.max)), 109))
  a[i].max     : max(max(f$2.s0.x.max, max(f$2.s4.r2.x$r.max, f$2.s1.r.x$r.max)), 109)

  a_copy[i].min: min(f$2.s4.r2.x$r.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, f$2.s4.r2.x$r.min)

  a_copy[i].max: max(f$2.s4.r2.x$r.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, f$2.s4.r2.x$r.max)

  a_copy[i].min: min(f$2.min.0, (f$2.s1.r.x$r.min + -1))
  a[i].min     : min((f$2.s1.r.x$r.min + -1), f$2.min.0)

  a_copy[i].max: max(((f$2.min.0 + f$2.extent.0) + -1), f$2.s1.r.x$r.max)
  a[i].max     : max(f$2.s1.r.x$r.max, ((f$2.extent.0 + f$2.min.0) + -1))

  a_copy[i].min: min(f$2.s4.r2.x$r, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, f$2.s4.r2.x$r)

  a_copy[i].max: max(f$2.s4.r2.x$r, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, f$2.s4.r2.x$r)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 1)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 1)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 2)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 2)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 3)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 3)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 4)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 4)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 5)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 5)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 6)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 6)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 7)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 7)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 8)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 8)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 9)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 9)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 10)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 10)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 2)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 2)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 3)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 3)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 4)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 4)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 5)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 5)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 6)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 6)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 7)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 7)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 8)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 8)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 9)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 9)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 10)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 10)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 11)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 11)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 3)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 3)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 4)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 4)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 5)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 5)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 6)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 6)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 7)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 7)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 8)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 8)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 9)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 9)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 10)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 10)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 4)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 4)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 5)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 5)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 6)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 6)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 7)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 7)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 8)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 8)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 9)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 9)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 10)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 10)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 11)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 11)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 5)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 5)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 6)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 6)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 7)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 7)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 8)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 8)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 9)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 9)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 10)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 10)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 6)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 6)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 7)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 7)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 8)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 8)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 9)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 9)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 10)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 10)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 11)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 11)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 7)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 7)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 8)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 8)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 9)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 9)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 10)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 10)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 8)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 8)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 9)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 9)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 10)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 10)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 11)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 11)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 9)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 9)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 10)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 10)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 10)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 10)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 11)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 11)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 11)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 11)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 12)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 12)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 12)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 12)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 13)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 13)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 13)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 13)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 14)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 14)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 14)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 14)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 15)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 15)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 15)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 15)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 16)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 16)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 16)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 16)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 17)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 17)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 17)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 17)

  a_copy[i].max: max(((f$3.extent.0 + f$3.min.0) + -1), 18)
  a[i].max     : max(((f$3.min.0 + f$3.extent.0) + -1), 18)

  a_copy[i].max: max(((f$3.min.0 + f$3.extent.0) + -1), 18)
  a[i].max     : max(((f$3.extent.0 + f$3.min.0) + -1), 18)

  a_copy[i].min: min(f$4.s1.x.min, f$4.s2.r$2.x$r.min)
  a[i].min     : min(f$4.s2.r$2.x$r.min, f$4.s1.x.min)

  a_copy[i].max: max((((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3), f$4.s2.r$2.x$r.max)
  a[i].max     : max(f$4.s2.r$2.x$r.max, (((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3))

  a_copy[i].min: min((f$4.s1.r$2.x$r.min + -1), f$4.s2.y.min)
  a[i].min     : min(f$4.s2.y.min, (f$4.s1.r$2.x$r.min + -1))

  a_copy[i].max: max(f$4.s1.r$2.x$r.max, f$4.s2.y.max)
  a[i].max     : max(f$4.s2.y.max, f$4.s1.r$2.x$r.max)

  a_copy[i].min: min(min(f$4.s2.r$2.x$r.min, f$4.s1.x.min), (f$4.s2.r$2.x$r.min + -1))
  a[i].min     : min(f$4.s1.x.min, (f$4.s2.r$2.x$r.min + -1))

  a_copy[i].max: max(max(f$4.s2.r$2.x$r.max, (((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3)), (f$4.s2.r$2.x$r.max + -1))
  a[i].max     : max((((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3), f$4.s2.r$2.x$r.max)

  a_copy[i].min: min(f$4.s2.y.min, (f$4.s1.r$2.x$r.min + -1))
  a[i].min     : min((f$4.s1.r$2.x$r.min + -1), f$4.s2.y.min)

  a_copy[i].max: max(f$4.s2.y.max, f$4.s1.r$2.x$r.max)
  a[i].max     : max(f$4.s1.r$2.x$r.max, f$4.s2.y.max)

  a_copy[i].min: min(f$4.s0.x.min, f$4.s1.x.min)
  a[i].min     : min(f$4.s1.x.min, f$4.s0.x.min)

  a_copy[i].max: max(f$4.s0.x.max, (((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3))
  a[i].max     : max((((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3), f$4.s0.x.max)

  a_copy[i].min: min(f$4.s0.y.min, f$4.s1.r$2.x$r.min)
  a[i].min     : min(f$4.s1.r$2.x$r.min, f$4.s0.y.min)

  a_copy[i].max: max(f$4.s0.y.max, f$4.s1.r$2.x$r.max)
  a[i].max     : max(f$4.s1.r$2.x$r.max, f$4.s0.y.max)

  a_copy[i].min: min(min(f$4.s1.x.min, f$4.s0.x.min), f$4.s2.r$2.x$r.min)
  a[i].min     : min(f$4.s2.r$2.x$r.min, min(f$4.s0.x.min, f$4.s1.x.min))

  a_copy[i].max: max(max((((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3), f$4.s0.x.max), f$4.s2.r$2.x$r.max)
  a[i].max     : max(f$4.s2.r$2.x$r.max, max(f$4.s0.x.max, (((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3)))

  a_copy[i].min: min(min(f$4.s1.r$2.x$r.min, f$4.s0.y.min), f$4.s2.y.min)
  a[i].min     : min(f$4.s2.y.min, min(f$4.s0.y.min, f$4.s1.r$2.x$r.min))

  a_copy[i].max: max(max(f$4.s1.r$2.x$r.max, f$4.s0.y.max), f$4.s2.y.max)
  a[i].max     : max(f$4.s2.y.max, max(f$4.s0.y.max, f$4.s1.r$2.x$r.max))

  a_copy[i].min: min(min(f$4.s1.x.min, (f$4.s2.r$2.x$r.min + -1)), min(f$4.s2.r$2.x$r.min, min(f$4.s0.x.min, f$4.s1.x.min)))
  a[i].min     : min(f$4.s0.x.min, min((f$4.s2.r$2.x$r.min + -1), f$4.s1.x.min))

  a_copy[i].max: max(max(f$4.s0.x.max, (((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3)), f$4.s2.r$2.x$r.max)
  a[i].max     : max(f$4.s2.r$2.x$r.max, max((((((f$4.s1.x.max - f$4.s1.x.min)/4)*4) + f$4.s1.x.min) + 3), f$4.s0.x.max))

  a_copy[i].min: min(min((f$4.s1.r$2.x$r.min + -1), min(f$4.s0.y.min, f$4.s1.r$2.x$r.min)), f$4.s2.y.min)
  a[i].min     : min(f$4.s2.y.min, min(f$4.s0.y.min, (f$4.s1.r$2.x$r.min + -1)))

  a_copy[i].max: max(max(f$4.s0.y.max, f$4.s1.r$2.x$r.max), f$4.s2.y.max)
  a[i].max     : max(f$4.s2.y.max, max(f$4.s1.r$2.x$r.max, f$4.s0.y.max))

  a_copy[i].min: min(f$4.min.0, f$4.s1.x.min)
  a[i].min     : min(f$4.s1.x.min, f$4.min.0)

  a_copy[i].max: max(((f$4.min.0 + f$4.extent.0) + -1), f$4.s1.x.max)
  a[i].max     : max(f$4.s1.x.max, ((f$4.extent.0 + f$4.min.0) + -1))

  a_copy[i].min: min(f$4.min.1, (f$4.s1.r$2.x$r.min + -1))
  a[i].min     : min((f$4.s1.r$2.x$r.min + -1), f$4.min.1)

  a_copy[i].max: max(((f$4.min.1 + f$4.extent.1) + -1), f$4.s1.r$2.x$r.max)
  a[i].max     : max(f$4.s1.r$2.x$r.max, ((f$4.extent.1 + f$4.min.1) + -1))

  a_copy[i].min: min(min(f$4.s1.x.min, f$4.min.0), (f$4.s2.r$2.x$r.min + -1))
  a[i].min     : min((f$4.s2.r$2.x$r.min + -1), min(f$4.min.0, f$4.s1.x.min))

  a_copy[i].max: max(max(f$4.s1.x.max, ((f$4.extent.0 + f$4.min.0) + -1)), f$4.s2.r$2.x$r.max)
  a[i].max     : max(f$4.s2.r$2.x$r.max, max(((f$4.min.0 + f$4.extent.0) + -1), f$4.s1.x.max))

  a_copy[i].min: min(min((f$4.s1.r$2.x$r.min + -1), f$4.min.1), f$4.s2.y.min)
  a[i].min     : min(f$4.s2.y.min, min(f$4.min.1, (f$4.s1.r$2.x$r.min + -1)))

  a_copy[i].max: max(max(f$4.s1.r$2.x$r.max, ((f$4.extent.1 + f$4.min.1) + -1)), f$4.s2.y.max)
  a[i].max     : max(f$4.s2.y.max, max(((f$4.min.1 + f$4.extent.1) + -1), f$4.s1.r$2.x$r.max))

  a_copy[i].min: min(f$4.min.0, (f$4.s2.r$2.x$r.min + -1))
  a[i].min     : min((f$4.s2.r$2.x$r.min + -1), f$4.min.0)

  a_copy[i].max: max(((f$4.min.0 + f$4.extent.0) + -1), f$4.s2.r$2.x$r.max)
  a[i].max     : max(f$4.s2.r$2.x$r.max, ((f$4.extent.0 + f$4.min.0) + -1))

  a_copy[i].min: min(f$4.min.1, f$4.s2.y.min)
  a[i].min     : min(f$4.s2.y.min, f$4.min.1)

  a_copy[i].max: max(((f$4.min.1 + f$4.extent.1) + -1), f$4.s2.y.max)
  a[i].max     : max(f$4.s2.y.max, ((f$4.extent.1 + f$4.min.1) + -1))

  a_copy[i].min: min(f$5.s0.x.min, f$5.s1.x.min)
  a[i].min     : min(f$5.s1.x.min, f$5.s0.x.min)

  a_copy[i].max: max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))
  a[i].max     : max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), f$5.s0.x.max)

  a_copy[i].min: min(f$5.s0.y.min, f$5.s1.r$3.x$r.min)
  a[i].min     : min(f$5.s1.r$3.x$r.min, f$5.s0.y.min)

  a_copy[i].max: max(f$5.s0.y.max, f$5.s1.r$3.x$r.max)
  a[i].max     : max(f$5.s1.r$3.x$r.max, f$5.s0.y.max)

  a_copy[i].min: min(f$5.s1.x.min, f$5.s2.x.min)
  a[i].min     : min(f$5.s2.x.min, f$5.s1.x.min)

  a_copy[i].max: max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))
  a[i].max     : max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))

  a_copy[i].min: min((f$5.s1.r$3.x$r.min + -1), f$5.s2.r$3.x$r.min)
  a[i].min     : min(f$5.s2.r$3.x$r.min, (f$5.s1.r$3.x$r.min + -1))

  a_copy[i].max: max(f$5.s1.r$3.x$r.max, f$5.s2.r$3.x$r.max)
  a[i].max     : max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max)

  a_copy[i].min: min(f$5.s2.x.min, f$5.s1.x.min)
  a[i].min     : min(f$5.s1.x.min, f$5.s2.x.min)

  a_copy[i].max: max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))
  a[i].max     : max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))

  a_copy[i].min: min(min(f$5.s2.r$3.x$r.min, (f$5.s1.r$3.x$r.min + -1)), (f$5.s2.r$3.x$r.min + -1))
  a[i].min     : (min(f$5.s1.r$3.x$r.min, f$5.s2.r$3.x$r.min) + -1)

  a_copy[i].max: max(max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max), (f$5.s2.r$3.x$r.max + -1))
  a[i].max     : max(f$5.s1.r$3.x$r.max, f$5.s2.r$3.x$r.max)

  a_copy[i].min: min(min(f$5.s1.x.min, f$5.s0.x.min), f$5.s2.x.min)
  a[i].min     : min(f$5.s2.x.min, min(f$5.s0.x.min, f$5.s1.x.min))

  a_copy[i].max: max(max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), f$5.s0.x.max), (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))
  a[i].max     : max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10)))

  a_copy[i].min: min(min(f$5.s1.r$3.x$r.min, f$5.s0.y.min), f$5.s2.r$3.x$r.min)
  a[i].min     : min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, f$5.s1.r$3.x$r.min))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, f$5.s0.y.max), f$5.s2.r$3.x$r.max)
  a[i].max     : max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, f$5.s1.r$3.x$r.max))

  a_copy[i].min: min(min(f$5.s1.x.min, f$5.s2.x.min), f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, min(f$5.s2.x.min, f$5.s1.x.min))

  a_copy[i].max: max(max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12)), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16))
  a[i].max     : max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10)))

  a_copy[i].min: min((min(f$5.s1.r$3.x$r.min, f$5.s2.r$3.x$r.min) + -1), f$5.s3.r$3.x$r.min)
  a[i].min     : min(f$5.s3.r$3.x$r.min, (min(f$5.s2.r$3.x$r.min, f$5.s1.r$3.x$r.min) + -1))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, f$5.s2.r$3.x$r.max), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max))

  a_copy[i].min: min(f$5.s3.x.min, min(f$5.s2.x.min, f$5.s1.x.min))
  a[i].min     : min(f$5.s1.x.min, min(f$5.s2.x.min, f$5.s3.x.min))

  a_copy[i].max: max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10)))
  a[i].max     : max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16)))

  a_copy[i].min: min(min(f$5.s3.r$3.x$r.min, (min(f$5.s2.r$3.x$r.min, f$5.s1.r$3.x$r.min) + -1)), (f$5.s3.r$3.x$r.min + -1))
  a[i].min     : (min(f$5.s1.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, f$5.s3.r$3.x$r.min)) + -1)

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max)), (f$5.s3.r$3.x$r.max + -1))
  a[i].max     : max(f$5.s1.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s3.r$3.x$r.max))

  a_copy[i].min: min(min(f$5.s2.x.min, min(f$5.s0.x.min, f$5.s1.x.min)), f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.s0.x.min, f$5.s2.x.min)))

  a_copy[i].max: max(max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16))
  a[i].max     : max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max(f$5.s0.x.max, (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))))

  a_copy[i].min: min(min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, f$5.s1.r$3.x$r.min)), f$5.s3.r$3.x$r.min)
  a[i].min     : min(f$5.s3.r$3.x$r.min, min(f$5.s1.r$3.x$r.min, min(f$5.s0.y.min, f$5.s2.r$3.x$r.min)))

  a_copy[i].max: max(max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, f$5.s1.r$3.x$r.max)), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(f$5.s0.y.max, f$5.s2.r$3.x$r.max)))

  a_copy[i].min: min(min(f$5.s1.x.min, min(f$5.s2.x.min, f$5.s3.x.min)), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.s3.x.min, min(f$5.s2.x.min, f$5.s1.x.min)))

  a_copy[i].max: max(max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16))), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))))

  a_copy[i].min: min((min(f$5.s1.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, f$5.s3.r$3.x$r.min)) + -1), f$5.s4.r$3.x$r.min)
  a[i].min     : min(f$5.s4.r$3.x$r.min, (min(f$5.s3.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, f$5.s1.r$3.x$r.min)) + -1))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s3.r$3.x$r.max)), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(f$5.s3.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max)))

  a_copy[i].min: min(f$5.s4.x.min, min(f$5.s3.x.min, min(f$5.s2.x.min, f$5.s1.x.min)))
  a[i].min     : min(f$5.s1.x.min, min(f$5.s2.x.min, min(f$5.s3.x.min, f$5.s4.x.min)))

  a_copy[i].max: max(f$5.s4.x.max, max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))))
  a[i].max     : max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), f$5.s4.x.max)))

  a_copy[i].min: min(min(f$5.s4.r$3.x$r.min, (min(f$5.s3.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, f$5.s1.r$3.x$r.min)) + -1)), (f$5.s4.r$3.x$r.min + -1))
  a[i].min     : (min(f$5.s1.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, min(f$5.s3.r$3.x$r.min, f$5.s4.r$3.x$r.min))) + -1)

  a_copy[i].max: max(max(f$5.s4.r$3.x$r.max, max(f$5.s3.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max))), (f$5.s4.r$3.x$r.max + -1))
  a[i].max     : max(f$5.s1.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(f$5.s3.r$3.x$r.max, f$5.s4.r$3.x$r.max)))

  a_copy[i].min: min(min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.s0.x.min, f$5.s2.x.min))), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.s2.x.min, min(f$5.s0.x.min, min(f$5.s1.x.min, f$5.s3.x.min))))

  a_copy[i].max: max(max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max(f$5.s0.x.max, (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12)))), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16)))))

  a_copy[i].min: min(min(f$5.s3.r$3.x$r.min, min(f$5.s1.r$3.x$r.min, min(f$5.s0.y.min, f$5.s2.r$3.x$r.min))), f$5.s4.r$3.x$r.min)
  a[i].min     : min(f$5.s4.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, min(f$5.s1.r$3.x$r.min, f$5.s3.r$3.x$r.min))))

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(f$5.s0.y.max, f$5.s2.r$3.x$r.max))), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, max(f$5.s1.r$3.x$r.max, f$5.s3.r$3.x$r.max))))

  a_copy[i].min: min(f$5.s0.x.min, f$5.s1.x.min)
  a[i].min     : min(f$5.s1.x.min, f$5.s0.x.min)

  a_copy[i].max: max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))
  a[i].max     : max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), f$5.s0.x.max)

  a_copy[i].min: min(f$5.s0.y.min, f$5.s1.r$3.x$r.min)
  a[i].min     : min(f$5.s1.r$3.x$r.min, f$5.s0.y.min)

  a_copy[i].max: max(f$5.s0.y.max, f$5.s1.r$3.x$r.max)
  a[i].max     : max(f$5.s1.r$3.x$r.max, f$5.s0.y.max)

  a_copy[i].min: min(min(f$5.s1.x.min, f$5.s0.x.min), f$5.s2.x.min)
  a[i].min     : min(f$5.s2.x.min, min(f$5.s0.x.min, f$5.s1.x.min))

  a_copy[i].max: max(max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), f$5.s0.x.max), (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))
  a[i].max     : max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10)))

  a_copy[i].min: min(min(f$5.s1.r$3.x$r.min, f$5.s0.y.min), f$5.s2.r$3.x$r.min)
  a[i].min     : min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, f$5.s1.r$3.x$r.min))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, f$5.s0.y.max), f$5.s2.r$3.x$r.max)
  a[i].max     : max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, f$5.s1.r$3.x$r.max))

  a_copy[i].min: min(min(f$5.s2.x.min, min(f$5.s0.x.min, f$5.s1.x.min)), f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.s0.x.min, f$5.s2.x.min)))

  a_copy[i].max: max(max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10))), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16))
  a[i].max     : max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max(f$5.s0.x.max, (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12))))

  a_copy[i].min: min(min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, f$5.s1.r$3.x$r.min)), f$5.s3.r$3.x$r.min)
  a[i].min     : min(f$5.s3.r$3.x$r.min, min(f$5.s1.r$3.x$r.min, min(f$5.s0.y.min, f$5.s2.r$3.x$r.min)))

  a_copy[i].max: max(max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, f$5.s1.r$3.x$r.max)), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(f$5.s0.y.max, f$5.s2.r$3.x$r.max)))

  a_copy[i].min: min(min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.s0.x.min, f$5.s2.x.min))), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.s2.x.min, min(f$5.s0.x.min, min(f$5.s1.x.min, f$5.s3.x.min))))

  a_copy[i].max: max(max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max(f$5.s0.x.max, (((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12)))), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16)))))

  a_copy[i].min: min(min(f$5.s3.r$3.x$r.min, min(f$5.s1.r$3.x$r.min, min(f$5.s0.y.min, f$5.s2.r$3.x$r.min))), f$5.s4.r$3.x$r.min)
  a[i].min     : min(f$5.s4.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, min(f$5.s1.r$3.x$r.min, f$5.s3.r$3.x$r.min))))

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(f$5.s0.y.max, f$5.s2.r$3.x$r.max))), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, max(f$5.s1.r$3.x$r.max, f$5.s3.r$3.x$r.max))))

  a_copy[i].min: min(min(f$5.s1.x.min, min(f$5.s2.x.min, min(f$5.s3.x.min, f$5.s4.x.min))), min(f$5.s4.x.min, min(f$5.s2.x.min, min(f$5.s0.x.min, min(f$5.s1.x.min, f$5.s3.x.min)))))
  a[i].min     : min(f$5.s0.x.min, min(f$5.s4.x.min, min(f$5.s3.x.min, min(f$5.s2.x.min, f$5.s1.x.min))))

  a_copy[i].max: max(max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), f$5.s4.x.max))), max(f$5.s4.x.max, max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), max(f$5.s0.x.max, max((((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10), (((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16))))))
  a[i].max     : max(f$5.s0.x.max, max(f$5.s4.x.max, max((((((f$5.s3.x.max - f$5.s3.x.min)/17)*17) + f$5.s3.x.min) + 16), max((((((f$5.s2.x.max - f$5.s2.x.min)/13)*13) + f$5.s2.x.min) + 12), (((((f$5.s1.x.max - f$5.s1.x.min)/11)*11) + f$5.s1.x.min) + 10)))))

  a_copy[i].min: min((min(f$5.s1.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, min(f$5.s3.r$3.x$r.min, f$5.s4.r$3.x$r.min))) + -1), min(f$5.s4.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, min(f$5.s0.y.min, min(f$5.s1.r$3.x$r.min, f$5.s3.r$3.x$r.min)))))
  a[i].min     : min(f$5.s0.y.min, (min(f$5.s4.r$3.x$r.min, min(f$5.s3.r$3.x$r.min, min(f$5.s2.r$3.x$r.min, f$5.s1.r$3.x$r.min))) + -1))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(f$5.s3.r$3.x$r.max, f$5.s4.r$3.x$r.max))), max(f$5.s4.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(f$5.s0.y.max, max(f$5.s1.r$3.x$r.max, f$5.s3.r$3.x$r.max)))))
  a[i].max     : max(f$5.s0.y.max, max(f$5.s4.r$3.x$r.max, max(f$5.s3.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, f$5.s1.r$3.x$r.max))))

  a_copy[i].min: min(f$5.min.0, f$5.s1.x.min)
  a[i].min     : min(f$5.s1.x.min, f$5.min.0)

  a_copy[i].max: max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s1.x.max)
  a[i].max     : max(f$5.s1.x.max, ((f$5.extent.0 + f$5.min.0) + -1))

  a_copy[i].min: min(f$5.min.1, (f$5.s1.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s1.r$3.x$r.min + -1), f$5.min.1)

  a_copy[i].max: max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s1.r$3.x$r.max)
  a[i].max     : max(f$5.s1.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1))

  a_copy[i].min: min(min(f$5.s1.x.min, f$5.min.0), f$5.s2.x.min)
  a[i].min     : min(f$5.s2.x.min, min(f$5.min.0, f$5.s1.x.min))

  a_copy[i].max: max(max(f$5.s1.x.max, ((f$5.extent.0 + f$5.min.0) + -1)), f$5.s2.x.max)
  a[i].max     : max(f$5.s2.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s1.x.max))

  a_copy[i].min: min(min((f$5.s1.r$3.x$r.min + -1), f$5.min.1), (f$5.s2.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s2.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s1.r$3.x$r.min + -1)))

  a_copy[i].max: max(max(f$5.s1.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1)), f$5.s2.r$3.x$r.max)
  a[i].max     : max(f$5.s2.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s1.r$3.x$r.max))

  a_copy[i].min: min(min(f$5.s2.x.min, min(f$5.min.0, f$5.s1.x.min)), f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.min.0, f$5.s2.x.min)))

  a_copy[i].max: max(max(f$5.s2.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s1.x.max)), f$5.s3.x.max)
  a[i].max     : max(f$5.s3.x.max, max(f$5.s1.x.max, max(((f$5.extent.0 + f$5.min.0) + -1), f$5.s2.x.max)))

  a_copy[i].min: min(min((f$5.s2.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s1.r$3.x$r.min + -1))), (f$5.s3.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s3.r$3.x$r.min + -1), min((f$5.s1.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s2.r$3.x$r.min + -1))))

  a_copy[i].max: max(max(f$5.s2.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s1.r$3.x$r.max)), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(((f$5.extent.1 + f$5.min.1) + -1), f$5.s2.r$3.x$r.max)))

  a_copy[i].min: min(min(f$5.s3.x.min, min(f$5.s1.x.min, min(f$5.min.0, f$5.s2.x.min))), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.s2.x.min, min(f$5.min.0, min(f$5.s1.x.min, f$5.s3.x.min))))

  a_copy[i].max: max(max(f$5.s3.x.max, max(f$5.s1.x.max, max(((f$5.extent.0 + f$5.min.0) + -1), f$5.s2.x.max))), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max(f$5.s2.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), max(f$5.s1.x.max, f$5.s3.x.max))))

  a_copy[i].min: min(min((f$5.s3.r$3.x$r.min + -1), min((f$5.s1.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s2.r$3.x$r.min + -1)))), (f$5.s4.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s4.r$3.x$r.min + -1), min((f$5.s2.r$3.x$r.min + -1), min(f$5.min.1, (min(f$5.s1.r$3.x$r.min, f$5.s3.r$3.x$r.min) + -1))))

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, max(f$5.s1.r$3.x$r.max, max(((f$5.extent.1 + f$5.min.1) + -1), f$5.s2.r$3.x$r.max))), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), max(f$5.s1.r$3.x$r.max, f$5.s3.r$3.x$r.max))))

  a_copy[i].min: min(f$5.min.0, f$5.s2.x.min)
  a[i].min     : min(f$5.s2.x.min, f$5.min.0)

  a_copy[i].max: max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s2.x.max)
  a[i].max     : max(f$5.s2.x.max, ((f$5.extent.0 + f$5.min.0) + -1))

  a_copy[i].min: min(f$5.min.1, (f$5.s2.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s2.r$3.x$r.min + -1), f$5.min.1)

  a_copy[i].max: max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s2.r$3.x$r.max)
  a[i].max     : max(f$5.s2.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1))

  a_copy[i].min: min(min(f$5.s2.x.min, f$5.min.0), f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, min(f$5.min.0, f$5.s2.x.min))

  a_copy[i].max: max(max(f$5.s2.x.max, ((f$5.extent.0 + f$5.min.0) + -1)), f$5.s3.x.max)
  a[i].max     : max(f$5.s3.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s2.x.max))

  a_copy[i].min: min(min((f$5.s2.r$3.x$r.min + -1), f$5.min.1), (f$5.s3.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s3.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s2.r$3.x$r.min + -1)))

  a_copy[i].max: max(max(f$5.s2.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1)), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s2.r$3.x$r.max))

  a_copy[i].min: min(min(f$5.s3.x.min, min(f$5.min.0, f$5.s2.x.min)), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.s2.x.min, min(f$5.min.0, f$5.s3.x.min)))

  a_copy[i].max: max(max(f$5.s3.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s2.x.max)), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max(f$5.s2.x.max, max(((f$5.extent.0 + f$5.min.0) + -1), f$5.s3.x.max)))

  a_copy[i].min: min(min((f$5.s3.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s2.r$3.x$r.min + -1))), (f$5.s4.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s4.r$3.x$r.min + -1), min((f$5.s2.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s3.r$3.x$r.min + -1))))

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s2.r$3.x$r.max)), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(f$5.s2.r$3.x$r.max, max(((f$5.extent.1 + f$5.min.1) + -1), f$5.s3.r$3.x$r.max)))

  a_copy[i].min: min(f$5.min.0, f$5.s3.x.min)
  a[i].min     : min(f$5.s3.x.min, f$5.min.0)

  a_copy[i].max: max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s3.x.max)
  a[i].max     : max(f$5.s3.x.max, ((f$5.extent.0 + f$5.min.0) + -1))

  a_copy[i].min: min(f$5.min.1, (f$5.s3.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s3.r$3.x$r.min + -1), f$5.min.1)

  a_copy[i].max: max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s3.r$3.x$r.max)
  a[i].max     : max(f$5.s3.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1))

  a_copy[i].min: min(min(f$5.s3.x.min, f$5.min.0), f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, min(f$5.min.0, f$5.s3.x.min))

  a_copy[i].max: max(max(f$5.s3.x.max, ((f$5.extent.0 + f$5.min.0) + -1)), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s3.x.max))

  a_copy[i].min: min(min((f$5.s3.r$3.x$r.min + -1), f$5.min.1), (f$5.s4.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s4.r$3.x$r.min + -1), min(f$5.min.1, (f$5.s3.r$3.x$r.min + -1)))

  a_copy[i].max: max(max(f$5.s3.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1)), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s3.r$3.x$r.max))

  a_copy[i].min: min(f$5.min.0, f$5.s4.x.min)
  a[i].min     : min(f$5.s4.x.min, f$5.min.0)

  a_copy[i].max: max(((f$5.min.0 + f$5.extent.0) + -1), f$5.s4.x.max)
  a[i].max     : max(f$5.s4.x.max, ((f$5.extent.0 + f$5.min.0) + -1))

  a_copy[i].min: min(f$5.min.1, (f$5.s4.r$3.x$r.min + -1))
  a[i].min     : min((f$5.s4.r$3.x$r.min + -1), f$5.min.1)

  a_copy[i].max: max(((f$5.min.1 + f$5.extent.1) + -1), f$5.s4.r$3.x$r.max)
  a[i].max     : max(f$5.s4.r$3.x$r.max, ((f$5.extent.1 + f$5.min.1) + -1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/multiple_outputs.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_multiple_outputs -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_multiple_outputs

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$140) min: f.s0.x; max: f.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

  a_copy[i].min: min(min(g$2.s1.r.x$r.min, f$2.s0.x$4.min), 0)
  a[i].min     : min(min(f$2.s0.x$4.min, g$2.s1.r.x$r.min), 0)

  a_copy[i].max: max(max(g$2.s1.r.x$r.max, f$2.s0.x$4.max), 0)
  a[i].max     : max(max(f$2.s0.x$4.max, g$2.s1.r.x$r.max), 0)

  a_copy[i].min: min(min(g$2.s1.r.y$r.min, f$2.s0.y.min), 0)
  a[i].min     : min(min(f$2.s0.y.min, g$2.s1.r.y$r.min), 0)

  a_copy[i].max: max(max(g$2.s1.r.y$r.max, f$2.s0.y.max), 0)
  a[i].max     : max(max(f$2.s0.y.max, g$2.s1.r.y$r.max), 0)

  a_copy[i].min: min(min(g$2.s1.r.x$r.min, f$2.s0.x$4.min), 0)
  a[i].min     : min(min(f$2.s0.x$4.min, g$2.s1.r.x$r.min), 0)

  a_copy[i].max: max(max(g$2.s1.r.x$r.max, f$2.s0.x$4.max), 0)
  a[i].max     : max(max(f$2.s0.x$4.max, g$2.s1.r.x$r.max), 0)

  a_copy[i].min: min(min(g$2.s1.r.y$r.min, f$2.s0.y.min), 0)
  a[i].min     : min(min(f$2.s0.y.min, g$2.s1.r.y$r.min), 0)

  a_copy[i].max: max(max(g$2.s1.r.y$r.max, f$2.s0.y.max), 0)
  a[i].max     : max(max(f$2.s0.y.max, g$2.s1.r.y$r.max), 0)

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(h.s0.x$6.min, (g$4.s0.x$6.min + g$4.s0.y$2.min))
  a[i].min     : min((g$4.s0.y$2.min + g$4.s0.x$6.min), h.s0.x$6.min)

  a_copy[i].max: max(h.s0.x$6.max, (g$4.s0.x$6.max + g$4.s0.y$2.max))
  a[i].max     : max((g$4.s0.y$2.max + g$4.s0.x$6.max), h.s0.x$6.max)

  a_copy[i].min: min(min((g$4.s0.y$2.min + g$4.s0.x$6.min), h.s0.x$6.min), f$4.s0.x$6.min)
  a[i].min     : min(f$4.s0.x$6.min, min(h.s0.x$6.min, (g$4.s0.x$6.min + g$4.s0.y$2.min)))

  a_copy[i].max: max(max((g$4.s0.y$2.max + g$4.s0.x$6.max), h.s0.x$6.max), f$4.s0.x$6.max)
  a[i].max     : max(f$4.s0.x$6.max, max(h.s0.x$6.max, (g$4.s0.x$6.max + g$4.s0.y$2.max)))

  a_copy[i].min: min(g$4.s0.x$6.min, h.s0.x$6.min)
  a[i].min     : min(h.s0.x$6.min, g$4.s0.x$6.min)

  a_copy[i].max: max(g$4.s0.x$6.max, h.s0.x$6.max)
  a[i].max     : max(h.s0.x$6.max, g$4.s0.x$6.max)

  a_copy[i].min: min(f$4.min.0, (g$4.s0.x$6.min + g$4.s0.y$2.min))
  a[i].min     : min((g$4.s0.y$2.min + g$4.s0.x$6.min), f$4.min.0)

  a_copy[i].max: max(((f$4.min.0 + f$4.extent.0) + -1), (g$4.s0.x$6.max + g$4.s0.y$2.max))
  a[i].max     : max((g$4.s0.y$2.max + g$4.s0.x$6.max), ((f$4.extent.0 + f$4.min.0) + -1))

  a_copy[i].min: min(min((g$4.s0.y$2.min + g$4.s0.x$6.min), f$4.min.0), h.s0.x$6.min)
  a[i].min     : min(h.s0.x$6.min, min(f$4.min.0, (g$4.s0.x$6.min + g$4.s0.y$2.min)))

  a_copy[i].max: max(max((g$4.s0.y$2.max + g$4.s0.x$6.max), ((f$4.extent.0 + f$4.min.0) + -1)), h.s0.x$6.max)
  a[i].max     : max(h.s0.x$6.max, max(((f$4.min.0 + f$4.extent.0) + -1), (g$4.s0.x$6.max + g$4.s0.y$2.max)))

  a_copy[i].min: min(g$4.s0.x$6.min, h.0.min.0)
  a[i].min     : min(h.0.min.0, g$4.s0.x$6.min)

  a_copy[i].max: max(g$4.s0.x$6.max, ((h.0.min.0 + h.0.extent.0) + -1))
  a[i].max     : max(((h.0.extent.0 + h.0.min.0) + -1), g$4.s0.x$6.max)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$748) min: h.s0.x$6; max: h.s0.x$6
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$755) min: g$4.s0.x$6; max: g$4.s0.x$6
Dim (_interval$756) min: g$4.s0.y$2; max: g$4.s0.y$2
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/multi_way_select.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_multi_way_select -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_multi_way_select

  a_copy[i].min: min(sum.s1.r.x$r.min, min(g.s0.x.min, 0))
  a[i].min     : min(min(g.s0.x.min, sum.s1.r.x$r.min), 0)

  a_copy[i].max: max(sum.s1.r.x$r.max, max(g.s0.x.max, 7))
  a[i].max     : max(max(g.s0.x.max, sum.s1.r.x$r.max), 7)

  a_copy[i].min: min(sum.s1.r.x$r, min(g.s0.x.min, 0))
  a[i].min     : min(min(g.s0.x.min, sum.s1.r.x$r), 0)

  a_copy[i].max: max(sum.s1.r.x$r, max(g.s0.x.max, 7))
  a[i].max     : max(max(g.s0.x.max, sum.s1.r.x$r), 7)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/named_updates.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_named_updates -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_named_updates

  a_copy[i].min: min(min(f.s0.x.min, (f.s0.x.max + -3)), 0)
  a[i].min     : min(min((f.s0.x.max + -3), f.s0.x.min), 0)

  a_copy[i].min: min(min(min((f.s0.x.max + -3), f.s0.x.min), (f.s2.r.x$r.min*2)), 0)
  a[i].min     : min(min((f.s2.r.x$r.min*2), min(f.s0.x.min, (f.s0.x.max + -3))), 0)

  a_copy[i].max: max(max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), (f.s2.r.x$r.max*2)), 0)
  a[i].max     : max(max((f.s2.r.x$r.max*2), min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max)), 0)

  a_copy[i].min: min(min(min((f.s2.r.x$r.min*2), min(f.s0.x.min, (f.s0.x.max + -3))), (f.s3.r.x$r.min*4)), 0)
  a[i].min     : min(min((f.s3.r.x$r.min*4), min((f.s0.x.max + -3), min(f.s0.x.min, (f.s2.r.x$r.min*2)))), 0)

  a_copy[i].max: max(max(max((f.s2.r.x$r.max*2), min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max)), ((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*4) + f.s3.r.x$r.min)*4) + 12)), 0)
  a[i].max     : max(max((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), (f.s2.r.x$r.max*2))), 0)

  a_copy[i].min: min(min(min((f.s3.r.x$r.min*4), min((f.s0.x.max + -3), min(f.s0.x.min, (f.s2.r.x$r.min*2)))), (f.s4.r.x$r.min*3)), 0)
  a[i].min     : min(min((f.s4.r.x$r.min*3), min((f.s2.r.x$r.min*2), min(f.s0.x.min, min((f.s0.x.max + -3), (f.s3.r.x$r.min*4))))), 0)

  a_copy[i].max: max(max(max((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), (f.s2.r.x$r.max*2))), ((((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*4) + f.s4.r.x$r.min)*3) + 9)), 0)
  a[i].max     : max(max((((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*12) + (f.s4.r.x$r.min*3)) + 9), max((f.s2.r.x$r.max*2), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), (((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12)))), 0)

  a_copy[i].min: min(min(min((f.s4.r.x$r.min*3), min((f.s2.r.x$r.min*2), min(f.s0.x.min, min((f.s0.x.max + -3), (f.s3.r.x$r.min*4))))), (f.s5.r.x$r.min*2)), 0)
  a[i].min     : min(min((f.s5.r.x$r.min*2), min((f.s3.r.x$r.min*4), min((f.s0.x.max + -3), min(f.s0.x.min, min((f.s2.r.x$r.min*2), (f.s4.r.x$r.min*3)))))), 0)

  a_copy[i].max: max(max(max((((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*12) + (f.s4.r.x$r.min*3)) + 9), max((f.s2.r.x$r.max*2), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), (((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12)))), ((((((f.s5.r.x$r.max - f.s5.r.x$r.min)/4)*4) + f.s5.r.x$r.min)*2) + 6)), 0)
  a[i].max     : max(max((((((f.s5.r.x$r.max - f.s5.r.x$r.min)/4)*8) + (f.s5.r.x$r.min*2)) + 6), max((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), max((f.s2.r.x$r.max*2), (((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*12) + (f.s4.r.x$r.min*3)) + 9))))), 0)

  a_copy[i].min: min(min(min((f.s5.r.x$r.min*2), min((f.s3.r.x$r.min*4), min((f.s0.x.max + -3), min(f.s0.x.min, min((f.s2.r.x$r.min*2), (f.s4.r.x$r.min*3)))))), (f.s6.r.x$r.min*5)), 0)
  a[i].min     : min(min((f.s6.r.x$r.min*5), min((f.s4.r.x$r.min*3), min((f.s2.r.x$r.min*2), min(f.s0.x.min, min((f.s0.x.max + -3), min((f.s3.r.x$r.min*4), (f.s5.r.x$r.min*2))))))), 0)

  a_copy[i].max: max(max(max((((((f.s5.r.x$r.max - f.s5.r.x$r.min)/4)*8) + (f.s5.r.x$r.min*2)) + 6), max((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), max((f.s2.r.x$r.max*2), (((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*12) + (f.s4.r.x$r.min*3)) + 9))))), ((((((f.s6.r.x$r.max - f.s6.r.x$r.min)/4)*4) + f.s6.r.x$r.min)*5) + 15)), 0)
  a[i].max     : max(max((((((f.s6.r.x$r.max - f.s6.r.x$r.min)/4)*20) + (f.s6.r.x$r.min*5)) + 15), max((((((f.s4.r.x$r.max - f.s4.r.x$r.min)/4)*12) + (f.s4.r.x$r.min*3)) + 9), max((f.s2.r.x$r.max*2), max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), max((((((f.s3.r.x$r.max - f.s3.r.x$r.min)/4)*16) + (f.s3.r.x$r.min*4)) + 12), (((((f.s5.r.x$r.max - f.s5.r.x$r.min)/4)*8) + (f.s5.r.x$r.min*2)) + 6)))))), 0)

  a_copy[i].min: min(min(ref.s0.x.min, (ref.s2.r.x$r.min*2)), 0)
  a[i].min     : min(min((ref.s2.r.x$r.min*2), ref.s0.x.min), 0)

  a_copy[i].max: max(max(ref.s0.x.max, (ref.s2.r.x$r.max*2)), 0)
  a[i].max     : max(max((ref.s2.r.x$r.max*2), ref.s0.x.max), 0)

  a_copy[i].min: min(min(min((ref.s2.r.x$r.min*2), ref.s0.x.min), (ref.s3.r.x$r.min*4)), 0)
  a[i].min     : min(min((ref.s3.r.x$r.min*4), min(ref.s0.x.min, (ref.s2.r.x$r.min*2))), 0)

  a_copy[i].max: max(max(max((ref.s2.r.x$r.max*2), ref.s0.x.max), (ref.s3.r.x$r.max*4)), 0)
  a[i].max     : max(max((ref.s3.r.x$r.max*4), max(ref.s0.x.max, (ref.s2.r.x$r.max*2))), 0)

  a_copy[i].min: min(min(min((ref.s3.r.x$r.min*4), min(ref.s0.x.min, (ref.s2.r.x$r.min*2))), (ref.s4.r.x$r.min*3)), 0)
  a[i].min     : min(min((ref.s4.r.x$r.min*3), min((ref.s2.r.x$r.min*2), min(ref.s0.x.min, (ref.s3.r.x$r.min*4)))), 0)

  a_copy[i].max: max(max(max((ref.s3.r.x$r.max*4), max(ref.s0.x.max, (ref.s2.r.x$r.max*2))), (ref.s4.r.x$r.max*3)), 0)
  a[i].max     : max(max((ref.s4.r.x$r.max*3), max((ref.s2.r.x$r.max*2), max(ref.s0.x.max, (ref.s3.r.x$r.max*4)))), 0)

  a_copy[i].min: min(min(min((ref.s4.r.x$r.min*3), min((ref.s2.r.x$r.min*2), min(ref.s0.x.min, (ref.s3.r.x$r.min*4)))), (ref.s5.r.x$r.min*2)), 0)
  a[i].min     : min(min((ref.s5.r.x$r.min*2), min((ref.s3.r.x$r.min*4), min(ref.s0.x.min, min((ref.s2.r.x$r.min*2), (ref.s4.r.x$r.min*3))))), 0)

  a_copy[i].max: max(max(max((ref.s4.r.x$r.max*3), max((ref.s2.r.x$r.max*2), max(ref.s0.x.max, (ref.s3.r.x$r.max*4)))), (ref.s5.r.x$r.max*2)), 0)
  a[i].max     : max(max((ref.s5.r.x$r.max*2), max((ref.s3.r.x$r.max*4), max(ref.s0.x.max, max((ref.s2.r.x$r.max*2), (ref.s4.r.x$r.max*3))))), 0)

  a_copy[i].min: min(min(min((ref.s5.r.x$r.min*2), min((ref.s3.r.x$r.min*4), min(ref.s0.x.min, min((ref.s2.r.x$r.min*2), (ref.s4.r.x$r.min*3))))), (ref.s6.r.x$r.min*5)), 0)
  a[i].min     : min(min((ref.s6.r.x$r.min*5), min((ref.s4.r.x$r.min*3), min((ref.s2.r.x$r.min*2), min(ref.s0.x.min, min((ref.s3.r.x$r.min*4), (ref.s5.r.x$r.min*2)))))), 0)

  a_copy[i].max: max(max(max((ref.s5.r.x$r.max*2), max((ref.s3.r.x$r.max*4), max(ref.s0.x.max, max((ref.s2.r.x$r.max*2), (ref.s4.r.x$r.max*3))))), (ref.s6.r.x$r.max*5)), 0)
  a[i].max     : max(max((ref.s6.r.x$r.max*5), max((ref.s4.r.x$r.max*3), max((ref.s2.r.x$r.max*2), max(ref.s0.x.max, max((ref.s3.r.x$r.max*4), (ref.s5.r.x$r.max*2)))))), 0)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/newtons_method.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_newtons_method -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_newtons_method

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/obscure_image_references.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_obscure_image_references -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_obscure_image_references

  a_copy[i].min: min(f.s0.x.min, f.s1.r.x$r.min)
  a[i].min     : min(f.s1.r.x$r.min, f.s0.x.min)

  a_copy[i].max: max(f.s0.x.max, f.s1.r.x$r.max)
  a[i].max     : max(f.s1.r.x$r.max, f.s0.x.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/oddly_sized_output.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_oddly_sized_output -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_oddly_sized_output
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/out_of_memory.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_out_of_memory -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_out_of_memory
Out of memory (halide_malloc returned NULL)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/output_larger_than_two_gigs.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_output_larger_than_two_gigs -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_output_larger_than_two_gigs
Expected: Product of extents for buffer identity_uint8 is 4294967296, which exceeds the maximum size of 2147483647
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel_alloc.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel_alloc -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel_alloc

  a_copy[i].min: min((f.s0.x.min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.min + -1))

  a_copy[i].max: max((f.s0.x.max + 1), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.max + 1))

  a_copy[i].min: min(f.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, f.s0.y.max)

  a_copy[i].max: (f.s0.x.loop_extent + f.s0.x.loop_min)
  a[i].max     : (f.s0.x.loop_min + f.s0.x.loop_extent)

  a_copy[i].min: min((f.s0.x.loop_min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.loop_min + -1))

  a_copy[i].max: max((f.s0.x.loop_min + f.s0.x.loop_extent), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.loop_extent + f.s0.x.loop_min))

  a_copy[i].min: min(f.s0.y, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, f.s0.y)

  a_copy[i].max: max(f.s0.y, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, f.s0.y)

  a_copy[i].min: min((f$2.s0.x$2.min + -1), g$2.s0.x$2.min)
  a[i].min     : min(g$2.s0.x$2.min, (f$2.s0.x$2.min + -1))

  a_copy[i].max: max((f$2.s0.x$2.max + 1), g$2.s0.x$2.max)
  a[i].max     : max(g$2.s0.x$2.max, (f$2.s0.x$2.max + 1))

  a_copy[i].min: min(f$2.s0.y$2.min, g$2.s0.y$2.min)
  a[i].min     : min(g$2.s0.y$2.min, f$2.s0.y$2.min)

  a_copy[i].max: max(f$2.s0.y$2.max, g$2.s0.y$2.max)
  a[i].max     : max(g$2.s0.y$2.max, f$2.s0.y$2.max)

  a_copy[i].max: (f$2.s0.x$2.loop_extent + f$2.s0.x$2.loop_min)
  a[i].max     : (f$2.s0.x$2.loop_min + f$2.s0.x$2.loop_extent)

  a_copy[i].min: min((f$2.s0.x$2.loop_min + -1), g$2.s0.x$2.min)
  a[i].min     : min(g$2.s0.x$2.min, (f$2.s0.x$2.loop_min + -1))

  a_copy[i].max: max((f$2.s0.x$2.loop_min + f$2.s0.x$2.loop_extent), g$2.s0.x$2.max)
  a[i].max     : max(g$2.s0.x$2.max, (f$2.s0.x$2.loop_extent + f$2.s0.x$2.loop_min))

  a_copy[i].min: min(f$2.s0.y$2, g$2.s0.y$2.min)
  a[i].min     : min(g$2.s0.y$2.min, f$2.s0.y$2)

  a_copy[i].max: max(f$2.s0.y$2, g$2.s0.y$2.max)
  a[i].max     : max(g$2.s0.y$2.max, f$2.s0.y$2)

  a_copy[i].min: min((f$3.s0.x$3.min + -1), g$3.s0.x$3.min)
  a[i].min     : min(g$3.s0.x$3.min, (f$3.s0.x$3.min + -1))

  a_copy[i].max: max((f$3.s0.x$3.max + 1), g$3.s0.x$3.max)
  a[i].max     : max(g$3.s0.x$3.max, (f$3.s0.x$3.max + 1))

  a_copy[i].min: min(f$3.s0.y$3.min, g$3.s0.y$3.min)
  a[i].min     : min(g$3.s0.y$3.min, f$3.s0.y$3.min)

  a_copy[i].max: max(f$3.s0.y$3.max, g$3.s0.y$3.max)
  a[i].max     : max(g$3.s0.y$3.max, f$3.s0.y$3.max)

  a_copy[i].max: (f$3.s0.x$3.loop_extent + f$3.s0.x$3.loop_min)
  a[i].max     : (f$3.s0.x$3.loop_min + f$3.s0.x$3.loop_extent)

  a_copy[i].min: min((f$3.s0.x$3.loop_min + -1), g$3.s0.x$3.min)
  a[i].min     : min(g$3.s0.x$3.min, (f$3.s0.x$3.loop_min + -1))

  a_copy[i].max: max((f$3.s0.x$3.loop_min + f$3.s0.x$3.loop_extent), g$3.s0.x$3.max)
  a[i].max     : max(g$3.s0.x$3.max, (f$3.s0.x$3.loop_extent + f$3.s0.x$3.loop_min))

  a_copy[i].min: min(f$3.s0.y$3, g$3.s0.y$3.min)
  a[i].min     : min(g$3.s0.y$3.min, f$3.s0.y$3)

  a_copy[i].max: max(f$3.s0.y$3, g$3.s0.y$3.max)
  a[i].max     : max(g$3.s0.y$3.max, f$3.s0.y$3)

  a_copy[i].min: min((f$4.s0.x$4.min + -1), g$4.s0.x$4.min)
  a[i].min     : min(g$4.s0.x$4.min, (f$4.s0.x$4.min + -1))

  a_copy[i].max: max((f$4.s0.x$4.max + 1), g$4.s0.x$4.max)
  a[i].max     : max(g$4.s0.x$4.max, (f$4.s0.x$4.max + 1))

  a_copy[i].min: min(f$4.s0.y$4.min, g$4.s0.y$4.min)
  a[i].min     : min(g$4.s0.y$4.min, f$4.s0.y$4.min)

  a_copy[i].max: max(f$4.s0.y$4.max, g$4.s0.y$4.max)
  a[i].max     : max(g$4.s0.y$4.max, f$4.s0.y$4.max)

  a_copy[i].max: (f$4.s0.x$4.loop_extent + f$4.s0.x$4.loop_min)
  a[i].max     : (f$4.s0.x$4.loop_min + f$4.s0.x$4.loop_extent)

  a_copy[i].min: min((f$4.s0.x$4.loop_min + -1), g$4.s0.x$4.min)
  a[i].min     : min(g$4.s0.x$4.min, (f$4.s0.x$4.loop_min + -1))

  a_copy[i].max: max((f$4.s0.x$4.loop_min + f$4.s0.x$4.loop_extent), g$4.s0.x$4.max)
  a[i].max     : max(g$4.s0.x$4.max, (f$4.s0.x$4.loop_extent + f$4.s0.x$4.loop_min))

  a_copy[i].min: min(f$4.s0.y$4, g$4.s0.y$4.min)
  a[i].min     : min(g$4.s0.y$4.min, f$4.s0.y$4)

  a_copy[i].max: max(f$4.s0.y$4, g$4.s0.y$4.max)
  a[i].max     : max(g$4.s0.y$4.max, f$4.s0.y$4)

  a_copy[i].min: min((f$5.s0.x$5.min + -1), g$5.s0.x$5.min)
  a[i].min     : min(g$5.s0.x$5.min, (f$5.s0.x$5.min + -1))

  a_copy[i].max: max((f$5.s0.x$5.max + 1), g$5.s0.x$5.max)
  a[i].max     : max(g$5.s0.x$5.max, (f$5.s0.x$5.max + 1))

  a_copy[i].min: min(f$5.s0.y$5.min, g$5.s0.y$5.min)
  a[i].min     : min(g$5.s0.y$5.min, f$5.s0.y$5.min)

  a_copy[i].max: max(f$5.s0.y$5.max, g$5.s0.y$5.max)
  a[i].max     : max(g$5.s0.y$5.max, f$5.s0.y$5.max)

  a_copy[i].max: (f$5.s0.x$5.loop_extent + f$5.s0.x$5.loop_min)
  a[i].max     : (f$5.s0.x$5.loop_min + f$5.s0.x$5.loop_extent)

  a_copy[i].min: min((f$5.s0.x$5.loop_min + -1), g$5.s0.x$5.min)
  a[i].min     : min(g$5.s0.x$5.min, (f$5.s0.x$5.loop_min + -1))

  a_copy[i].max: max((f$5.s0.x$5.loop_min + f$5.s0.x$5.loop_extent), g$5.s0.x$5.max)
  a[i].max     : max(g$5.s0.x$5.max, (f$5.s0.x$5.loop_extent + f$5.s0.x$5.loop_min))

  a_copy[i].min: min(f$5.s0.y$5, g$5.s0.y$5.min)
  a[i].min     : min(g$5.s0.y$5.min, f$5.s0.y$5)

  a_copy[i].max: max(f$5.s0.y$5, g$5.s0.y$5.max)
  a[i].max     : max(g$5.s0.y$5.max, f$5.s0.y$5)

  a_copy[i].min: min((f$6.s0.x$6.min + -1), g$6.s0.x$6.min)
  a[i].min     : min(g$6.s0.x$6.min, (f$6.s0.x$6.min + -1))

  a_copy[i].max: max((f$6.s0.x$6.max + 1), g$6.s0.x$6.max)
  a[i].max     : max(g$6.s0.x$6.max, (f$6.s0.x$6.max + 1))

  a_copy[i].min: min(f$6.s0.y$6.min, g$6.s0.y$6.min)
  a[i].min     : min(g$6.s0.y$6.min, f$6.s0.y$6.min)

  a_copy[i].max: max(f$6.s0.y$6.max, g$6.s0.y$6.max)
  a[i].max     : max(g$6.s0.y$6.max, f$6.s0.y$6.max)

  a_copy[i].max: (f$6.s0.x$6.loop_extent + f$6.s0.x$6.loop_min)
  a[i].max     : (f$6.s0.x$6.loop_min + f$6.s0.x$6.loop_extent)

  a_copy[i].min: min((f$6.s0.x$6.loop_min + -1), g$6.s0.x$6.min)
  a[i].min     : min(g$6.s0.x$6.min, (f$6.s0.x$6.loop_min + -1))

  a_copy[i].max: max((f$6.s0.x$6.loop_min + f$6.s0.x$6.loop_extent), g$6.s0.x$6.max)
  a[i].max     : max(g$6.s0.x$6.max, (f$6.s0.x$6.loop_extent + f$6.s0.x$6.loop_min))

  a_copy[i].min: min(f$6.s0.y$6, g$6.s0.y$6.min)
  a[i].min     : min(g$6.s0.y$6.min, f$6.s0.y$6)

  a_copy[i].max: max(f$6.s0.y$6, g$6.s0.y$6.max)
  a[i].max     : max(g$6.s0.y$6.max, f$6.s0.y$6)

  a_copy[i].min: min((f$7.s0.x$7.min + -1), g$7.s0.x$7.min)
  a[i].min     : min(g$7.s0.x$7.min, (f$7.s0.x$7.min + -1))

  a_copy[i].max: max((f$7.s0.x$7.max + 1), g$7.s0.x$7.max)
  a[i].max     : max(g$7.s0.x$7.max, (f$7.s0.x$7.max + 1))

  a_copy[i].min: min(f$7.s0.y$7.min, g$7.s0.y$7.min)
  a[i].min     : min(g$7.s0.y$7.min, f$7.s0.y$7.min)

  a_copy[i].max: max(f$7.s0.y$7.max, g$7.s0.y$7.max)
  a[i].max     : max(g$7.s0.y$7.max, f$7.s0.y$7.max)

  a_copy[i].max: (f$7.s0.x$7.loop_extent + f$7.s0.x$7.loop_min)
  a[i].max     : (f$7.s0.x$7.loop_min + f$7.s0.x$7.loop_extent)

  a_copy[i].min: min((f$7.s0.x$7.loop_min + -1), g$7.s0.x$7.min)
  a[i].min     : min(g$7.s0.x$7.min, (f$7.s0.x$7.loop_min + -1))

  a_copy[i].max: max((f$7.s0.x$7.loop_min + f$7.s0.x$7.loop_extent), g$7.s0.x$7.max)
  a[i].max     : max(g$7.s0.x$7.max, (f$7.s0.x$7.loop_extent + f$7.s0.x$7.loop_min))

  a_copy[i].min: min(f$7.s0.y$7, g$7.s0.y$7.min)
  a[i].min     : min(g$7.s0.y$7.min, f$7.s0.y$7)

  a_copy[i].max: max(f$7.s0.y$7, g$7.s0.y$7.max)
  a[i].max     : max(g$7.s0.y$7.max, f$7.s0.y$7)

  a_copy[i].min: min((f$8.s0.x$8.min + -1), g$8.s0.x$8.min)
  a[i].min     : min(g$8.s0.x$8.min, (f$8.s0.x$8.min + -1))

  a_copy[i].max: max((f$8.s0.x$8.max + 1), g$8.s0.x$8.max)
  a[i].max     : max(g$8.s0.x$8.max, (f$8.s0.x$8.max + 1))

  a_copy[i].min: min(f$8.s0.y$8.min, g$8.s0.y$8.min)
  a[i].min     : min(g$8.s0.y$8.min, f$8.s0.y$8.min)

  a_copy[i].max: max(f$8.s0.y$8.max, g$8.s0.y$8.max)
  a[i].max     : max(g$8.s0.y$8.max, f$8.s0.y$8.max)

  a_copy[i].max: (f$8.s0.x$8.loop_extent + f$8.s0.x$8.loop_min)
  a[i].max     : (f$8.s0.x$8.loop_min + f$8.s0.x$8.loop_extent)

  a_copy[i].min: min((f$8.s0.x$8.loop_min + -1), g$8.s0.x$8.min)
  a[i].min     : min(g$8.s0.x$8.min, (f$8.s0.x$8.loop_min + -1))

  a_copy[i].max: max((f$8.s0.x$8.loop_min + f$8.s0.x$8.loop_extent), g$8.s0.x$8.max)
  a[i].max     : max(g$8.s0.x$8.max, (f$8.s0.x$8.loop_extent + f$8.s0.x$8.loop_min))

  a_copy[i].min: min(f$8.s0.y$8, g$8.s0.y$8.min)
  a[i].min     : min(g$8.s0.y$8.min, f$8.s0.y$8)

  a_copy[i].max: max(f$8.s0.y$8, g$8.s0.y$8.max)
  a[i].max     : max(g$8.s0.y$8.max, f$8.s0.y$8)

  a_copy[i].min: min((f$9.s0.x$9.min + -1), g$9.s0.x$9.min)
  a[i].min     : min(g$9.s0.x$9.min, (f$9.s0.x$9.min + -1))

  a_copy[i].max: max((f$9.s0.x$9.max + 1), g$9.s0.x$9.max)
  a[i].max     : max(g$9.s0.x$9.max, (f$9.s0.x$9.max + 1))

  a_copy[i].min: min(f$9.s0.y$9.min, g$9.s0.y$9.min)
  a[i].min     : min(g$9.s0.y$9.min, f$9.s0.y$9.min)

  a_copy[i].max: max(f$9.s0.y$9.max, g$9.s0.y$9.max)
  a[i].max     : max(g$9.s0.y$9.max, f$9.s0.y$9.max)

  a_copy[i].max: (f$9.s0.x$9.loop_extent + f$9.s0.x$9.loop_min)
  a[i].max     : (f$9.s0.x$9.loop_min + f$9.s0.x$9.loop_extent)

  a_copy[i].min: min((f$9.s0.x$9.loop_min + -1), g$9.s0.x$9.min)
  a[i].min     : min(g$9.s0.x$9.min, (f$9.s0.x$9.loop_min + -1))

  a_copy[i].max: max((f$9.s0.x$9.loop_min + f$9.s0.x$9.loop_extent), g$9.s0.x$9.max)
  a[i].max     : max(g$9.s0.x$9.max, (f$9.s0.x$9.loop_extent + f$9.s0.x$9.loop_min))

  a_copy[i].min: min(f$9.s0.y$9, g$9.s0.y$9.min)
  a[i].min     : min(g$9.s0.y$9.min, f$9.s0.y$9)

  a_copy[i].max: max(f$9.s0.y$9, g$9.s0.y$9.max)
  a[i].max     : max(g$9.s0.y$9.max, f$9.s0.y$9)

  a_copy[i].min: min((f$10.s0.x$10.min + -1), g$10.s0.x$10.min)
  a[i].min     : min(g$10.s0.x$10.min, (f$10.s0.x$10.min + -1))

  a_copy[i].max: max((f$10.s0.x$10.max + 1), g$10.s0.x$10.max)
  a[i].max     : max(g$10.s0.x$10.max, (f$10.s0.x$10.max + 1))

  a_copy[i].min: min(f$10.s0.y$10.min, g$10.s0.y$10.min)
  a[i].min     : min(g$10.s0.y$10.min, f$10.s0.y$10.min)

  a_copy[i].max: max(f$10.s0.y$10.max, g$10.s0.y$10.max)
  a[i].max     : max(g$10.s0.y$10.max, f$10.s0.y$10.max)

  a_copy[i].max: (f$10.s0.x$10.loop_extent + f$10.s0.x$10.loop_min)
  a[i].max     : (f$10.s0.x$10.loop_min + f$10.s0.x$10.loop_extent)

  a_copy[i].min: min((f$10.s0.x$10.loop_min + -1), g$10.s0.x$10.min)
  a[i].min     : min(g$10.s0.x$10.min, (f$10.s0.x$10.loop_min + -1))

  a_copy[i].max: max((f$10.s0.x$10.loop_min + f$10.s0.x$10.loop_extent), g$10.s0.x$10.max)
  a[i].max     : max(g$10.s0.x$10.max, (f$10.s0.x$10.loop_extent + f$10.s0.x$10.loop_min))

  a_copy[i].min: min(f$10.s0.y$10, g$10.s0.y$10.min)
  a[i].min     : min(g$10.s0.y$10.min, f$10.s0.y$10)

  a_copy[i].max: max(f$10.s0.y$10, g$10.s0.y$10.max)
  a[i].max     : max(g$10.s0.y$10.max, f$10.s0.y$10)

  a_copy[i].min: min((f$11.s0.x$11.min + -1), g$11.s0.x$11.min)
  a[i].min     : min(g$11.s0.x$11.min, (f$11.s0.x$11.min + -1))

  a_copy[i].max: max((f$11.s0.x$11.max + 1), g$11.s0.x$11.max)
  a[i].max     : max(g$11.s0.x$11.max, (f$11.s0.x$11.max + 1))

  a_copy[i].min: min(f$11.s0.y$11.min, g$11.s0.y$11.min)
  a[i].min     : min(g$11.s0.y$11.min, f$11.s0.y$11.min)

  a_copy[i].max: max(f$11.s0.y$11.max, g$11.s0.y$11.max)
  a[i].max     : max(g$11.s0.y$11.max, f$11.s0.y$11.max)

  a_copy[i].max: (f$11.s0.x$11.loop_extent + f$11.s0.x$11.loop_min)
  a[i].max     : (f$11.s0.x$11.loop_min + f$11.s0.x$11.loop_extent)

  a_copy[i].min: min((f$11.s0.x$11.loop_min + -1), g$11.s0.x$11.min)
  a[i].min     : min(g$11.s0.x$11.min, (f$11.s0.x$11.loop_min + -1))

  a_copy[i].max: max((f$11.s0.x$11.loop_min + f$11.s0.x$11.loop_extent), g$11.s0.x$11.max)
  a[i].max     : max(g$11.s0.x$11.max, (f$11.s0.x$11.loop_extent + f$11.s0.x$11.loop_min))

  a_copy[i].min: min(f$11.s0.y$11, g$11.s0.y$11.min)
  a[i].min     : min(g$11.s0.y$11.min, f$11.s0.y$11)

  a_copy[i].max: max(f$11.s0.y$11, g$11.s0.y$11.max)
  a[i].max     : max(g$11.s0.y$11.max, f$11.s0.y$11)

  a_copy[i].min: min((f$12.s0.x$12.min + -1), g$12.s0.x$12.min)
  a[i].min     : min(g$12.s0.x$12.min, (f$12.s0.x$12.min + -1))

  a_copy[i].max: max((f$12.s0.x$12.max + 1), g$12.s0.x$12.max)
  a[i].max     : max(g$12.s0.x$12.max, (f$12.s0.x$12.max + 1))

  a_copy[i].min: min(f$12.s0.y$12.min, g$12.s0.y$12.min)
  a[i].min     : min(g$12.s0.y$12.min, f$12.s0.y$12.min)

  a_copy[i].max: max(f$12.s0.y$12.max, g$12.s0.y$12.max)
  a[i].max     : max(g$12.s0.y$12.max, f$12.s0.y$12.max)

  a_copy[i].max: (f$12.s0.x$12.loop_extent + f$12.s0.x$12.loop_min)
  a[i].max     : (f$12.s0.x$12.loop_min + f$12.s0.x$12.loop_extent)

  a_copy[i].min: min((f$12.s0.x$12.loop_min + -1), g$12.s0.x$12.min)
  a[i].min     : min(g$12.s0.x$12.min, (f$12.s0.x$12.loop_min + -1))

  a_copy[i].max: max((f$12.s0.x$12.loop_min + f$12.s0.x$12.loop_extent), g$12.s0.x$12.max)
  a[i].max     : max(g$12.s0.x$12.max, (f$12.s0.x$12.loop_extent + f$12.s0.x$12.loop_min))

  a_copy[i].min: min(f$12.s0.y$12, g$12.s0.y$12.min)
  a[i].min     : min(g$12.s0.y$12.min, f$12.s0.y$12)

  a_copy[i].max: max(f$12.s0.y$12, g$12.s0.y$12.max)
  a[i].max     : max(g$12.s0.y$12.max, f$12.s0.y$12)

  a_copy[i].min: min((f$13.s0.x$13.min + -1), g$13.s0.x$13.min)
  a[i].min     : min(g$13.s0.x$13.min, (f$13.s0.x$13.min + -1))

  a_copy[i].max: max((f$13.s0.x$13.max + 1), g$13.s0.x$13.max)
  a[i].max     : max(g$13.s0.x$13.max, (f$13.s0.x$13.max + 1))

  a_copy[i].min: min(f$13.s0.y$13.min, g$13.s0.y$13.min)
  a[i].min     : min(g$13.s0.y$13.min, f$13.s0.y$13.min)

  a_copy[i].max: max(f$13.s0.y$13.max, g$13.s0.y$13.max)
  a[i].max     : max(g$13.s0.y$13.max, f$13.s0.y$13.max)

  a_copy[i].max: (f$13.s0.x$13.loop_extent + f$13.s0.x$13.loop_min)
  a[i].max     : (f$13.s0.x$13.loop_min + f$13.s0.x$13.loop_extent)

  a_copy[i].min: min((f$13.s0.x$13.loop_min + -1), g$13.s0.x$13.min)
  a[i].min     : min(g$13.s0.x$13.min, (f$13.s0.x$13.loop_min + -1))

  a_copy[i].max: max((f$13.s0.x$13.loop_min + f$13.s0.x$13.loop_extent), g$13.s0.x$13.max)
  a[i].max     : max(g$13.s0.x$13.max, (f$13.s0.x$13.loop_extent + f$13.s0.x$13.loop_min))

  a_copy[i].min: min(f$13.s0.y$13, g$13.s0.y$13.min)
  a[i].min     : min(g$13.s0.y$13.min, f$13.s0.y$13)

  a_copy[i].max: max(f$13.s0.y$13, g$13.s0.y$13.max)
  a[i].max     : max(g$13.s0.y$13.max, f$13.s0.y$13)

  a_copy[i].min: min((f$14.s0.x$14.min + -1), g$14.s0.x$14.min)
  a[i].min     : min(g$14.s0.x$14.min, (f$14.s0.x$14.min + -1))

  a_copy[i].max: max((f$14.s0.x$14.max + 1), g$14.s0.x$14.max)
  a[i].max     : max(g$14.s0.x$14.max, (f$14.s0.x$14.max + 1))

  a_copy[i].min: min(f$14.s0.y$14.min, g$14.s0.y$14.min)
  a[i].min     : min(g$14.s0.y$14.min, f$14.s0.y$14.min)

  a_copy[i].max: max(f$14.s0.y$14.max, g$14.s0.y$14.max)
  a[i].max     : max(g$14.s0.y$14.max, f$14.s0.y$14.max)

  a_copy[i].max: (f$14.s0.x$14.loop_extent + f$14.s0.x$14.loop_min)
  a[i].max     : (f$14.s0.x$14.loop_min + f$14.s0.x$14.loop_extent)

  a_copy[i].min: min((f$14.s0.x$14.loop_min + -1), g$14.s0.x$14.min)
  a[i].min     : min(g$14.s0.x$14.min, (f$14.s0.x$14.loop_min + -1))

  a_copy[i].max: max((f$14.s0.x$14.loop_min + f$14.s0.x$14.loop_extent), g$14.s0.x$14.max)
  a[i].max     : max(g$14.s0.x$14.max, (f$14.s0.x$14.loop_extent + f$14.s0.x$14.loop_min))

  a_copy[i].min: min(f$14.s0.y$14, g$14.s0.y$14.min)
  a[i].min     : min(g$14.s0.y$14.min, f$14.s0.y$14)

  a_copy[i].max: max(f$14.s0.y$14, g$14.s0.y$14.max)
  a[i].max     : max(g$14.s0.y$14.max, f$14.s0.y$14)

  a_copy[i].min: min((f$15.s0.x$15.min + -1), g$15.s0.x$15.min)
  a[i].min     : min(g$15.s0.x$15.min, (f$15.s0.x$15.min + -1))

  a_copy[i].max: max((f$15.s0.x$15.max + 1), g$15.s0.x$15.max)
  a[i].max     : max(g$15.s0.x$15.max, (f$15.s0.x$15.max + 1))

  a_copy[i].min: min(f$15.s0.y$15.min, g$15.s0.y$15.min)
  a[i].min     : min(g$15.s0.y$15.min, f$15.s0.y$15.min)

  a_copy[i].max: max(f$15.s0.y$15.max, g$15.s0.y$15.max)
  a[i].max     : max(g$15.s0.y$15.max, f$15.s0.y$15.max)

  a_copy[i].max: (f$15.s0.x$15.loop_extent + f$15.s0.x$15.loop_min)
  a[i].max     : (f$15.s0.x$15.loop_min + f$15.s0.x$15.loop_extent)

  a_copy[i].min: min((f$15.s0.x$15.loop_min + -1), g$15.s0.x$15.min)
  a[i].min     : min(g$15.s0.x$15.min, (f$15.s0.x$15.loop_min + -1))

  a_copy[i].max: max((f$15.s0.x$15.loop_min + f$15.s0.x$15.loop_extent), g$15.s0.x$15.max)
  a[i].max     : max(g$15.s0.x$15.max, (f$15.s0.x$15.loop_extent + f$15.s0.x$15.loop_min))

  a_copy[i].min: min(f$15.s0.y$15, g$15.s0.y$15.min)
  a[i].min     : min(g$15.s0.y$15.min, f$15.s0.y$15)

  a_copy[i].max: max(f$15.s0.y$15, g$15.s0.y$15.max)
  a[i].max     : max(g$15.s0.y$15.max, f$15.s0.y$15)

  a_copy[i].min: min((f$16.s0.x$16.min + -1), g$16.s0.x$16.min)
  a[i].min     : min(g$16.s0.x$16.min, (f$16.s0.x$16.min + -1))

  a_copy[i].max: max((f$16.s0.x$16.max + 1), g$16.s0.x$16.max)
  a[i].max     : max(g$16.s0.x$16.max, (f$16.s0.x$16.max + 1))

  a_copy[i].min: min(f$16.s0.y$16.min, g$16.s0.y$16.min)
  a[i].min     : min(g$16.s0.y$16.min, f$16.s0.y$16.min)

  a_copy[i].max: max(f$16.s0.y$16.max, g$16.s0.y$16.max)
  a[i].max     : max(g$16.s0.y$16.max, f$16.s0.y$16.max)

  a_copy[i].max: (f$16.s0.x$16.loop_extent + f$16.s0.x$16.loop_min)
  a[i].max     : (f$16.s0.x$16.loop_min + f$16.s0.x$16.loop_extent)

  a_copy[i].min: min((f$16.s0.x$16.loop_min + -1), g$16.s0.x$16.min)
  a[i].min     : min(g$16.s0.x$16.min, (f$16.s0.x$16.loop_min + -1))

  a_copy[i].max: max((f$16.s0.x$16.loop_min + f$16.s0.x$16.loop_extent), g$16.s0.x$16.max)
  a[i].max     : max(g$16.s0.x$16.max, (f$16.s0.x$16.loop_extent + f$16.s0.x$16.loop_min))

  a_copy[i].min: min(f$16.s0.y$16, g$16.s0.y$16.min)
  a[i].min     : min(g$16.s0.y$16.min, f$16.s0.y$16)

  a_copy[i].max: max(f$16.s0.y$16, g$16.s0.y$16.max)
  a[i].max     : max(g$16.s0.y$16.max, f$16.s0.y$16)

  a_copy[i].min: min((f$17.s0.x$17.min + -1), g$17.s0.x$17.min)
  a[i].min     : min(g$17.s0.x$17.min, (f$17.s0.x$17.min + -1))

  a_copy[i].max: max((f$17.s0.x$17.max + 1), g$17.s0.x$17.max)
  a[i].max     : max(g$17.s0.x$17.max, (f$17.s0.x$17.max + 1))

  a_copy[i].min: min(f$17.s0.y$17.min, g$17.s0.y$17.min)
  a[i].min     : min(g$17.s0.y$17.min, f$17.s0.y$17.min)

  a_copy[i].max: max(f$17.s0.y$17.max, g$17.s0.y$17.max)
  a[i].max     : max(g$17.s0.y$17.max, f$17.s0.y$17.max)

  a_copy[i].max: (f$17.s0.x$17.loop_extent + f$17.s0.x$17.loop_min)
  a[i].max     : (f$17.s0.x$17.loop_min + f$17.s0.x$17.loop_extent)

  a_copy[i].min: min((f$17.s0.x$17.loop_min + -1), g$17.s0.x$17.min)
  a[i].min     : min(g$17.s0.x$17.min, (f$17.s0.x$17.loop_min + -1))

  a_copy[i].max: max((f$17.s0.x$17.loop_min + f$17.s0.x$17.loop_extent), g$17.s0.x$17.max)
  a[i].max     : max(g$17.s0.x$17.max, (f$17.s0.x$17.loop_extent + f$17.s0.x$17.loop_min))

  a_copy[i].min: min(f$17.s0.y$17, g$17.s0.y$17.min)
  a[i].min     : min(g$17.s0.y$17.min, f$17.s0.y$17)

  a_copy[i].max: max(f$17.s0.y$17, g$17.s0.y$17.max)
  a[i].max     : max(g$17.s0.y$17.max, f$17.s0.y$17)

  a_copy[i].min: min((f$18.s0.x$18.min + -1), g$18.s0.x$18.min)
  a[i].min     : min(g$18.s0.x$18.min, (f$18.s0.x$18.min + -1))

  a_copy[i].max: max((f$18.s0.x$18.max + 1), g$18.s0.x$18.max)
  a[i].max     : max(g$18.s0.x$18.max, (f$18.s0.x$18.max + 1))

  a_copy[i].min: min(f$18.s0.y$18.min, g$18.s0.y$18.min)
  a[i].min     : min(g$18.s0.y$18.min, f$18.s0.y$18.min)

  a_copy[i].max: max(f$18.s0.y$18.max, g$18.s0.y$18.max)
  a[i].max     : max(g$18.s0.y$18.max, f$18.s0.y$18.max)

  a_copy[i].max: (f$18.s0.x$18.loop_extent + f$18.s0.x$18.loop_min)
  a[i].max     : (f$18.s0.x$18.loop_min + f$18.s0.x$18.loop_extent)

  a_copy[i].min: min((f$18.s0.x$18.loop_min + -1), g$18.s0.x$18.min)
  a[i].min     : min(g$18.s0.x$18.min, (f$18.s0.x$18.loop_min + -1))

  a_copy[i].max: max((f$18.s0.x$18.loop_min + f$18.s0.x$18.loop_extent), g$18.s0.x$18.max)
  a[i].max     : max(g$18.s0.x$18.max, (f$18.s0.x$18.loop_extent + f$18.s0.x$18.loop_min))

  a_copy[i].min: min(f$18.s0.y$18, g$18.s0.y$18.min)
  a[i].min     : min(g$18.s0.y$18.min, f$18.s0.y$18)

  a_copy[i].max: max(f$18.s0.y$18, g$18.s0.y$18.max)
  a[i].max     : max(g$18.s0.y$18.max, f$18.s0.y$18)

  a_copy[i].min: min((f$19.s0.x$19.min + -1), g$19.s0.x$19.min)
  a[i].min     : min(g$19.s0.x$19.min, (f$19.s0.x$19.min + -1))

  a_copy[i].max: max((f$19.s0.x$19.max + 1), g$19.s0.x$19.max)
  a[i].max     : max(g$19.s0.x$19.max, (f$19.s0.x$19.max + 1))

  a_copy[i].min: min(f$19.s0.y$19.min, g$19.s0.y$19.min)
  a[i].min     : min(g$19.s0.y$19.min, f$19.s0.y$19.min)

  a_copy[i].max: max(f$19.s0.y$19.max, g$19.s0.y$19.max)
  a[i].max     : max(g$19.s0.y$19.max, f$19.s0.y$19.max)

  a_copy[i].max: (f$19.s0.x$19.loop_extent + f$19.s0.x$19.loop_min)
  a[i].max     : (f$19.s0.x$19.loop_min + f$19.s0.x$19.loop_extent)

  a_copy[i].min: min((f$19.s0.x$19.loop_min + -1), g$19.s0.x$19.min)
  a[i].min     : min(g$19.s0.x$19.min, (f$19.s0.x$19.loop_min + -1))

  a_copy[i].max: max((f$19.s0.x$19.loop_min + f$19.s0.x$19.loop_extent), g$19.s0.x$19.max)
  a[i].max     : max(g$19.s0.x$19.max, (f$19.s0.x$19.loop_extent + f$19.s0.x$19.loop_min))

  a_copy[i].min: min(f$19.s0.y$19, g$19.s0.y$19.min)
  a[i].min     : min(g$19.s0.y$19.min, f$19.s0.y$19)

  a_copy[i].max: max(f$19.s0.y$19, g$19.s0.y$19.max)
  a[i].max     : max(g$19.s0.y$19.max, f$19.s0.y$19)

  a_copy[i].min: min((f$20.s0.x$20.min + -1), g$20.s0.x$20.min)
  a[i].min     : min(g$20.s0.x$20.min, (f$20.s0.x$20.min + -1))

  a_copy[i].max: max((f$20.s0.x$20.max + 1), g$20.s0.x$20.max)
  a[i].max     : max(g$20.s0.x$20.max, (f$20.s0.x$20.max + 1))

  a_copy[i].min: min(f$20.s0.y$20.min, g$20.s0.y$20.min)
  a[i].min     : min(g$20.s0.y$20.min, f$20.s0.y$20.min)

  a_copy[i].max: max(f$20.s0.y$20.max, g$20.s0.y$20.max)
  a[i].max     : max(g$20.s0.y$20.max, f$20.s0.y$20.max)

  a_copy[i].max: (f$20.s0.x$20.loop_extent + f$20.s0.x$20.loop_min)
  a[i].max     : (f$20.s0.x$20.loop_min + f$20.s0.x$20.loop_extent)

  a_copy[i].min: min((f$20.s0.x$20.loop_min + -1), g$20.s0.x$20.min)
  a[i].min     : min(g$20.s0.x$20.min, (f$20.s0.x$20.loop_min + -1))

  a_copy[i].max: max((f$20.s0.x$20.loop_min + f$20.s0.x$20.loop_extent), g$20.s0.x$20.max)
  a[i].max     : max(g$20.s0.x$20.max, (f$20.s0.x$20.loop_extent + f$20.s0.x$20.loop_min))

  a_copy[i].min: min(f$20.s0.y$20, g$20.s0.y$20.min)
  a[i].min     : min(g$20.s0.y$20.min, f$20.s0.y$20)

  a_copy[i].max: max(f$20.s0.y$20, g$20.s0.y$20.max)
  a[i].max     : max(g$20.s0.y$20.max, f$20.s0.y$20)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel_gpu_nested.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel_gpu_nested -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel_gpu_nested
No gpu target enabled. Skipping test.

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel_nested.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel_nested -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel_nested
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel_reductions.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel_reductions -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel_reductions

  a_copy[i].min: min(sum.s1.i.min, min(f1.s0.i.min, (f1.s0.i.max + -3)))
  a[i].min     : min((f1.s0.i.max + -3), min(f1.s0.i.min, sum.s1.i.min))

  a_copy[i].max: max(sum.s1.i.max, min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max))
  a[i].max     : max(min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max), sum.s1.i.max)

  a_copy[i].min: min(sum.s0.i.min, sum.s1.i.min)
  a[i].min     : min(sum.s1.i.min, sum.s0.i.min)

  a_copy[i].max: max(sum.s0.i.max, sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, sum.s0.i.max)

  a_copy[i].min: min(sum$2.s1.r2.x$r.min, min(f1.s0.i.min, (f1.s0.i.max + -3)))
  a[i].min     : min((f1.s0.i.max + -3), min(f1.s0.i.min, sum$2.s1.r2.x$r.min))

  a_copy[i].max: max(sum$2.s1.r2.x$r.max, min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max))
  a[i].max     : max(min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max), sum$2.s1.r2.x$r.max)

  a_copy[i].min: min(min((f1.s0.i.max + -3), min(f1.s0.i.min, sum.s1.i.min)), min(sum.s1.i.min, sum.s0.i.min))
  a[i].min     : min(sum.s0.i.min, min(sum.s1.i.min, min(f1.s0.i.min, (f1.s0.i.max + -3))))

  a_copy[i].max: max(max(min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max), sum.s0.i.max), sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, max(sum.s0.i.max, min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max)))

  a_copy[i].min: min(f1.s0.i.min, sum.s1.i.min)
  a[i].min     : min(sum.s1.i.min, f1.s0.i.min)

  a_copy[i].max: max(f1.s0.i.max, sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, f1.s0.i.max)

  a_copy[i].min: min(f1.s0.i.min, sum.s1.i.min)
  a[i].min     : min(sum.s1.i.min, f1.s0.i.min)

  a_copy[i].max: max(f1.s0.i.max, sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, f1.s0.i.max)

  a_copy[i].min: min(f1.s0.i.min, (f1.s0.i.max + -3))
  a[i].min     : min((f1.s0.i.max + -3), f1.s0.i.min)

  a_copy[i].min: min(sum$2.s1.r2.x$r.min, min(f1.s0.i.min, (f1.s0.i.max + -3)))
  a[i].min     : min((f1.s0.i.max + -3), min(f1.s0.i.min, sum$2.s1.r2.x$r.min))

  a_copy[i].max: max(sum$2.s1.r2.x$r.max, min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max))
  a[i].max     : max(min((((((f1.s0.i.max - f1.s0.i.min)/4)*4) + f1.s0.i.min) + 3), f1.s0.i.max), sum$2.s1.r2.x$r.max)

  a_copy[i].min: min(sum.s1.i.min, (f1.s0.i.v1.base + f1.s0.i.v1))
  a[i].min     : min((f1.s0.i.v1 + f1.s0.i.v1.base), sum.s1.i.min)

  a_copy[i].max: max(sum.s1.i.max, (f1.s0.i.v1.base + f1.s0.i.v1))
  a[i].max     : max((f1.s0.i.v1 + f1.s0.i.v1.base), sum.s1.i.max)

  a_copy[i].min: min(sum.s0.i.min, sum.s1.i.min)
  a[i].min     : min(sum.s1.i.min, sum.s0.i.min)

  a_copy[i].max: max(sum.s0.i.max, sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, sum.s0.i.max)

  a_copy[i].min: min(min((f1.s0.i.v1 + f1.s0.i.v1.base), sum.s0.i.min), sum.s1.i.min)
  a[i].min     : min(sum.s1.i.min, min(sum.s0.i.min, (f1.s0.i.v1.base + f1.s0.i.v1)))

  a_copy[i].max: max(max((f1.s0.i.v1 + f1.s0.i.v1.base), sum.s0.i.max), sum.s1.i.max)
  a[i].max     : max(sum.s1.i.max, max(sum.s0.i.max, (f1.s0.i.v1.base + f1.s0.i.v1)))

  a_copy[i].min: min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, sum_rows.s1.j$2.min)

  a_copy[i].max: max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, sum_rows.s1.j$2.max)

  a_copy[i].min: min(min(sum_cols.s1.r1$2.x$r.min, sum_rows.s1.j$2.min), (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16))
  a[i].min     : min(((out.s0.i$5.max + -15)/16), min((out.s0.i$5.min/16), min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min)))

  a_copy[i].max: max(max(sum_cols.s1.r1$2.x$r.max, sum_rows.s1.j$2.max), (min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16))
  a[i].max     : max((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16), max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max))

  a_copy[i].min: (min(sum_cols.s1.r1$2.x$r.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16)) + -1)
  a[i].min     : min(((out.s0.i$5.max + -31)/16), (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1))

  a_copy[i].max: max(sum_cols.s1.r1$2.x$r.max, ((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16) + -1))
  a[i].max     : max(min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1)), sum_cols.s1.r1$2.x$r.max)

  a_copy[i].min: min(min(sum_rows.s0.i$5.min, (sum_rows.s0.i$5.max + -3)), sum_rows.s1.r1$2.x$r.min)
  a[i].min     : min(sum_rows.s1.r1$2.x$r.min, min((sum_rows.s0.i$5.max + -3), sum_rows.s0.i$5.min))

  a_copy[i].max: max(min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max), sum_rows.s1.r1$2.x$r.max)
  a[i].max     : max(sum_rows.s1.r1$2.x$r.max, min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max))

  a_copy[i].min: min(sum_rows.s0.j$2.min, sum_rows.s1.j$2.min)
  a[i].min     : min(sum_rows.s1.j$2.min, sum_rows.s0.j$2.min)

  a_copy[i].max: max(sum_rows.s0.j$2.max, sum_rows.s1.j$2.max)
  a[i].max     : max(sum_rows.s1.j$2.max, sum_rows.s0.j$2.max)

  a_copy[i].min: min(min(sum_cols.s0.j$2.min, (sum_cols.s0.j$2.max + -3)), sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, min((sum_cols.s0.j$2.max + -3), sum_cols.s0.j$2.min))

  a_copy[i].max: max(min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max))

  a_copy[i].min: min(min(((out.s0.i$5.max + -31)/16), (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1)), min(sum_cols.s1.r1$2.x$r.min, min((sum_cols.s0.j$2.max + -3), sum_cols.s0.j$2.min)))
  a[i].min     : min(sum_cols.s0.j$2.min, min((sum_cols.s0.j$2.max + -3), min((sum_cols.s1.r1$2.x$r.min + -1), min(((out.s0.i$5.min/16) + -1), ((out.s0.i$5.max + -31)/16)))))

  a_copy[i].max: max(max(min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1)), min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max)), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, max(min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max), min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1))))

  a_copy[i].min: min(min((sum_rows.s1.r1$2.x$r.min + -1), min(sum_rows.s1.r1$2.x$r.min, min((sum_rows.s0.i$5.max + -3), sum_rows.s0.i$5.min))), 0)
  a[i].min     : min(min(sum_rows.s0.i$5.min, min((sum_rows.s0.i$5.max + -3), (sum_rows.s1.r1$2.x$r.min + -1))), 0)

  a_copy[i].max: max(max((sum_rows.s1.r1$2.x$r.max + -1), max(sum_rows.s1.r1$2.x$r.max, min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max))), 15)
  a[i].max     : max(max(min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max), sum_rows.s1.r1$2.x$r.max), 15)

  a_copy[i].min: min(min(((out.s0.i$5.max + -15)/16), min((out.s0.i$5.min/16), min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min))), min(sum_rows.s1.j$2.min, sum_rows.s0.j$2.min))
  a[i].min     : min(sum_rows.s0.j$2.min, min(sum_cols.s1.r1$2.x$r.min, min(sum_rows.s1.j$2.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16))))

  a_copy[i].max: max(max((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16), max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max)), max(sum_rows.s1.j$2.max, sum_rows.s0.j$2.max))
  a[i].max     : max(sum_rows.s0.j$2.max, max(sum_cols.s1.r1$2.x$r.max, max(sum_rows.s1.j$2.max, (min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16))))

  a_copy[i].min: min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, (out.s0.i$5.min/16))

  a_copy[i].max: max((out.s0.i$5.max/16), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, (out.s0.i$5.max/16))

  a_copy[i].min: min(min(sum_cols.s1.r1$2.x$r.min, (out.s0.i$5.min/16)), sum_rows.s1.j$2.min)
  a[i].min     : min(sum_rows.s1.j$2.min, min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min))

  a_copy[i].max: max(max(sum_cols.s1.r1$2.x$r.max, (out.s0.i$5.max/16)), sum_rows.s1.j$2.max)
  a[i].max     : max(sum_rows.s1.j$2.max, max((out.s0.i$5.max/16), sum_cols.s1.r1$2.x$r.max))

  a_copy[i].min: min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, (out.s0.i$5.min/16))

  a_copy[i].max: max((out.s0.i$5.max/16), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, (out.s0.i$5.max/16))

  a_copy[i].min: (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1)
  a[i].min     : (min(sum_cols.s1.r1$2.x$r.min, (out.s0.i$5.min/16)) + -1)

  a_copy[i].max: max(((out.s0.i$5.max/16) + -1), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, ((out.s0.i$5.max/16) + -1))

  a_copy[i].min: min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, sum_rows.s1.j$2.min)

  a_copy[i].max: max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, sum_rows.s1.j$2.max)

  a_copy[i].min: min(min(sum_cols.s1.r1$2.x$r.min, sum_rows.s1.j$2.min), (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16))
  a[i].min     : min(((out.s0.i$5.max + -15)/16), min((out.s0.i$5.min/16), min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min)))

  a_copy[i].max: max(max(sum_cols.s1.r1$2.x$r.max, sum_rows.s1.j$2.max), (min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16))
  a[i].max     : max((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16), max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max))

  a_copy[i].min: (min(sum_cols.s1.r1$2.x$r.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16)) + -1)
  a[i].min     : min(((out.s0.i$5.max + -31)/16), (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1))

  a_copy[i].max: max(sum_cols.s1.r1$2.x$r.max, ((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16) + -1))
  a[i].max     : max(min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1)), sum_cols.s1.r1$2.x$r.max)

  a_copy[i].min: min(min(sum_rows.s0.i$5.min, (sum_rows.s0.i$5.max + -3)), sum_rows.s1.r1$2.x$r.min)
  a[i].min     : min(sum_rows.s1.r1$2.x$r.min, min((sum_rows.s0.i$5.max + -3), sum_rows.s0.i$5.min))

  a_copy[i].max: max(min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max), sum_rows.s1.r1$2.x$r.max)
  a[i].max     : max(sum_rows.s1.r1$2.x$r.max, min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max))

  a_copy[i].min: min(sum_rows.s0.j$2.min, sum_rows.s1.j$2.min)
  a[i].min     : min(sum_rows.s1.j$2.min, sum_rows.s0.j$2.min)

  a_copy[i].max: max(sum_rows.s0.j$2.max, sum_rows.s1.j$2.max)
  a[i].max     : max(sum_rows.s1.j$2.max, sum_rows.s0.j$2.max)

  a_copy[i].min: min(min((sum_rows.s1.r1$2.x$r.min + -1), min(sum_rows.s1.r1$2.x$r.min, min((sum_rows.s0.i$5.max + -3), sum_rows.s0.i$5.min))), 0)
  a[i].min     : min(min(sum_rows.s0.i$5.min, min((sum_rows.s0.i$5.max + -3), (sum_rows.s1.r1$2.x$r.min + -1))), 0)

  a_copy[i].max: max(max((sum_rows.s1.r1$2.x$r.max + -1), max(sum_rows.s1.r1$2.x$r.max, min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max))), 15)
  a[i].max     : max(max(min((((((sum_rows.s0.i$5.max - sum_rows.s0.i$5.min)/4)*4) + sum_rows.s0.i$5.min) + 3), sum_rows.s0.i$5.max), sum_rows.s1.r1$2.x$r.max), 15)

  a_copy[i].min: min(min(((out.s0.i$5.max + -15)/16), min((out.s0.i$5.min/16), min(sum_rows.s1.j$2.min, sum_cols.s1.r1$2.x$r.min))), min(sum_rows.s1.j$2.min, sum_rows.s0.j$2.min))
  a[i].min     : min(sum_rows.s0.j$2.min, min(sum_cols.s1.r1$2.x$r.min, min(sum_rows.s1.j$2.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16))))

  a_copy[i].max: max(max((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16), max(sum_rows.s1.j$2.max, sum_cols.s1.r1$2.x$r.max)), max(sum_rows.s1.j$2.max, sum_rows.s0.j$2.max))
  a[i].max     : max(sum_rows.s0.j$2.max, max(sum_cols.s1.r1$2.x$r.max, max(sum_rows.s1.j$2.max, (min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16))))

  a_copy[i].min: min(sum_cols.s1.r1$2.x$r.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16))
  a[i].min     : min(((out.s0.i$5.max + -15)/16), min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min))

  a_copy[i].max: max(sum_cols.s1.r1$2.x$r.max, (min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16))
  a[i].max     : max((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16), sum_cols.s1.r1$2.x$r.max)

  a_copy[i].min: (min(sum_cols.s1.r1$2.x$r.min, (min(out.s0.i$5.min, (out.s0.i$5.max + -15))/16)) + -1)
  a[i].min     : min(((out.s0.i$5.max + -31)/16), (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1))

  a_copy[i].max: max(sum_cols.s1.r1$2.x$r.max, ((min((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + 15), out.s0.i$5.max)/16) + -1))
  a[i].max     : max(min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1)), sum_cols.s1.r1$2.x$r.max)

  a_copy[i].min: min(min(sum_cols.s0.j$2.min, (sum_cols.s0.j$2.max + -3)), sum_cols.s1.r1$2.x$r.min)
  a[i].min     : min(sum_cols.s1.r1$2.x$r.min, min((sum_cols.s0.j$2.max + -3), sum_cols.s0.j$2.min))

  a_copy[i].max: max(min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max))

  a_copy[i].min: min(min(((out.s0.i$5.max + -31)/16), (min((out.s0.i$5.min/16), sum_cols.s1.r1$2.x$r.min) + -1)), min(sum_cols.s1.r1$2.x$r.min, min((sum_cols.s0.j$2.max + -3), sum_cols.s0.j$2.min)))
  a[i].min     : min(sum_cols.s0.j$2.min, min((sum_cols.s0.j$2.max + -3), min((sum_cols.s1.r1$2.x$r.min + -1), min(((out.s0.i$5.min/16) + -1), ((out.s0.i$5.max + -31)/16)))))

  a_copy[i].max: max(max(min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1)), min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max)), sum_cols.s1.r1$2.x$r.max)
  a[i].max     : max(sum_cols.s1.r1$2.x$r.max, max(min((((((sum_cols.s0.j$2.max - sum_cols.s0.j$2.min)/4)*4) + sum_cols.s0.j$2.min) + 3), sum_cols.s0.j$2.max), min(((((((out.s0.i$5.max - out.s0.i$5.min)/16)*16) + out.s0.i$5.min) + -1)/16), ((out.s0.i$5.max/16) + -1))))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parallel_rvar.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parallel_rvar -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parallel_rvar
Frac: -8, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -4*_div + -4, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -4*_div$2 + 4, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -4*_div$2 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(((min((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + 1), 0)*4) + f[0].s1.r.x$r.min), f[0].s2.r.x$r.min)
  a[i].min     : min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)

  a_copy[i].max: max((((max((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + -1), 0)*4) + f[0].s1.r.x$r.min) + 3), f[0].s2.r.x$r.max)
  a[i].max     : max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)
  a[i].min     : min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)

  a_copy[i].max: (max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1)
  a[i].max     : (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$5 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min), (f[0].s2.r.x$r.min + 20))
  a[i].min     : min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)

  a_copy[i].max: max(max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), (f[0].s2.r.x$r.max + 20))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)
  a[i].min     : min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)

  a_copy[i].max: (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)
  a[i].max     : (max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$8 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + 8*_div$9 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + -4*_div$8 + 8*_div$9 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min), ((f[0].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 7))
  a[i].max     : max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)

  a_copy[i].max: max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$12 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$12 + -4*_div$13 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$13 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)), (f[0].s3.r2.x$r.min*2))
  a[i].min     : min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 6))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$17 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$16 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$16 + -4*_div$17 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + 4*_div$18, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + -4*_div$17 + 4*_div$18 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2))), f[0].s4.r2.x$r.min)
  a[i].min     : min(f[0].s4.r2.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3))
  a[i].max     : max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)

  a_copy[i].max: max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$21 + -4*_div$23 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$22 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$22 + -4*_div$23 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$23 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s4.r2.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))), (f[0].s4.r2.x$r.min + -1))
  a[i].min     : min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 2))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 1)
  a[i].max     : max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 1)

  a_copy[i].min: min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)

  a_copy[i].max: max(f[1].s1.r.x$r.max, f[1].s2.r.x$r.max)
  a[i].max     : max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max)

  a_copy[i].min: min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)

  a_copy[i].max: max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min), (f[1].s2.r.x$r.min + 20))
  a[i].min     : min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)

  a_copy[i].max: max(max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max), (f[1].s2.r.x$r.max + 20))
  a[i].max     : max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20))

  a_copy[i].min: min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)
  a[i].min     : min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)

  a_copy[i].max: max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)
  a[i].max     : max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min), ((f[1].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20)), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)), (f[1].s3.r2.x$r.min*2))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)), (f[1].s3.r2.x$r.max*2))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2))), f[1].s4.r2.x$r.min)
  a[i].min     : min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))), (f[1].s4.r2.x$r.max + -1))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 1)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$28 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$26 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$26 + -4*_div$28 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$27, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$27 + -4*_div$28 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + sum.s1.r_check.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + sum.s1.r_check.x$r.max + -4*_div$28 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[0].s4.r2.x$r.min + -1), min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))))

  a_copy[i].min: min(min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)), 1)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s4.r2.x$r.min + -1), min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))))

  a_copy[i].min: min(min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)), 1)
Frac: f[0].s0.x.min + -1*f[0].s1.r.x$r.min + -8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.min + -1*f[0].s1.r.x$r.min + -4*_div$31 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -8, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -4*_div$31 + -4, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$32 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -4*_div$32 + 4, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE

  a_copy[i].min: min(f[0].s0.x.min, ((min((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + 1), 0)*4) + f[0].s1.r.x$r.min))
  a[i].min     : min(f[0].s0.x.min, f[0].s1.r.x$r.min)

  a_copy[i].max: max(f[0].s0.x.max, (((max((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + -1), 0)*4) + f[0].s1.r.x$r.min) + 3))
  a[i].max     : max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s0.y.min, f[0].s1.r.y$r.min)
  a[i].min     : min(f[0].s1.r.y$r.min, f[0].s0.y.min)

  a_copy[i].max: max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))
  a[i].max     : max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), f[0].s0.y.max)
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$34 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -4*_div$34 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s0.x.min, f[0].s1.r.x$r.min), f[0].s2.r.x$r.min)
  a[i].min     : min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, f[0].s0.x.min))

  a_copy[i].max: max(max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), f[0].s2.r.x$r.max)
  a[i].max     : max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s0.y.min), f[0].s2.r.y$r.min)
  a[i].min     : min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min))

  a_copy[i].max: max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), f[0].s0.y.max), (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))
  a[i].max     : max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1)))
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$37 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$37 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + 8*_div$38 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + -4*_div$37 + 8*_div$38 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, f[0].s0.x.min)), ((f[0].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)))

  a_copy[i].max: max(max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 7))
  a[i].max     : max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max(f[0].s0.x.max, max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min)), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, min(f[0].s0.y.min, f[0].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)
  a[i].max     : max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max(f[0].s0.y.max, (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))), 0)
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$41 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$41 + -4*_div$42 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$42 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$42 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + 4*_div$43, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + -4*_div$42 + 4*_div$43 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min))), f[0].s4.r2.x$r.min)
  a[i].min     : min(f[0].s4.r2.x$r.min, min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, min(f[0].s0.x.min, ((f[0].s3.r2.x$r.min*2) + 1)))))

  a_copy[i].max: max(max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max(f[0].s0.x.max, max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3))
  a[i].max     : max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, min(f[0].s0.y.min, f[0].s2.r.y$r.min)), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max(f[0].s0.y.max, (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))), 0)
  a[i].max     : max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)

  a_copy[i].min: min(f[1].s0.x.min, f[1].s1.r.x$r.min)
  a[i].min     : min(f[1].s1.r.x$r.min, f[1].s0.x.min)

  a_copy[i].max: max(f[1].s0.x.max, f[1].s1.r.x$r.max)
  a[i].max     : max(f[1].s1.r.x$r.max, f[1].s0.x.max)

  a_copy[i].min: min(f[1].s0.y.min, f[1].s1.r.y$r.min)
  a[i].min     : min(f[1].s1.r.y$r.min, f[1].s0.y.min)

  a_copy[i].max: max(f[1].s0.y.max, f[1].s1.r.y$r.max)
  a[i].max     : max(f[1].s1.r.y$r.max, f[1].s0.y.max)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, f[1].s0.x.min), f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, f[1].s1.r.x$r.min))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, f[1].s0.x.max), f[1].s2.r.x$r.max)
  a[i].max     : max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, f[1].s1.r.x$r.max))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s0.y.min), f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min))

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s0.y.max), f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max))

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, f[1].s1.r.x$r.min)), ((f[1].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s1.r.x$r.min, min(f[1].s0.x.min, f[1].s2.r.x$r.min)))

  a_copy[i].max: max(max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, f[1].s1.r.x$r.max)), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, max(f[1].s0.x.max, f[1].s2.r.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min)), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, min(f[1].s0.y.min, f[1].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, max(f[1].s0.y.max, f[1].s2.r.y$r.max)), 0)

  a_copy[i].min: min(min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s1.r.x$r.min, min(f[1].s0.x.min, f[1].s2.r.x$r.min))), f[1].s4.r2.x$r.min)
  a[i].min     : min(f[1].s4.r2.x$r.min, min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, ((f[1].s3.r2.x$r.min*2) + 1)))))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, max(f[1].s0.x.max, f[1].s2.r.x$r.max))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1)))))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, min(f[1].s0.y.min, f[1].s2.r.y$r.min)), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, max(f[1].s0.y.max, f[1].s2.r.y$r.max)), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)
Frac: sum.s1.r_check.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: sum.s1.r_check.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$48 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$46, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$46 + -4*_div$48 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$47 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$47 + -4*_div$48 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$48 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s0.x.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s0.x.max + -4*_div$48 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(sum.s1.r_check.x$r.min, min((f[0].s4.r2.x$r.min + -1), min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)))), min(f[0].s4.r2.x$r.min, min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, min(f[0].s0.x.min, ((f[0].s3.r2.x$r.min*2) + 1))))))
  a[i].min     : min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), min((f[0].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)))))

  a_copy[i].max: max(max(sum.s1.r_check.x$r.max, max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))))
  a[i].max     : max(f[0].s0.x.max, max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(sum.s1.r_check.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))))

  a_copy[i].min: min(min(min(sum.s1.r_check.y$r.min, min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)), min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min))), 0)
  a[i].min     : min(min(f[0].s0.y.min, min(f[0].s1.r.y$r.min, min(f[0].s2.r.y$r.min, sum.s1.r_check.y$r.min))), 0)

  a_copy[i].max: max(max(max(sum.s1.r_check.y$r.max, (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)), max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)), 1)
  a[i].max     : max(max(f[0].s0.y.max, max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), sum.s1.r_check.y$r.max))), 1)

  a_copy[i].min: min(min(sum.s1.r_check.x$r.min, min((f[1].s4.r2.x$r.min + -1), min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)))), min(f[1].s4.r2.x$r.min, min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, ((f[1].s3.r2.x$r.min*2) + 1))))))
  a[i].min     : min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), min((f[1].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)))))

  a_copy[i].max: max(max(sum.s1.r_check.x$r.max, max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)))), max(f[1].s4.r2.x$r.max, max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1))))))
  a[i].max     : max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s4.r2.x$r.max, sum.s1.r_check.x$r.max)))))

  a_copy[i].min: min(min(min(sum.s1.r_check.y$r.min, min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)), min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min))), 0)
  a[i].min     : min(min(f[1].s0.y.min, min(f[1].s1.r.y$r.min, min(f[1].s2.r.y$r.min, sum.s1.r_check.y$r.min))), 0)

  a_copy[i].max: max(max(max(sum.s1.r_check.y$r.max, max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)), max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)), 1)
  a[i].max     : max(max(f[1].s0.y.max, max(f[1].s1.r.y$r.max, max(f[1].s2.r.y$r.max, sum.s1.r_check.y$r.max))), 1)

  a_copy[i].min: min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)
  a[i].min     : min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)

  a_copy[i].max: max(f[0].s1.r.x$r.max, (f[0].s2.r.x$r.max + 20))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), f[0].s1.r.x$r.max)

  a_copy[i].min: min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)
  a[i].min     : min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)

  a_copy[i].max: max(f[0].s1.r.y$r.max, f[0].s2.r.y$r.max)
  a[i].max     : max(f[0].s2.r.y$r.max, f[0].s1.r.y$r.max)

  a_copy[i].min: min(min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min), (f[0].s3.r2.x$r.min*2))
  a[i].min     : min((f[0].s3.r2.x$r.min*2), min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), f[0].s1.r.x$r.max), ((f[0].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[0].s3.r2.x$r.max*2) + 1), max(f[0].s1.r.x$r.max, (f[0].s2.r.x$r.max + 20)))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[0].s2.r.y$r.max, f[0].s1.r.y$r.max), 0)
  a[i].max     : max(max(f[0].s1.r.y$r.max, f[0].s2.r.y$r.max), 0)

  a_copy[i].min: min(min((f[0].s3.r2.x$r.min*2), min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)), (f[0].s4.r2.x$r.min + -1))
  a[i].min     : min((f[0].s4.r2.x$r.min + -1), min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, (f[0].s3.r2.x$r.min*2))))

  a_copy[i].max: max(max(((f[0].s3.r2.x$r.max*2) + 1), max(f[0].s1.r.x$r.max, (f[0].s2.r.x$r.max + 20))), f[0].s4.r2.x$r.max)
  a[i].max     : max(f[0].s4.r2.x$r.max, max((f[0].s2.r.x$r.max + 20), max(f[0].s1.r.x$r.max, ((f[0].s3.r2.x$r.max*2) + 1))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[0].s1.r.y$r.max, f[0].s2.r.y$r.max), 1)
  a[i].max     : max(max(f[0].s2.r.y$r.max, f[0].s1.r.y$r.max), 1)

  a_copy[i].min: min(min((f[0].s4.r2.x$r.min + -1), min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, (f[0].s3.r2.x$r.min*2)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, (f[0].s4.r2.x$r.min + -1)))))

  a_copy[i].max: max(max(f[0].s4.r2.x$r.max, max((f[0].s2.r.x$r.max + 20), max(f[0].s1.r.x$r.max, ((f[0].s3.r2.x$r.max*2) + 1)))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[0].s3.r2.x$r.max*2) + 1), max(f[0].s1.r.x$r.max, max((f[0].s2.r.x$r.max + 20), f[0].s4.r2.x$r.max))))

  a_copy[i].min: min(min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max(max(f[0].s2.r.y$r.max, f[0].s1.r.y$r.max), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, max(f[0].s1.r.y$r.max, f[0].s2.r.y$r.max)), 1)

  a_copy[i].min: min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2))
  a[i].min     : min((f[0].s3.r2.x$r.min*2), f[0].s2.r.x$r.min)

  a_copy[i].max: max((f[0].s2.r.x$r.max + 20), ((f[0].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[0].s3.r2.x$r.max*2) + 1), (f[0].s2.r.x$r.max + 20))

  a_copy[i].min: min(min((f[0].s3.r2.x$r.min*2), f[0].s2.r.x$r.min), (f[0].s4.r2.x$r.min + -1))
  a[i].min     : min((f[0].s4.r2.x$r.min + -1), min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max(((f[0].s3.r2.x$r.max*2) + 1), (f[0].s2.r.x$r.max + 20)), f[0].s4.r2.x$r.max)
  a[i].max     : max(f[0].s4.r2.x$r.max, max((f[0].s2.r.x$r.max + 20), ((f[0].s3.r2.x$r.max*2) + 1)))

  a_copy[i].min: min(min((f[0].s4.r2.x$r.min + -1), min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, (f[0].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max(f[0].s4.r2.x$r.max, max((f[0].s2.r.x$r.max + 20), ((f[0].s3.r2.x$r.max*2) + 1))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[0].s3.r2.x$r.max*2) + 1), max((f[0].s2.r.x$r.max + 20), f[0].s4.r2.x$r.max)))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[0].s2.r.y$r.max, sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, f[0].s2.r.y$r.max), 1)

  a_copy[i].min: min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1))
  a[i].min     : min((f[0].s4.r2.x$r.min + -1), (f[0].s3.r2.x$r.min*2))

  a_copy[i].max: max(((f[0].s3.r2.x$r.max*2) + 1), f[0].s4.r2.x$r.max)
  a[i].max     : max(f[0].s4.r2.x$r.max, ((f[0].s3.r2.x$r.max*2) + 1))

  a_copy[i].min: min(min((f[0].s4.r2.x$r.min + -1), (f[0].s3.r2.x$r.min*2)), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1)))

  a_copy[i].max: max(max(f[0].s4.r2.x$r.max, ((f[0].s3.r2.x$r.max*2) + 1)), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[0].s3.r2.x$r.max*2) + 1), f[0].s4.r2.x$r.max))

  a_copy[i].min: min((f[0].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, (f[0].s4.r2.x$r.min + -1))

  a_copy[i].max: max(f[0].s4.r2.x$r.max, sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, f[0].s4.r2.x$r.max)

  a_copy[i].min: min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)

  a_copy[i].max: max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20))
  a[i].max     : max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)

  a_copy[i].min: min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)

  a_copy[i].max: max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min), (f[1].s3.r2.x$r.min*2))
  a[i].min     : min((f[1].s3.r2.x$r.min*2), min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min))

  a_copy[i].max: max(max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)

  a_copy[i].min: min(min((f[1].s3.r2.x$r.min*2), min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min((f[1].s4.r2.x$r.min + -1), min(f[1].s2.r.x$r.min, min(f[1].s1.r.x$r.min, (f[1].s3.r2.x$r.min*2))))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max((f[1].s2.r.x$r.max + 20), max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1))))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 1)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 1)

  a_copy[i].min: min(min((f[1].s4.r2.x$r.min + -1), min(f[1].s2.r.x$r.min, min(f[1].s1.r.x$r.min, (f[1].s3.r2.x$r.min*2)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s4.r2.x$r.min + -1)))))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, max((f[1].s2.r.x$r.max + 20), max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1)))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), f[1].s4.r2.x$r.max))))

  a_copy[i].min: min(min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)), 1)

  a_copy[i].min: min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2))
  a[i].min     : min((f[1].s3.r2.x$r.min*2), f[1].s2.r.x$r.min)

  a_copy[i].max: max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), (f[1].s2.r.x$r.max + 20))

  a_copy[i].min: min(min((f[1].s3.r2.x$r.min*2), f[1].s2.r.x$r.min), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min((f[1].s4.r2.x$r.min + -1), min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), (f[1].s2.r.x$r.max + 20)), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1)))

  a_copy[i].min: min(min((f[1].s4.r2.x$r.min + -1), min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, (f[1].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s4.r2.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, f[1].s2.r.y$r.max), 1)

  a_copy[i].min: min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min((f[1].s4.r2.x$r.min + -1), (f[1].s3.r2.x$r.min*2))

  a_copy[i].max: max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1))

  a_copy[i].min: min(min((f[1].s4.r2.x$r.min + -1), (f[1].s3.r2.x$r.min*2)), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1)))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1)), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max))

  a_copy[i].min: min((f[1].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, (f[1].s4.r2.x$r.min + -1))

  a_copy[i].max: max(f[1].s4.r2.x$r.max, sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, f[1].s4.r2.x$r.max)
Frac: -8, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -4*_div$51 + -4, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -4*_div$52 + 4, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -4*_div$52 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(((min((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + 1), 0)*4) + f[0].s1.r.x$r.min), f[0].s2.r.x$r.min)
  a[i].min     : min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)

  a_copy[i].max: max((((max((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + -1), 0)*4) + f[0].s1.r.x$r.min) + 3), f[0].s2.r.x$r.max)
  a[i].max     : max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)
  a[i].min     : min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)

  a_copy[i].max: (max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1)
  a[i].max     : (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$55 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min), (f[0].s2.r.x$r.min + 20))
  a[i].min     : min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)

  a_copy[i].max: max(max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), (f[0].s2.r.x$r.max + 20))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)
  a[i].min     : min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min)

  a_copy[i].max: (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)
  a[i].max     : (max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$58 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + 8*_div$59 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + -4*_div$58 + 8*_div$59 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min), ((f[0].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 7))
  a[i].max     : max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)

  a_copy[i].max: max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$62 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$62 + -4*_div$63 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$63 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)), (f[0].s3.r2.x$r.min*2))
  a[i].min     : min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 6))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$67 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$66 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$66 + -4*_div$67 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + 4*_div$68, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + -4*_div$67 + 4*_div$68 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, (f[0].s3.r2.x$r.min*2))), f[0].s4.r2.x$r.min)
  a[i].min     : min(f[0].s4.r2.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3))
  a[i].max     : max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)

  a_copy[i].max: max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 0)
  a[i].max     : max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 0)
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$71, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$71 + -4*_div$73 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$72 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$72 + -4*_div$73 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$73 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s4.r2.x$r.min, min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))), (f[0].s4.r2.x$r.min + -1))
  a[i].min     : min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 2))
  a[i].max     : max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), 0)

  a_copy[i].max: max((max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1), 1)
  a[i].max     : max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), 1)

  a_copy[i].min: min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)

  a_copy[i].max: max(f[1].s1.r.x$r.max, f[1].s2.r.x$r.max)
  a[i].max     : max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max)

  a_copy[i].min: min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)

  a_copy[i].max: max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min), (f[1].s2.r.x$r.min + 20))
  a[i].min     : min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)

  a_copy[i].max: max(max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max), (f[1].s2.r.x$r.max + 20))
  a[i].max     : max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20))

  a_copy[i].min: min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)
  a[i].min     : min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)

  a_copy[i].max: max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)
  a[i].max     : max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min), ((f[1].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20)), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)), (f[1].s3.r2.x$r.min*2))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)), (f[1].s3.r2.x$r.max*2))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2))), f[1].s4.r2.x$r.min)
  a[i].min     : min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))), (f[1].s4.r2.x$r.max + -1))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 1)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 1)
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$78 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$76 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$76 + -4*_div$78 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$77, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$77 + -4*_div$78 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + sum.s1.r_check.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + sum.s1.r_check.x$r.max + -4*_div$78 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), (f[0].s4.r2.x$r.min + -1)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[0].s4.r2.x$r.min + -1), min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min))))

  a_copy[i].max: max(max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))))

  a_copy[i].min: min(min(min(f[0].s1.r.y$r.min, f[0].s2.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max((max(((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min), ((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min)) + 1), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)), 1)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s4.r2.x$r.min + -1), min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))))

  a_copy[i].min: min(min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)), 1)
Frac: f[0].s0.x.min + -1*f[0].s1.r.x$r.min + -8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.min + -1*f[0].s1.r.x$r.min + -4*_div$81 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -8, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -4*_div$81 + -4, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$82 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -4*_div$82 + 4, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE

  a_copy[i].min: min(f[0].s0.x.min, ((min((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + 1), 0)*4) + f[0].s1.r.x$r.min))
  a[i].min     : min(f[0].s0.x.min, f[0].s1.r.x$r.min)

  a_copy[i].max: max(f[0].s0.x.max, (((max((max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1) + -1), 0)*4) + f[0].s1.r.x$r.min) + 3))
  a[i].max     : max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))

  a_copy[i].min: min(f[0].s0.y.min, f[0].s1.r.y$r.min)
  a[i].min     : min(f[0].s1.r.y$r.min, f[0].s0.y.min)

  a_copy[i].max: max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))
  a[i].max     : max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), f[0].s0.y.max)
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$84 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s2.r.x$r.max + -4*_div$84 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s0.x.min, f[0].s1.r.x$r.min), f[0].s2.r.x$r.min)
  a[i].min     : min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, f[0].s0.x.min))

  a_copy[i].max: max(max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))), f[0].s2.r.x$r.max)
  a[i].max     : max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, f[0].s0.y.min), f[0].s2.r.y$r.min)
  a[i].min     : min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min))

  a_copy[i].max: max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), f[0].s0.y.max), (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))
  a[i].max     : max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1)))
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$87 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$87 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + 8*_div$88 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + 2*f[0].s3.r2.x$r.min + -4*_div$87 + 8*_div$88 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, f[0].s0.x.min)), ((f[0].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min)))

  a_copy[i].max: max(max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))), ((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*4) + f[0].s3.r2.x$r.min)*2) + 7))
  a[i].max     : max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max(f[0].s0.x.max, max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))

  a_copy[i].min: min(min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min)), 0)
  a[i].min     : min(min(f[0].s1.r.y$r.min, min(f[0].s0.y.min, f[0].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)
  a[i].max     : max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max(f[0].s0.y.max, (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))), 0)
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$91 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$91 + -4*_div$92 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s0.x.max + -1*f[0].s1.r.x$r.min + -4*_div$92 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$92 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + 4*_div$93, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s4.r2.x$r.min + -4*_div$92 + 4*_div$93 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((f[0].s3.r2.x$r.min*2) + 1), min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, f[0].s2.r.x$r.min))), f[0].s4.r2.x$r.min)
  a[i].min     : min(f[0].s4.r2.x$r.min, min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, min(f[0].s0.x.min, ((f[0].s3.r2.x$r.min*2) + 1)))))

  a_copy[i].max: max(max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max(f[0].s0.x.max, max(f[0].s2.r.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))), (((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3))
  a[i].max     : max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1))))))

  a_copy[i].min: min(min(f[0].s1.r.y$r.min, min(f[0].s0.y.min, f[0].s2.r.y$r.min)), 0)
  a[i].min     : min(min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max(f[0].s0.y.max, (((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1))), 0)
  a[i].max     : max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)
Frac: sum.s1.r_check.x$r.max + -1*f[0].s1.r.x$r.min + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: sum.s1.r_check.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$98 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$96, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s4.r2.x$r.min + -1*f[0].s1.r.x$r.min + 4*_div$96 + -4*_div$98 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$97 + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 2*f[0].s3.r2.x$r.min + -1*f[0].s1.r.x$r.min + 8*_div$97 + -4*_div$98 + 8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + 17, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f[0].s2.r.x$r.max + -1*f[0].s1.r.x$r.min + -4*_div$98 + 21, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s0.x.max + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*f[0].s1.r.x$r.min + f[0].s0.x.max + -4*_div$98 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(sum.s1.r_check.x$r.min, min((f[0].s4.r2.x$r.min + -1), min((f[0].s3.r2.x$r.min*2), min(f[0].s2.r.x$r.min, f[0].s1.r.x$r.min)))), min(f[0].s4.r2.x$r.min, min(f[0].s2.r.x$r.min, min(f[0].s1.r.x$r.min, min(f[0].s0.x.min, ((f[0].s3.r2.x$r.min*2) + 1))))))
  a[i].min     : min(f[0].s0.x.min, min(f[0].s1.r.x$r.min, min(f[0].s2.r.x$r.min, min((f[0].s3.r2.x$r.min*2), min((f[0].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)))))

  a_copy[i].max: max(max(sum.s1.r_check.x$r.max, max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((f[0].s2.r.x$r.max + 20), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(f[0].s2.r.x$r.max, max(f[0].s0.x.max, max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))))
  a[i].max     : max(f[0].s0.x.max, max((f[0].s2.r.x$r.max + 20), max((((((f[0].s3.r2.x$r.max - f[0].s3.r2.x$r.min)/4)*8) + (f[0].s3.r2.x$r.min*2)) + 7), max((((((f[0].s4.r2.x$r.max - f[0].s4.r2.x$r.min)/4)*4) + f[0].s4.r2.x$r.min) + 3), max(sum.s1.r_check.x$r.max, select(((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4) < 1), (f[0].s1.r.x$r.min + 3), ((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*4) + f[0].s1.r.x$r.min) + -1)))))))

  a_copy[i].min: min(min(min(sum.s1.r_check.y$r.min, min(f[0].s2.r.y$r.min, f[0].s1.r.y$r.min)), min(f[0].s2.r.y$r.min, min(f[0].s0.y.min, f[0].s1.r.y$r.min))), 0)
  a[i].min     : min(min(f[0].s0.y.min, min(f[0].s1.r.y$r.min, min(f[0].s2.r.y$r.min, sum.s1.r_check.y$r.min))), 0)

  a_copy[i].max: max(max(max(sum.s1.r_check.y$r.max, (max(((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min), ((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min)) + 1)), max(max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), max(f[0].s0.y.max, (((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1))), 0)), 1)
  a[i].max     : max(max(f[0].s0.y.max, max((((((((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4)*(((f[0].s1.r.y$r.max - f[0].s1.r.y$r.min) + 2)/2)) + -1)/max((((f[0].s1.r.x$r.max - f[0].s1.r.x$r.min) + 4)/4), 1))*2) + f[0].s1.r.y$r.min) + 1), max((((((f[0].s2.r.y$r.max - f[0].s2.r.y$r.min)/2)*2) + f[0].s2.r.y$r.min) + 1), sum.s1.r_check.y$r.max))), 1)

  a_copy[i].min: min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)

  a_copy[i].max: max(f[1].s1.r.x$r.max, f[1].s2.r.x$r.max)
  a[i].max     : max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max)

  a_copy[i].min: min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)

  a_copy[i].max: max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min), (f[1].s2.r.x$r.min + 20))
  a[i].min     : min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min)

  a_copy[i].max: max(max(f[1].s2.r.x$r.max, f[1].s1.r.x$r.max), (f[1].s2.r.x$r.max + 20))
  a[i].max     : max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20))

  a_copy[i].min: min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)
  a[i].min     : min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min)

  a_copy[i].max: max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)
  a[i].max     : max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, f[1].s2.r.x$r.min), ((f[1].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, (f[1].s2.r.x$r.max + 20)), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)), (f[1].s3.r2.x$r.min*2))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2)))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)), (f[1].s3.r2.x$r.max*2))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, (f[1].s3.r2.x$r.min*2))), f[1].s4.r2.x$r.min)
  a[i].min     : min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), ((f[1].s3.r2.x$r.max*2) + 1))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 0)

  a_copy[i].min: min(min(f[1].s4.r2.x$r.min, min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))), (f[1].s4.r2.x$r.min + -1))
  a[i].min     : min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1))))

  a_copy[i].max: max(max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))), (f[1].s4.r2.x$r.max + -1))
  a[i].max     : max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max), 1)
  a[i].max     : max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), 1)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), (f[1].s4.r2.x$r.min + -1)))), sum.s1.r_check.x$r.min)
  a[i].min     : min(sum.s1.r_check.x$r.min, min((f[1].s4.r2.x$r.min + -1), min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min))))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), f[1].s4.r2.x$r.max))), sum.s1.r_check.x$r.max)
  a[i].max     : max(sum.s1.r_check.x$r.max, max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max))))

  a_copy[i].min: min(min(min(f[1].s1.r.y$r.min, f[1].s2.r.y$r.min), sum.s1.r_check.y$r.min), 0)
  a[i].min     : min(min(sum.s1.r_check.y$r.min, min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max(max(f[1].s1.r.y$r.max, f[1].s2.r.y$r.max), sum.s1.r_check.y$r.max), 1)
  a[i].max     : max(max(sum.s1.r_check.y$r.max, max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)), 1)

  a_copy[i].min: min(f[1].s0.x.min, f[1].s1.r.x$r.min)
  a[i].min     : min(f[1].s1.r.x$r.min, f[1].s0.x.min)

  a_copy[i].max: max(f[1].s0.x.max, f[1].s1.r.x$r.max)
  a[i].max     : max(f[1].s1.r.x$r.max, f[1].s0.x.max)

  a_copy[i].min: min(f[1].s0.y.min, f[1].s1.r.y$r.min)
  a[i].min     : min(f[1].s1.r.y$r.min, f[1].s0.y.min)

  a_copy[i].max: max(f[1].s0.y.max, f[1].s1.r.y$r.max)
  a[i].max     : max(f[1].s1.r.y$r.max, f[1].s0.y.max)

  a_copy[i].min: min(min(f[1].s1.r.x$r.min, f[1].s0.x.min), f[1].s2.r.x$r.min)
  a[i].min     : min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, f[1].s1.r.x$r.min))

  a_copy[i].max: max(max(f[1].s1.r.x$r.max, f[1].s0.x.max), f[1].s2.r.x$r.max)
  a[i].max     : max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, f[1].s1.r.x$r.max))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, f[1].s0.y.min), f[1].s2.r.y$r.min)
  a[i].min     : min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min))

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, f[1].s0.y.max), f[1].s2.r.y$r.max)
  a[i].max     : max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max))

  a_copy[i].min: min(min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, f[1].s1.r.x$r.min)), ((f[1].s3.r2.x$r.min*2) + 1))
  a[i].min     : min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s1.r.x$r.min, min(f[1].s0.x.min, f[1].s2.r.x$r.min)))

  a_copy[i].max: max(max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, f[1].s1.r.x$r.max)), ((f[1].s3.r2.x$r.max*2) + 1))
  a[i].max     : max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, max(f[1].s0.x.max, f[1].s2.r.x$r.max)))

  a_copy[i].min: min(min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min)), 0)
  a[i].min     : min(min(f[1].s1.r.y$r.min, min(f[1].s0.y.min, f[1].s2.r.y$r.min)), 0)

  a_copy[i].max: max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)
  a[i].max     : max(max(f[1].s1.r.y$r.max, max(f[1].s0.y.max, f[1].s2.r.y$r.max)), 0)

  a_copy[i].min: min(min(((f[1].s3.r2.x$r.min*2) + 1), min(f[1].s1.r.x$r.min, min(f[1].s0.x.min, f[1].s2.r.x$r.min))), f[1].s4.r2.x$r.min)
  a[i].min     : min(f[1].s4.r2.x$r.min, min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, ((f[1].s3.r2.x$r.min*2) + 1)))))

  a_copy[i].max: max(max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s1.r.x$r.max, max(f[1].s0.x.max, f[1].s2.r.x$r.max))), f[1].s4.r2.x$r.max)
  a[i].max     : max(f[1].s4.r2.x$r.max, max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1)))))

  a_copy[i].min: min(min(f[1].s1.r.y$r.min, min(f[1].s0.y.min, f[1].s2.r.y$r.min)), 0)
  a[i].min     : min(min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min)), 0)

  a_copy[i].max: max(max(f[1].s1.r.y$r.max, max(f[1].s0.y.max, f[1].s2.r.y$r.max)), 0)
  a[i].max     : max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)

  a_copy[i].min: min(min(sum.s1.r_check.x$r.min, min((f[1].s4.r2.x$r.min + -1), min((f[1].s3.r2.x$r.min*2), min(f[1].s2.r.x$r.min, f[1].s1.r.x$r.min)))), min(f[1].s4.r2.x$r.min, min(f[1].s2.r.x$r.min, min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, ((f[1].s3.r2.x$r.min*2) + 1))))))
  a[i].min     : min(f[1].s0.x.min, min(f[1].s1.r.x$r.min, min(f[1].s2.r.x$r.min, min((f[1].s3.r2.x$r.min*2), min((f[1].s4.r2.x$r.min + -1), sum.s1.r_check.x$r.min)))))

  a_copy[i].max: max(max(sum.s1.r_check.x$r.max, max(f[1].s4.r2.x$r.max, max(((f[1].s3.r2.x$r.max*2) + 1), max((f[1].s2.r.x$r.max + 20), f[1].s1.r.x$r.max)))), max(f[1].s4.r2.x$r.max, max(f[1].s2.r.x$r.max, max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, ((f[1].s3.r2.x$r.max*2) + 1))))))
  a[i].max     : max(f[1].s0.x.max, max(f[1].s1.r.x$r.max, max((f[1].s2.r.x$r.max + 20), max(((f[1].s3.r2.x$r.max*2) + 1), max(f[1].s4.r2.x$r.max, sum.s1.r_check.x$r.max)))))

  a_copy[i].min: min(min(min(sum.s1.r_check.y$r.min, min(f[1].s2.r.y$r.min, f[1].s1.r.y$r.min)), min(f[1].s2.r.y$r.min, min(f[1].s0.y.min, f[1].s1.r.y$r.min))), 0)
  a[i].min     : min(min(f[1].s0.y.min, min(f[1].s1.r.y$r.min, min(f[1].s2.r.y$r.min, sum.s1.r_check.y$r.min))), 0)

  a_copy[i].max: max(max(max(sum.s1.r_check.y$r.max, max(f[1].s2.r.y$r.max, f[1].s1.r.y$r.max)), max(max(f[1].s2.r.y$r.max, max(f[1].s0.y.max, f[1].s1.r.y$r.max)), 0)), 1)
  a[i].max     : max(max(f[1].s0.y.max, max(f[1].s1.r.y$r.max, max(f[1].s2.r.y$r.max, sum.s1.r_check.y$r.max))), 1)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/param.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_param -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_param
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/parameter_constraints.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_parameter_constraints -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_parameter_constraints

  a_copy[i].min: min(int32((float32(f.s0.x.min)/min(max(p, 1.000000f), 10.000000f))), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, int32((float32(f.s0.x.min)/min(max(p, 1.000000f), 10.000000f))))

  a_copy[i].max: max(int32((float32(f.s0.x.max)/min(max(p, 1.000000f), 10.000000f))), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, int32((float32(f.s0.x.max)/min(max(p, 1.000000f), 10.000000f))))

  a_copy[i].min: min(f.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, f.s0.y.max)

  a_copy[i].min: min(int32(select((0.000000f < p.constrained), (float32(f.s0.x.min)/p.constrained), (float32(f.s0.x.max)/p.constrained))), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, int32(select((0.000000f < p.constrained), (float32(f.s0.x.min)/p.constrained), (float32(f.s0.x.max)/p.constrained))))

  a_copy[i].max: max(int32(select((0.000000f < p.constrained), (float32(f.s0.x.max)/p.constrained), (float32(f.s0.x.min)/p.constrained))), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, int32(select((0.000000f < p.constrained), (float32(f.s0.x.max)/p.constrained), (float32(f.s0.x.min)/p.constrained))))

  a_copy[i].min: min(f.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, f.s0.y.max)

  a_copy[i].min: min(int32((float32(f$2.s0.x$2.min)/min(max(p$2, 1.000000f), 10.000000f))), g$2.s0.x$2.min)
  a[i].min     : min(g$2.s0.x$2.min, int32((float32(f$2.s0.x$2.min)/min(max(p$2, 1.000000f), 10.000000f))))

  a_copy[i].max: max(int32((float32(f$2.s0.x$2.max)/min(max(p$2, 1.000000f), 10.000000f))), g$2.s0.x$2.max)
  a[i].max     : max(g$2.s0.x$2.max, int32((float32(f$2.s0.x$2.max)/min(max(p$2, 1.000000f), 10.000000f))))

  a_copy[i].min: min(f$2.s0.y$2.min, g$2.s0.y$2.min)
  a[i].min     : min(g$2.s0.y$2.min, f$2.s0.y$2.min)

  a_copy[i].max: max(f$2.s0.y$2.max, g$2.s0.y$2.max)
  a[i].max     : max(g$2.s0.y$2.max, f$2.s0.y$2.max)

  a_copy[i].min: min(int32(select((0.000000f < p$2.constrained), (float32(f$2.s0.x$2.min)/p$2.constrained), (float32(f$2.s0.x$2.max)/p$2.constrained))), g$2.s0.x$2.min)
  a[i].min     : min(g$2.s0.x$2.min, int32(select((0.000000f < p$2.constrained), (float32(f$2.s0.x$2.min)/p$2.constrained), (float32(f$2.s0.x$2.max)/p$2.constrained))))

  a_copy[i].max: max(int32(select((0.000000f < p$2.constrained), (float32(f$2.s0.x$2.max)/p$2.constrained), (float32(f$2.s0.x$2.min)/p$2.constrained))), g$2.s0.x$2.max)
  a[i].max     : max(g$2.s0.x$2.max, int32(select((0.000000f < p$2.constrained), (float32(f$2.s0.x$2.max)/p$2.constrained), (float32(f$2.s0.x$2.min)/p$2.constrained))))

  a_copy[i].min: min(f$2.s0.y$2.min, g$2.s0.y$2.min)
  a[i].min     : min(g$2.s0.y$2.min, f$2.s0.y$2.min)

  a_copy[i].max: max(f$2.s0.y$2.max, g$2.s0.y$2.max)
  a[i].max     : max(g$2.s0.y$2.max, f$2.s0.y$2.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/partial_application.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_partial_application -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_partial_application
Defining function...
Realizing function...
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/partition_loops_bug.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_partition_loops_bug -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_partition_loops_bug

  a_copy[i].min: min(sum.s1.x.min, output.s0.x.min)
  a[i].min     : min(output.s0.x.min, sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, output.s0.x.max)
  a[i].max     : max(output.s0.x.max, sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, min(output.s0.y.min, (output.s0.y.max + -3)))
  a[i].min     : min((output.s0.y.max + -3), min(output.s0.y.min, sum.s1.y.min))

  a_copy[i].max: max(sum.s1.y.max, min((((((output.s0.y.max - output.s0.y.min)/4)*4) + output.s0.y.min) + 3), output.s0.y.max))
  a[i].max     : max(min((((((output.s0.y.max - output.s0.y.min)/4)*4) + output.s0.y.min) + 3), output.s0.y.max), sum.s1.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(min(output.s0.x.min, sum.s0.x.min), sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, min(sum.s0.x.min, output.s0.x.min))

  a_copy[i].max: max(max(output.s0.x.max, sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, output.s0.x.max))

  a_copy[i].min: min(min((output.s0.y.max + -3), min(output.s0.y.min, sum.s1.y.min)), min(sum.s1.y.min, sum.s0.y.min))
  a[i].min     : min(sum.s0.y.min, min(sum.s1.y.min, min(output.s0.y.min, (output.s0.y.max + -3))))

  a_copy[i].max: max(max(min((((((output.s0.y.max - output.s0.y.min)/4)*4) + output.s0.y.min) + 3), output.s0.y.max), sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, min((((((output.s0.y.max - output.s0.y.min)/4)*4) + output.s0.y.min) + 3), output.s0.y.max)))

  a_copy[i].min: min(output.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, output.s0.x.min)

  a_copy[i].max: max(output.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, output.s0.x.max)

  a_copy[i].min: min(output.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, output.s0.y.min)

  a_copy[i].max: max(output.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, output.s0.y.max)

  a_copy[i].min: min(output.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, output.s0.x.min)

  a_copy[i].max: max(output.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, output.s0.x.max)

  a_copy[i].min: min(output.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, output.s0.y.min)

  a_copy[i].max: max(output.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, output.s0.y.max)

  a_copy[i].min: min(sum.s1.x.min, output.s0.x)
  a[i].min     : min(output.s0.x, sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, output.s0.x)
  a[i].max     : max(output.s0.x, sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, (output.s0.y.v12.base + output.s0.y.v12))
  a[i].min     : min((output.s0.y.v12 + output.s0.y.v12.base), sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, (output.s0.y.v12.base + output.s0.y.v12))
  a[i].max     : max((output.s0.y.v12 + output.s0.y.v12.base), sum.s1.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(min(output.s0.x, sum.s0.x.min), sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, min(sum.s0.x.min, output.s0.x))

  a_copy[i].max: max(max(output.s0.x, sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, output.s0.x))

  a_copy[i].min: min(min((output.s0.y.v12 + output.s0.y.v12.base), sum.s0.y.min), sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, min(sum.s0.y.min, (output.s0.y.v12.base + output.s0.y.v12)))

  a_copy[i].max: max(max((output.s0.y.v12 + output.s0.y.v12.base), sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, (output.s0.y.v12.base + output.s0.y.v12)))

  a_copy[i].min: min(sum$2.s1.x.min, output$2.s0.x.min)
  a[i].min     : min(output$2.s0.x.min, sum$2.s1.x.min)

  a_copy[i].max: max(sum$2.s1.x.max, output$2.s0.x.max)
  a[i].max     : max(output$2.s0.x.max, sum$2.s1.x.max)

  a_copy[i].min: min(sum$2.s1.y.min, output$2.s0.y.min)
  a[i].min     : min(output$2.s0.y.min, sum$2.s1.y.min)

  a_copy[i].max: max(sum$2.s1.y.max, output$2.s0.y.max)
  a[i].max     : max(output$2.s0.y.max, sum$2.s1.y.max)

  a_copy[i].min: min(sum$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, sum$2.s0.x.min)

  a_copy[i].max: max(sum$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, sum$2.s0.x.max)

  a_copy[i].min: min(sum$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, sum$2.s0.y.min)

  a_copy[i].max: max(sum$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, sum$2.s0.y.max)

  a_copy[i].min: min(min(output$2.s0.x.min, sum$2.s0.x.min), sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, min(sum$2.s0.x.min, output$2.s0.x.min))

  a_copy[i].max: max(max(output$2.s0.x.max, sum$2.s0.x.max), sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, max(sum$2.s0.x.max, output$2.s0.x.max))

  a_copy[i].min: min(min(output$2.s0.y.min, sum$2.s0.y.min), sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, min(sum$2.s0.y.min, output$2.s0.y.min))

  a_copy[i].max: max(max(output$2.s0.y.max, sum$2.s0.y.max), sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, max(sum$2.s0.y.max, output$2.s0.y.max))

  a_copy[i].min: min(output$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, output$2.s0.x.min)

  a_copy[i].max: max(output$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, output$2.s0.x.max)

  a_copy[i].min: min(output$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, output$2.s0.y.min)

  a_copy[i].max: max(output$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, output$2.s0.y.max)

  a_copy[i].min: min(output$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, output$2.s0.x.min)

  a_copy[i].max: max(output$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, output$2.s0.x.max)

  a_copy[i].min: min(output$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, output$2.s0.y.min)

  a_copy[i].max: max(output$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, output$2.s0.y.max)

  a_copy[i].min: min(sum$2.s1.x.min, output$2.s0.x)
  a[i].min     : min(output$2.s0.x, sum$2.s1.x.min)

  a_copy[i].max: max(sum$2.s1.x.max, output$2.s0.x)
  a[i].max     : max(output$2.s0.x, sum$2.s1.x.max)

  a_copy[i].min: min(sum$2.s1.y.min, output$2.s0.y)
  a[i].min     : min(output$2.s0.y, sum$2.s1.y.min)

  a_copy[i].max: max(sum$2.s1.y.max, output$2.s0.y)
  a[i].max     : max(output$2.s0.y, sum$2.s1.y.max)

  a_copy[i].min: min(sum$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, sum$2.s0.x.min)

  a_copy[i].max: max(sum$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, sum$2.s0.x.max)

  a_copy[i].min: min(sum$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, sum$2.s0.y.min)

  a_copy[i].max: max(sum$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, sum$2.s0.y.max)

  a_copy[i].min: min(min(output$2.s0.x, sum$2.s0.x.min), sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, min(sum$2.s0.x.min, output$2.s0.x))

  a_copy[i].max: max(max(output$2.s0.x, sum$2.s0.x.max), sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, max(sum$2.s0.x.max, output$2.s0.x))

  a_copy[i].min: min(min(output$2.s0.y, sum$2.s0.y.min), sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, min(sum$2.s0.y.min, output$2.s0.y))

  a_copy[i].max: max(max(output$2.s0.y, sum$2.s0.y.max), sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, max(sum$2.s0.y.max, output$2.s0.y))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/pipeline_set_jit_externs_func.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_pipeline_set_jit_externs_func -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_pipeline_set_jit_externs_func
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/print.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_print -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_print
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/process_some_tiles.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_process_some_tiles -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_process_some_tiles

  a_copy[i].min: min(((brighter.s0.x.min*16) + brighter.s0.xi.min), ((output_tiles.s0.x.min*16) + output_tiles.s0.xi.min))
  a[i].min     : min((output_tiles.s0.xi.min + (output_tiles.s0.x.min*16)), (brighter.s0.xi.min + (brighter.s0.x.min*16)))

  a_copy[i].max: max(((brighter.s0.x.max*16) + brighter.s0.xi.max), ((output_tiles.s0.x.max*16) + output_tiles.s0.xi.max))
  a[i].max     : max((output_tiles.s0.xi.max + (output_tiles.s0.x.max*16)), (brighter.s0.xi.max + (brighter.s0.x.max*16)))

  a_copy[i].min: min(((brighter.s0.y.min*16) + brighter.s0.yi.min), ((output_tiles.s0.y.min*16) + output_tiles.s0.yi.min))
  a[i].min     : min((output_tiles.s0.yi.min + (output_tiles.s0.y.min*16)), (brighter.s0.yi.min + (brighter.s0.y.min*16)))

  a_copy[i].max: max(((brighter.s0.y.max*16) + brighter.s0.yi.max), ((output_tiles.s0.y.max*16) + output_tiles.s0.yi.max))
  a[i].max     : max((output_tiles.s0.yi.max + (output_tiles.s0.y.max*16)), (brighter.s0.yi.max + (brighter.s0.y.max*16)))

  a_copy[i].min: min(output_tiles.s0.xi.min, brighter.s0.xi.min)
  a[i].min     : min(brighter.s0.xi.min, output_tiles.s0.xi.min)

  a_copy[i].max: max(output_tiles.s0.xi.max, brighter.s0.xi.max)
  a[i].max     : max(brighter.s0.xi.max, output_tiles.s0.xi.max)

  a_copy[i].min: min(output_tiles.s0.yi.min, brighter.s0.yi.min)
  a[i].min     : min(brighter.s0.yi.min, output_tiles.s0.yi.min)

  a_copy[i].max: max(output_tiles.s0.yi.max, brighter.s0.yi.max)
  a[i].max     : max(brighter.s0.yi.max, output_tiles.s0.yi.max)

  a_copy[i].min: min(output_tiles.s0.x.min, brighter.s0.x.min)
  a[i].min     : min(brighter.s0.x.min, output_tiles.s0.x.min)

  a_copy[i].max: max(output_tiles.s0.x.max, brighter.s0.x.max)
  a[i].max     : max(brighter.s0.x.max, output_tiles.s0.x.max)

  a_copy[i].min: min(output_tiles.s0.y.min, brighter.s0.y.min)
  a[i].min     : min(brighter.s0.y.min, output_tiles.s0.y.min)

  a_copy[i].max: max(output_tiles.s0.y.max, brighter.s0.y.max)
  a[i].max     : max(brighter.s0.y.max, output_tiles.s0.y.max)

  a_copy[i].min: min((output.s0.x.min/16), output_tiles.s0.x.min)
  a[i].min     : min(output_tiles.s0.x.min, (output.s0.x.min/16))

  a_copy[i].max: max(((((((output.s0.x.max - output.s0.x.min)/16)*16) + output.s0.x.min) + 15)/16), output_tiles.s0.x.max)
  a[i].max     : max(output_tiles.s0.x.max, ((((((output.s0.x.max - output.s0.x.min)/16)*16) + output.s0.x.min) + 15)/16))

  a_copy[i].min: min((output.s0.y.min/16), output_tiles.s0.y.min)
  a[i].min     : min(output_tiles.s0.y.min, (output.s0.y.min/16))

  a_copy[i].max: max(((((((output.s0.y.max - output.s0.y.min)/16)*16) + output.s0.y.min) + 15)/16), output_tiles.s0.y.max)
  a[i].max     : max(output_tiles.s0.y.max, ((((((output.s0.y.max - output.s0.y.min)/16)*16) + output.s0.y.min) + 15)/16))

  a_copy[i].min: ((output_tiles.s0.x.min*16) + output_tiles.s0.xi.min)
  a[i].min     : (output_tiles.s0.xi.min + (output_tiles.s0.x.min*16))

  a_copy[i].max: ((output_tiles.s0.x.max*16) + output_tiles.s0.xi.max)
  a[i].max     : (output_tiles.s0.xi.max + (output_tiles.s0.x.max*16))

  a_copy[i].min: ((output_tiles.s0.y.min*16) + output_tiles.s0.yi.min)
  a[i].min     : (output_tiles.s0.yi.min + (output_tiles.s0.y.min*16))

  a_copy[i].max: ((output_tiles.s0.y.max*16) + output_tiles.s0.yi.max)
  a[i].max     : (output_tiles.s0.yi.max + (output_tiles.s0.y.max*16))

  a_copy[i].min: min(((output.s0.x.xi.base + (((output.s0.x.xi.xi.loop_min*4) + output.s0.x.xi.loop_min) + output.s0.x.xi.v0.loop_min))/16), output_tiles.s0.x.min)
  a[i].min     : min(output_tiles.s0.x.min, ((output.s0.x.xi.base + (((output.s0.x.xi.xi.loop_min*4) + output.s0.x.xi.loop_min) + output.s0.x.xi.v0.loop_min))/16))

  a_copy[i].max: max((((output.s0.x.xi.base + ((((output.s0.x.xi.xi.loop_extent + output.s0.x.xi.xi.loop_min)*4) + output.s0.x.xi.loop_min) + (output.s0.x.xi.v0.loop_extent + output.s0.x.xi.v0.loop_min))) + -5)/16), output_tiles.s0.x.max)
  a[i].max     : max(output_tiles.s0.x.max, (((output.s0.x.xi.base + ((((output.s0.x.xi.xi.loop_extent + output.s0.x.xi.xi.loop_min)*4) + output.s0.x.xi.loop_min) + (output.s0.x.xi.v0.loop_extent + output.s0.x.xi.v0.loop_min))) + -5)/16))

  a_copy[i].min: min(((output.s0.y.yi.base + output.s0.y.yi.loop_min)/16), output_tiles.s0.y.min)
  a[i].min     : min(output_tiles.s0.y.min, ((output.s0.y.yi.base + output.s0.y.yi.loop_min)/16))

  a_copy[i].max: max((((output.s0.y.yi.base + (output.s0.y.yi.loop_extent + output.s0.y.yi.loop_min)) + -1)/16), output_tiles.s0.y.max)
  a[i].max     : max(output_tiles.s0.y.max, (((output.s0.y.yi.base + (output.s0.y.yi.loop_extent + output.s0.y.yi.loop_min)) + -1)/16))

  a_copy[i].min: min(((brighter.s0.x.min*16) + brighter.s0.xi.min), ((output_tiles.s0.x*16) + output_tiles.s0.xi.loop_min))
  a[i].min     : min((output_tiles.s0.xi.loop_min + (output_tiles.s0.x*16)), (brighter.s0.xi.min + (brighter.s0.x.min*16)))

  a_copy[i].max: max(((brighter.s0.x.max*16) + brighter.s0.xi.max), (((output_tiles.s0.x*16) + (output_tiles.s0.xi.loop_extent + output_tiles.s0.xi.loop_min)) + -1))
  a[i].max     : max((((output_tiles.s0.xi.loop_min + output_tiles.s0.xi.loop_extent) + (output_tiles.s0.x*16)) + -1), (brighter.s0.xi.max + (brighter.s0.x.max*16)))

  a_copy[i].min: min(((brighter.s0.y.min*16) + brighter.s0.yi.min), ((output_tiles.s0.y*16) + output_tiles.s0.yi.loop_min))
  a[i].min     : min((output_tiles.s0.yi.loop_min + (output_tiles.s0.y*16)), (brighter.s0.yi.min + (brighter.s0.y.min*16)))

  a_copy[i].max: max(((brighter.s0.y.max*16) + brighter.s0.yi.max), (((output_tiles.s0.y*16) + (output_tiles.s0.yi.loop_extent + output_tiles.s0.yi.loop_min)) + -1))
  a[i].max     : max((((output_tiles.s0.yi.loop_min + output_tiles.s0.yi.loop_extent) + (output_tiles.s0.y*16)) + -1), (brighter.s0.yi.max + (brighter.s0.y.max*16)))

  a_copy[i].min: min(output_tiles.s0.xi.loop_min, brighter.s0.xi.min)
  a[i].min     : min(brighter.s0.xi.min, output_tiles.s0.xi.loop_min)

  a_copy[i].max: max(((output_tiles.s0.xi.loop_extent + output_tiles.s0.xi.loop_min) + -1), brighter.s0.xi.max)
  a[i].max     : max(brighter.s0.xi.max, ((output_tiles.s0.xi.loop_min + output_tiles.s0.xi.loop_extent) + -1))

  a_copy[i].min: min(output_tiles.s0.yi.loop_min, brighter.s0.yi.min)
  a[i].min     : min(brighter.s0.yi.min, output_tiles.s0.yi.loop_min)

  a_copy[i].max: max(((output_tiles.s0.yi.loop_extent + output_tiles.s0.yi.loop_min) + -1), brighter.s0.yi.max)
  a[i].max     : max(brighter.s0.yi.max, ((output_tiles.s0.yi.loop_min + output_tiles.s0.yi.loop_extent) + -1))

  a_copy[i].min: min(output_tiles.s0.x, brighter.s0.x.min)
  a[i].min     : min(brighter.s0.x.min, output_tiles.s0.x)

  a_copy[i].max: max(output_tiles.s0.x, brighter.s0.x.max)
  a[i].max     : max(brighter.s0.x.max, output_tiles.s0.x)

  a_copy[i].min: min(output_tiles.s0.y, brighter.s0.y.min)
  a[i].min     : min(brighter.s0.y.min, output_tiles.s0.y)

  a_copy[i].max: max(output_tiles.s0.y, brighter.s0.y.max)
  a[i].max     : max(brighter.s0.y.max, output_tiles.s0.y)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/random.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_random -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_random

  a_copy[i].min: min(g$2.s0.x.min, f$8.s0.x.min)
  a[i].min     : min(f$8.s0.x.min, g$2.s0.x.min)

  a_copy[i].max: max(g$2.s0.x.max, f$8.s0.x.max)
  a[i].max     : max(f$8.s0.x.max, g$2.s0.x.max)

  a_copy[i].min: min(g$2.s0.y.min, f$8.s0.y.min)
  a[i].min     : min(f$8.s0.y.min, g$2.s0.y.min)

  a_copy[i].max: max(g$2.s0.y.max, f$8.s0.y.max)
  a[i].max     : max(f$8.s0.y.max, g$2.s0.y.max)

  a_copy[i].min: min(g$2.s0.x.min, f$8.s0.x.min)
  a[i].min     : min(f$8.s0.x.min, g$2.s0.x.min)

  a_copy[i].max: max(g$2.s0.x.max, f$8.s0.x.max)
  a[i].max     : max(f$8.s0.x.max, g$2.s0.x.max)

  a_copy[i].min: min(g$2.s0.y.min, f$8.s0.y.min)
  a[i].min     : min(f$8.s0.y.min, g$2.s0.y.min)

  a_copy[i].max: max(g$2.s0.y.max, f$8.s0.y.max)
  a[i].max     : max(f$8.s0.y.max, g$2.s0.y.max)

  a_copy[i].min: min(sum$9.s1.b12.x$r.min, f$11.s0.x.min)
  a[i].min     : min(f$11.s0.x.min, sum$9.s1.b12.x$r.min)

  a_copy[i].max: max(sum$9.s1.b12.x$r.max, f$11.s0.x.max)
  a[i].max     : max(f$11.s0.x.max, sum$9.s1.b12.x$r.max)

  a_copy[i].min: min(sum$9.s1.b12.y$r.min, f$11.s0.y.min)
  a[i].min     : min(f$11.s0.y.min, sum$9.s1.b12.y$r.min)

  a_copy[i].max: max(sum$9.s1.b12.y$r.max, f$11.s0.y.max)
  a[i].max     : max(f$11.s0.y.max, sum$9.s1.b12.y$r.max)

  a_copy[i].min: min(sum$9.s1.b12.x$r.min, f$11.s0.x.min)
  a[i].min     : min(f$11.s0.x.min, sum$9.s1.b12.x$r.min)

  a_copy[i].max: max(sum$9.s1.b12.x$r.max, f$11.s0.x.max)
  a[i].max     : max(f$11.s0.x.max, sum$9.s1.b12.x$r.max)

  a_copy[i].min: min(sum$9.s1.b12.y$r.min, f$11.s0.y.min)
  a[i].min     : min(f$11.s0.y.min, sum$9.s1.b12.y$r.min)

  a_copy[i].max: max(sum$9.s1.b12.y$r.max, f$11.s0.y.max)
  a[i].max     : max(f$11.s0.y.max, sum$9.s1.b12.y$r.max)

  a_copy[i].min: min(sum$10.s1.b12.x$r.min, f$11.s0.x.min)
  a[i].min     : min(f$11.s0.x.min, sum$10.s1.b12.x$r.min)

  a_copy[i].max: max(sum$10.s1.b12.x$r.max, f$11.s0.x.max)
  a[i].max     : max(f$11.s0.x.max, sum$10.s1.b12.x$r.max)

  a_copy[i].min: min(sum$10.s1.b12.y$r.min, f$11.s0.y.min)
  a[i].min     : min(f$11.s0.y.min, sum$10.s1.b12.y$r.min)

  a_copy[i].max: max(sum$10.s1.b12.y$r.max, f$11.s0.y.max)
  a[i].max     : max(f$11.s0.y.max, sum$10.s1.b12.y$r.max)

  a_copy[i].min: min(sum$10.s1.b12.x$r.min, f$11.s0.x.min)
  a[i].min     : min(f$11.s0.x.min, sum$10.s1.b12.x$r.min)

  a_copy[i].max: max(sum$10.s1.b12.x$r.max, f$11.s0.x.max)
  a[i].max     : max(f$11.s0.x.max, sum$10.s1.b12.x$r.max)

  a_copy[i].min: min(sum$10.s1.b12.y$r.min, f$11.s0.y.min)
  a[i].min     : min(f$11.s0.y.min, sum$10.s1.b12.y$r.min)

  a_copy[i].max: max(sum$10.s1.b12.y$r.max, f$11.s0.y.max)
  a[i].max     : max(f$11.s0.y.max, sum$10.s1.b12.y$r.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/realize_larger_than_two_gigs.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_realize_larger_than_two_gigs -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_realize_larger_than_two_gigs

  a_copy[i].min: min(sum.s1.r.x$r.min, big.s0.x.min)
  a[i].min     : min(big.s0.x.min, sum.s1.r.x$r.min)

  a_copy[i].max: max(sum.s1.r.x$r.max, big.s0.x.max)
  a[i].max     : max(big.s0.x.max, sum.s1.r.x$r.max)

  a_copy[i].min: min(sum.s1.r.y$r.min, big.s0.y.min)
  a[i].min     : min(big.s0.y.min, sum.s1.r.y$r.min)

  a_copy[i].max: max(sum.s1.r.y$r.max, big.s0.y.max)
  a[i].max     : max(big.s0.y.max, sum.s1.r.y$r.max)

  a_copy[i].min: min(sum.s1.r.z$r.min, big.s0.z.min)
  a[i].min     : min(big.s0.z.min, sum.s1.r.z$r.min)

  a_copy[i].max: max(sum.s1.r.z$r.max, big.s0.z.max)
  a[i].max     : max(big.s0.z.max, sum.s1.r.z$r.max)

  a_copy[i].min: min(sum.s1.r.x$r.min, big.s0.x.min)
  a[i].min     : min(big.s0.x.min, sum.s1.r.x$r.min)

  a_copy[i].max: max(sum.s1.r.x$r.max, big.s0.x.max)
  a[i].max     : max(big.s0.x.max, sum.s1.r.x$r.max)

  a_copy[i].min: min(sum.s1.r.y$r.min, big.s0.y.min)
  a[i].min     : min(big.s0.y.min, sum.s1.r.y$r.min)

  a_copy[i].max: max(sum.s1.r.y$r.max, big.s0.y.max)
  a[i].max     : max(big.s0.y.max, sum.s1.r.y$r.max)

  a_copy[i].min: min(sum.s1.r.z$r.min, big.s0.z.min)
  a[i].min     : min(big.s0.z.min, sum.s1.r.z$r.min)

  a_copy[i].max: max(sum.s1.r.z$r.max, big.s0.z.max)
  a[i].max     : max(big.s0.z.max, sum.s1.r.z$r.max)
Expected: Total allocation for buffer big is 4294967296, which exceeds the maximum size of 2147483647
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/realize_over_shifted_domain.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_realize_over_shifted_domain -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_realize_over_shifted_domain
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/reduction_chain.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_reduction_chain -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_reduction_chain

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + -1))
  a[i].max     : max((g.s2.y.max + -1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), (g.s2.y.min + 1))
  a[i].min     : min(g.s1.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max(max((g.s2.y.max + -1), g.s1.x.max), (g.s2.y.max + 1))
  a[i].max     : max(g.s1.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s1.x.min + -1))
  a[i].min     : min((g.s1.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s1.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s1.x.min, (g.s2.y.min + -1)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, (g.s2.y.max + 1)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))

  a_copy[i].min: min(min((g.s1.x.min + -1), g.s2.y.min), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))

  a_copy[i].max: max(max((g.s1.x.max + 1), g.s2.y.max), (g.s3.x.max + -1))
  a[i].max     : max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))), (g.s3.x.min + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1))), (g.s3.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min)))

  a_copy[i].max: max(max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max)), (out.s0.x.max + -1))
  a[i].max     : max((out.s0.x.max + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max)))

  a_copy[i].min: min(min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1))), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))))

  a_copy[i].max: max(max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1))), (out.s0.y.max + -1))
  a[i].max     : max((out.s0.y.max + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1))))

  a_copy[i].min: min(min((out.s0.x.min + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))), (out.s0.x.min + 1))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), min(g.s3.x.min, (out.s0.x.min + -1))))

  a_copy[i].max: max(max((out.s0.x.max + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))), (out.s0.x.max + 1))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), max(g.s3.x.max, (out.s0.x.max + 1))))

  a_copy[i].min: min(min((out.s0.y.min + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))), (out.s0.y.min + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (min(g.s3.x.min, out.s0.y.min) + -1)))

  a_copy[i].max: max(max((out.s0.y.max + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1)))), (out.s0.y.max + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (max(g.s3.x.max, out.s0.y.max) + 1)))

  a_copy[i].min: min(g.s0.x.min, g.s1.x.min)
  a[i].min     : min(g.s1.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, g.s1.x.max)
  a[i].max     : max(g.s1.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.y.min, g.s1.x.min)
  a[i].min     : min(g.s1.x.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, g.s1.x.max)
  a[i].max     : max(g.s1.x.max, g.s0.y.max)

  a_copy[i].min: min(min(g.s1.x.min, g.s0.x.min), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, min(g.s0.x.min, g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, g.s0.x.max), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, max(g.s0.x.max, g.s1.x.max))

  a_copy[i].min: min(min(g.s1.x.min, g.s0.y.min), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, min(g.s0.y.min, g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, g.s0.y.max), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, max(g.s0.y.max, g.s1.x.max))

  a_copy[i].min: min(min(g.s2.y.min, min(g.s0.x.min, g.s1.x.min)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min(g.s1.x.min, min(g.s0.x.min, g.s2.y.min)))

  a_copy[i].max: max(max(g.s2.y.max, max(g.s0.x.max, g.s1.x.max)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max(g.s1.x.max, max(g.s0.x.max, g.s2.y.max)))

  a_copy[i].min: min(min(g.s2.y.min, min(g.s0.y.min, g.s1.x.min)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min(g.s1.x.min, min(g.s0.y.min, g.s2.y.min)))

  a_copy[i].max: max(max(g.s2.y.max, max(g.s0.y.max, g.s1.x.max)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max(g.s1.x.max, max(g.s0.y.max, g.s2.y.max)))

  a_copy[i].min: min(g.s1.x.min, f0.s0.x.min)
  a[i].min     : min(f0.s0.x.min, g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, f0.s0.x.max)
  a[i].max     : max(f0.s0.x.max, g.s1.x.max)

  a_copy[i].min: min(g.s1.x.min, f0.s0.y.min)
  a[i].min     : min(f0.s0.y.min, g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, f0.s0.y.max)
  a[i].max     : max(f0.s0.y.max, g.s1.x.max)

  a_copy[i].min: min(g.s2.y.min, f1.s0.x.min)
  a[i].min     : min(f1.s0.x.min, g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, f1.s0.x.max)
  a[i].max     : max(f1.s0.x.max, g.s2.y.max)

  a_copy[i].min: min(g.s2.y.min, f1.s0.y.min)
  a[i].min     : min(f1.s0.y.min, g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, f1.s0.y.max)
  a[i].max     : max(f1.s0.y.max, g.s2.y.max)

  a_copy[i].min: min(g.s3.x.min, f2.s0.x.min)
  a[i].min     : min(f2.s0.x.min, g.s3.x.min)

  a_copy[i].max: max(g.s3.x.max, f2.s0.x.max)
  a[i].max     : max(f2.s0.x.max, g.s3.x.max)

  a_copy[i].min: min(g.s3.x.min, f2.s0.y.min)
  a[i].min     : min(f2.s0.y.min, g.s3.x.min)

  a_copy[i].max: max(g.s3.x.max, f2.s0.y.max)
  a[i].max     : max(f2.s0.y.max, g.s3.x.max)

  a_copy[i].min: min(min(g.s1.x.min, min((g.s2.y.min + -1), min(g.s3.x.min, (out.s0.x.min + -1)))), min(g.s3.x.min, min(g.s1.x.min, min(g.s0.x.min, g.s2.y.min))))
  a[i].min     : min(g.s0.x.min, min((out.s0.x.min + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))))

  a_copy[i].max: max(max(g.s1.x.max, max((g.s2.y.max + 1), max(g.s3.x.max, (out.s0.x.max + 1)))), max(g.s3.x.max, max(g.s1.x.max, max(g.s0.x.max, g.s2.y.max))))
  a[i].max     : max(g.s0.x.max, max((out.s0.x.max + 1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))))

  a_copy[i].min: min(min((g.s1.x.min + -1), min(g.s2.y.min, (min(g.s3.x.min, out.s0.y.min) + -1))), min(g.s3.x.min, min(g.s1.x.min, min(g.s0.y.min, g.s2.y.min))))
  a[i].min     : min(g.s0.y.min, min((out.s0.y.min + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))))

  a_copy[i].max: max(max((g.s1.x.max + 1), max(g.s2.y.max, (max(g.s3.x.max, out.s0.y.max) + 1))), max(g.s3.x.max, max(g.s1.x.max, max(g.s0.y.max, g.s2.y.max))))
  a[i].max     : max(g.s0.y.max, max((out.s0.y.max + 1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1)))))

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + 1))
  a[i].max     : max((g.s2.y.max + 1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min(g.s1.x.min, (g.s2.y.min + -1)))

  a_copy[i].max: max(max((g.s2.y.max + 1), g.s1.x.max), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max(g.s1.x.max, (g.s2.y.max + 1)))

  a_copy[i].min: min(min(g.s2.y.min, (g.s1.x.min + -1)), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min((g.s1.x.min + -1), g.s2.y.min))

  a_copy[i].max: max(max(g.s2.y.max, (g.s1.x.max + 1)), (g.s3.x.max + 1))
  a[i].max     : max((g.s3.x.max + 1), max((g.s1.x.max + 1), g.s2.y.max))

  a_copy[i].min: min(min(g.s3.x.min, min(g.s1.x.min, (g.s2.y.min + -1))), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), min((g.s2.y.min + -1), min(g.s1.x.min, g.s3.x.min)))

  a_copy[i].max: max(max(g.s3.x.max, max(g.s1.x.max, (g.s2.y.max + 1))), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), max((g.s2.y.max + 1), max(g.s1.x.max, g.s3.x.max)))

  a_copy[i].min: min(min((g.s3.x.min + -1), min((g.s1.x.min + -1), g.s2.y.min)), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -1), min(g.s2.y.min, (min(g.s1.x.min, g.s3.x.min) + -1)))

  a_copy[i].max: max(max((g.s3.x.max + 1), max((g.s1.x.max + 1), g.s2.y.max)), (out.s0.y.max + 1))
  a[i].max     : max((out.s0.y.max + 1), max(g.s2.y.max, (max(g.s1.x.max, g.s3.x.max) + 1)))

  a_copy[i].min: min((g.s2.y.min + -1), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max((g.s2.y.max + 1), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s3.x.max + 1))
  a[i].max     : max((g.s3.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s3.x.min, (g.s2.y.min + -1)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(max(g.s3.x.max, (g.s2.y.max + 1)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), g.s2.y.min), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + 1), g.s2.y.max), (out.s0.y.max + 1))
  a[i].max     : max((out.s0.y.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), g.s3.x.min)

  a_copy[i].max: max(g.s3.x.max, (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), g.s3.x.max)

  a_copy[i].min: (min(g.s3.x.min, out.s0.y.min) + -1)
  a[i].min     : (min(out.s0.y.min, g.s3.x.min) + -1)

  a_copy[i].max: (max(g.s3.x.max, out.s0.y.max) + 1)
  a[i].max     : (max(out.s0.y.max, g.s3.x.max) + 1)

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + 1))
  a[i].max     : max((g.s2.y.max + 1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min(g.s1.x.min, (g.s2.y.min + -1)))

  a_copy[i].max: max(max((g.s2.y.max + 1), g.s1.x.max), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max(g.s1.x.max, (g.s2.y.max + 1)))

  a_copy[i].min: min(min(g.s2.y.min, (g.s1.x.min + -1)), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min((g.s1.x.min + -1), g.s2.y.min))

  a_copy[i].max: max(max(g.s2.y.max, (g.s1.x.max + 1)), (g.s3.x.max + 1))
  a[i].max     : max((g.s3.x.max + 1), max((g.s1.x.max + 1), g.s2.y.max))

  a_copy[i].min: min(min(g.s3.x.min, min(g.s1.x.min, (g.s2.y.min + -1))), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), min((g.s2.y.min + -1), min(g.s1.x.min, g.s3.x.min)))

  a_copy[i].max: max(max(g.s3.x.max, max(g.s1.x.max, (g.s2.y.max + 1))), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), max((g.s2.y.max + 1), max(g.s1.x.max, g.s3.x.max)))

  a_copy[i].min: min(min((g.s3.x.min + -1), min((g.s1.x.min + -1), g.s2.y.min)), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -1), min(g.s2.y.min, (min(g.s1.x.min, g.s3.x.min) + -1)))

  a_copy[i].max: max(max((g.s3.x.max + 1), max((g.s1.x.max + 1), g.s2.y.max)), (out.s0.y.max + 1))
  a[i].max     : max((out.s0.y.max + 1), max(g.s2.y.max, (max(g.s1.x.max, g.s3.x.max) + 1)))

  a_copy[i].min: min((g.s2.y.min + -1), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max((g.s2.y.max + 1), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s3.x.max + 1))
  a[i].max     : max((g.s3.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s3.x.min, (g.s2.y.min + -1)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(max(g.s3.x.max, (g.s2.y.max + 1)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), g.s2.y.min), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + 1), g.s2.y.max), (out.s0.y.max + 1))
  a[i].max     : max((out.s0.y.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -1), g.s3.x.min)

  a_copy[i].max: max(g.s3.x.max, (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 1), g.s3.x.max)

  a_copy[i].min: (min(g.s3.x.min, out.s0.y.min) + -1)
  a[i].min     : (min(out.s0.y.min, g.s3.x.min) + -1)

  a_copy[i].max: (max(g.s3.x.max, out.s0.y.max) + 1)
  a[i].max     : (max(out.s0.y.max, g.s3.x.max) + 1)

  a_copy[i].min: min((min(out.s0.y.min, (out.s0.x.min + -1)) + -2), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max((max(out.s0.y.max, (out.s0.x.max + 1)) + 2), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min((min((min(out.s0.y.min, (out.s0.x.min + -1)) + -2), (out.s0.x.min + -1)) + -1), min((min(out.s0.y.min, (out.s0.x.min + -1)) + -1), out.s0.x.min))
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max(max((max(out.s0.y.max, (out.s0.x.max + 1)) + 1), out.s0.x.max), (max((max(out.s0.y.max, (out.s0.x.max + 1)) + 2), (out.s0.x.max + 1)) + 1))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -3), (out.s0.y.min + -2)), (min(out.s0.y.min, (out.s0.x.min + -1)) + -2))
  a[i].min     : min((out.s0.y.min + -2), (out.s0.x.min + -3))

  a_copy[i].max: max(max((out.s0.x.max + 3), (out.s0.y.max + 2)), max(out.s0.y.max, (out.s0.x.max + 1)))
  a[i].max     : max((out.s0.y.max + 2), (out.s0.x.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -4), (out.s0.y.min + -3)), (min(out.s0.y.min, (out.s0.x.min + -1)) + -1))
  a[i].min     : min((out.s0.y.min + -3), (out.s0.x.min + -4))

  a_copy[i].max: max(max((out.s0.x.max + 4), (out.s0.y.max + 3)), (max(out.s0.y.max, (out.s0.x.max + 1)) + 1))
  a[i].max     : max((out.s0.y.max + 3), (out.s0.x.max + 4))

  a_copy[i].min: min(min((out.s0.y.min + -2), (out.s0.x.min + -3)), min(out.s0.y.min, (out.s0.x.min + -1)))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max(max((out.s0.y.max + 2), (out.s0.x.max + 3)), (max(out.s0.y.max, (out.s0.x.max + 1)) + 2))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min(min((out.s0.y.min + -3), (out.s0.x.min + -4)), (min(out.s0.y.min, (out.s0.x.min + -1)) + -1))
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max(max((out.s0.y.max + 3), (out.s0.x.max + 4)), (max(out.s0.y.max, (out.s0.x.max + 1)) + 1))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -3), (out.s0.y.min + -2)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.y.min + -2), (out.s0.x.min + -3))

  a_copy[i].max: max(max((out.s0.x.max + 3), (out.s0.y.max + 2)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.y.max + 2), (out.s0.x.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -4), (out.s0.y.min + -3)), (out.s0.x.min + -2))
  a[i].min     : min((out.s0.y.min + -3), (out.s0.x.min + -4))

  a_copy[i].max: max(max((out.s0.x.max + 4), (out.s0.y.max + 3)), out.s0.x.max)
  a[i].max     : max((out.s0.y.max + 3), (out.s0.x.max + 4))

  a_copy[i].min: min(min((out.s0.y.min + -2), (out.s0.x.min + -3)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max(max((out.s0.y.max + 2), (out.s0.x.max + 3)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min(min((out.s0.y.min + -3), (out.s0.x.min + -4)), out.s0.x.min)
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max(max((out.s0.y.max + 3), (out.s0.x.max + 4)), (out.s0.x.max + 2))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -3), (out.s0.y.min + -2)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.y.min + -2), (out.s0.x.min + -3))

  a_copy[i].max: max(max((out.s0.x.max + 3), (out.s0.y.max + 2)), (out.s0.x.max + -1))
  a[i].max     : max((out.s0.y.max + 2), (out.s0.x.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -4), (out.s0.y.min + -3)), (out.s0.y.min + -1))
  a[i].min     : min((out.s0.y.min + -3), (out.s0.x.min + -4))

  a_copy[i].max: max(max((out.s0.x.max + 4), (out.s0.y.max + 3)), (out.s0.y.max + -1))
  a[i].max     : max((out.s0.y.max + 3), (out.s0.x.max + 4))

  a_copy[i].min: min(min((out.s0.y.min + -2), (out.s0.x.min + -3)), (out.s0.x.min + 1))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max(max((out.s0.y.max + 2), (out.s0.x.max + 3)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min(min((out.s0.y.min + -3), (out.s0.x.min + -4)), (out.s0.y.min + 1))
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max(max((out.s0.y.max + 3), (out.s0.x.max + 4)), (out.s0.y.max + 1))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min((min(out.s0.y.min, (out.s0.x.min + -1)) + -2), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max((max(out.s0.y.max, (out.s0.x.max + 1)) + 2), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min((min(out.s0.y.min, min(min(out.s0.y.min, (min(out.s0.y.min, (out.s0.x.min + -1)) + -2)), (out.s0.x.min + -1))) + -1), min((min(out.s0.y.min, (out.s0.x.min + -1)) + -2), (out.s0.x.min + -1)))
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max((max(out.s0.y.max, max(max(out.s0.y.max, (max(out.s0.y.max, (out.s0.x.max + 1)) + 2)), (out.s0.x.max + 1))) + 1), max((max(out.s0.y.max, (out.s0.x.max + 1)) + 2), (out.s0.x.max + 1)))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -3), (out.s0.y.min + -2)), (min(out.s0.y.min, (out.s0.x.min + -1)) + -1))
  a[i].min     : min((out.s0.y.min + -2), (out.s0.x.min + -3))

  a_copy[i].max: max(max((out.s0.x.max + 3), (out.s0.y.max + 2)), (max(out.s0.y.max, (out.s0.x.max + 1)) + 1))
  a[i].max     : max((out.s0.y.max + 2), (out.s0.x.max + 3))

  a_copy[i].min: min(min((out.s0.x.min + -4), (out.s0.y.min + -3)), (min(out.s0.y.min, (out.s0.x.min + -1)) + -1))
  a[i].min     : min((out.s0.y.min + -3), (out.s0.x.min + -4))

  a_copy[i].max: max(max((out.s0.x.max + 4), (out.s0.y.max + 3)), (max(out.s0.y.max, (out.s0.x.max + 1)) + 1))
  a[i].max     : max((out.s0.y.max + 3), (out.s0.x.max + 4))

  a_copy[i].min: min(min((out.s0.y.min + -2), (out.s0.x.min + -3)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -3), (out.s0.y.min + -2))

  a_copy[i].max: max(max((out.s0.y.max + 2), (out.s0.x.max + 3)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 3), (out.s0.y.max + 2))

  a_copy[i].min: min(min((out.s0.y.min + -3), (out.s0.x.min + -4)), (out.s0.x.min + -1))
  a[i].min     : min((out.s0.x.min + -4), (out.s0.y.min + -3))

  a_copy[i].max: max(max((out.s0.y.max + 3), (out.s0.x.max + 4)), (out.s0.x.max + 1))
  a[i].max     : max((out.s0.x.max + 4), (out.s0.y.max + 3))

  a_copy[i].min: min((out.s0.x.min + -3), (out.s0.y.min + -2))
  a[i].min     : min((out.s0.y.min + -2), (out.s0.x.min + -3))

  a_copy[i].max: max((out.s0.x.max + 3), (out.s0.y.max + 2))
  a[i].max     : max((out.s0.y.max + 2), (out.s0.x.max + 3))

  a_copy[i].min: min((out.s0.x.min + -4), (out.s0.y.min + -3))
  a[i].min     : min((out.s0.y.min + -3), (out.s0.x.min + -4))

  a_copy[i].max: max((out.s0.x.max + 4), (out.s0.y.max + 3))
  a[i].max     : max((out.s0.y.max + 3), (out.s0.x.max + 4))

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + -1))
  a[i].max     : max((g.s2.y.max + -1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), (g.s2.y.min + 1))
  a[i].min     : min(g.s1.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max(max((g.s2.y.max + -1), g.s1.x.max), (g.s2.y.max + 1))
  a[i].max     : max(g.s1.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s1.x.min + -1))
  a[i].min     : min((g.s1.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s1.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s1.x.min, (g.s2.y.min + -1)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, (g.s2.y.max + 1)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))

  a_copy[i].min: min(min((g.s1.x.min + -1), g.s2.y.min), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))

  a_copy[i].max: max(max((g.s1.x.max + 1), g.s2.y.max), (g.s3.x.max + -1))
  a[i].max     : max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))), (g.s3.x.min + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1))), (g.s3.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min)))

  a_copy[i].max: max(max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max)), (out.s0.x + -1))
  a[i].max     : max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max)))

  a_copy[i].min: min(min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1))), (out.s0.y + -1))
  a[i].min     : min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))))

  a_copy[i].max: max(max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1))), (out.s0.y + -1))
  a[i].max     : max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1))))

  a_copy[i].min: min(min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))), (out.s0.x + 1))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), min(g.s3.x.min, (out.s0.x + -1))))

  a_copy[i].max: max(max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))), (out.s0.x + 1))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), max(g.s3.x.max, (out.s0.x + 1))))

  a_copy[i].min: min(min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))), (out.s0.y + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (min(g.s3.x.min, out.s0.y) + -1)))

  a_copy[i].max: max(max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1)))), (out.s0.y + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (max(g.s3.x.max, out.s0.y) + 1)))

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + -1))
  a[i].max     : max((g.s2.y.max + -1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), (g.s2.y.min + 1))
  a[i].min     : min(g.s1.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max(max((g.s2.y.max + -1), g.s1.x.max), (g.s2.y.max + 1))
  a[i].max     : max(g.s1.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s1.x.min + -1))
  a[i].min     : min((g.s1.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s1.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s1.x.min, (g.s2.y.min + -1)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, (g.s2.y.max + 1)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))

  a_copy[i].min: min(min((g.s1.x.min + -1), g.s2.y.min), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))

  a_copy[i].max: max(max((g.s1.x.max + 1), g.s2.y.max), (g.s3.x.max + -1))
  a[i].max     : max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))), (g.s3.x.min + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1))), (g.s3.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min)))

  a_copy[i].max: max(max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max)), (out.s0.x + -1))
  a[i].max     : max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max)))

  a_copy[i].min: min(min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1))), (out.s0.y + -1))
  a[i].min     : min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))))

  a_copy[i].max: max(max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1))), (out.s0.y + -1))
  a[i].max     : max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1))))

  a_copy[i].min: min(min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))), (out.s0.x + 1))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), min(g.s3.x.min, (out.s0.x + -1))))

  a_copy[i].max: max(max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))), (out.s0.x + 1))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), max(g.s3.x.max, (out.s0.x + 1))))

  a_copy[i].min: min(min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))), (out.s0.y + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (min(g.s3.x.min, out.s0.y) + -1)))

  a_copy[i].max: max(max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1)))), (out.s0.y + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (max(g.s3.x.max, out.s0.y) + 1)))

  a_copy[i].min: min(g.s1.x.min, (g.s2.y.min + -1))
  a[i].min     : min((g.s2.y.min + -1), g.s1.x.min)

  a_copy[i].max: max(g.s1.x.max, (g.s2.y.max + -1))
  a[i].max     : max((g.s2.y.max + -1), g.s1.x.max)

  a_copy[i].min: min((g.s1.x.min + -1), g.s2.y.min)
  a[i].min     : min(g.s2.y.min, (g.s1.x.min + -1))

  a_copy[i].max: max((g.s1.x.max + 1), g.s2.y.max)
  a[i].max     : max(g.s2.y.max, (g.s1.x.max + 1))

  a_copy[i].min: min(min((g.s2.y.min + -1), g.s1.x.min), (g.s2.y.min + 1))
  a[i].min     : min(g.s1.x.min, (g.s2.y.min + -1))

  a_copy[i].max: max(max((g.s2.y.max + -1), g.s1.x.max), (g.s2.y.max + 1))
  a[i].max     : max(g.s1.x.max, (g.s2.y.max + 1))

  a_copy[i].min: min(g.s2.y.min, (g.s1.x.min + -1))
  a[i].min     : min((g.s1.x.min + -1), g.s2.y.min)

  a_copy[i].max: max(g.s2.y.max, (g.s1.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), g.s2.y.max)

  a_copy[i].min: min(min(g.s1.x.min, (g.s2.y.min + -1)), g.s3.x.min)
  a[i].min     : min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))

  a_copy[i].max: max(max(g.s1.x.max, (g.s2.y.max + 1)), g.s3.x.max)
  a[i].max     : max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))

  a_copy[i].min: min(min((g.s1.x.min + -1), g.s2.y.min), (g.s3.x.min + -1))
  a[i].min     : min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))

  a_copy[i].max: max(max((g.s1.x.max + 1), g.s2.y.max), (g.s3.x.max + -1))
  a[i].max     : max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1)))

  a_copy[i].min: min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min))

  a_copy[i].max: max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max))

  a_copy[i].min: min(min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))), (g.s3.x.min + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1)))

  a_copy[i].max: max(max((g.s3.x.max + -1), max(g.s2.y.max, (g.s1.x.max + 1))), (g.s3.x.max + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1)))

  a_copy[i].min: min(min(g.s1.x.min, min((g.s2.y.min + -1), g.s3.x.min)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min)))

  a_copy[i].max: max(max(g.s1.x.max, max((g.s2.y.max + 1), g.s3.x.max)), (out.s0.x + -1))
  a[i].max     : max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max)))

  a_copy[i].min: min(min((g.s1.x.min + -1), min(g.s2.y.min, (g.s3.x.min + -1))), (out.s0.y + -1))
  a[i].min     : min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1))))

  a_copy[i].max: max(max((g.s1.x.max + 1), max(g.s2.y.max, (g.s3.x.max + 1))), (out.s0.y + -1))
  a[i].max     : max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1))))

  a_copy[i].min: min(min((out.s0.x + -1), min(g.s3.x.min, min((g.s2.y.min + -1), g.s1.x.min))), (out.s0.x + 1))
  a[i].min     : min(g.s1.x.min, min((g.s2.y.min + -1), min(g.s3.x.min, (out.s0.x + -1))))

  a_copy[i].max: max(max((out.s0.x + -1), max(g.s3.x.max, max((g.s2.y.max + 1), g.s1.x.max))), (out.s0.x + 1))
  a[i].max     : max(g.s1.x.max, max((g.s2.y.max + 1), max(g.s3.x.max, (out.s0.x + 1))))

  a_copy[i].min: min(min((out.s0.y + -1), min((g.s3.x.min + -1), min(g.s2.y.min, (g.s1.x.min + -1)))), (out.s0.y + 1))
  a[i].min     : min((g.s1.x.min + -1), min(g.s2.y.min, (min(g.s3.x.min, out.s0.y) + -1)))

  a_copy[i].max: max(max((out.s0.y + -1), max((g.s3.x.max + 1), max(g.s2.y.max, (g.s1.x.max + 1)))), (out.s0.y + 1))
  a[i].max     : max((g.s1.x.max + 1), max(g.s2.y.max, (max(g.s3.x.max, out.s0.y) + 1)))

  a_copy[i].min: min((min(out.s0.y, (out.s0.x.loop_min + -1)) + -2), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)

  a_copy[i].min: min((min((min(out.s0.y, (out.s0.x.loop_min + -1)) + -2), (out.s0.x.loop_min + -1)) + -1), min((min(out.s0.y, (out.s0.x.loop_min + -1)) + -1), out.s0.x.loop_min))
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: (max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min)) + 1)
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)

  a_copy[i].min: min(min((out.s0.x.loop_min + -3), (out.s0.y + -2)), (min(out.s0.y, (out.s0.x.loop_min + -1)) + -2))
  a[i].min     : min((out.s0.y + -2), (out.s0.x.loop_min + -3))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2), max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)

  a_copy[i].min: min(min((out.s0.x.loop_min + -4), (out.s0.y + -3)), (min(out.s0.y, (out.s0.x.loop_min + -1)) + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x.loop_min + -4))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3), (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 1))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x.loop_min + -3)), min(out.s0.y, (out.s0.x.loop_min + -1)))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x.loop_min + -4)), (min(out.s0.y, (out.s0.x.loop_min + -1)) + -1))
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)

  a_copy[i].min: min(min((out.s0.x.loop_min + -3), (out.s0.y + -2)), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x.loop_min + -3))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)

  a_copy[i].min: min(min((out.s0.x.loop_min + -4), (out.s0.y + -3)), (out.s0.x.loop_min + -2))
  a[i].min     : min((out.s0.y + -3), (out.s0.x.loop_min + -4))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3), ((out.s0.x.loop_extent + out.s0.x.loop_min) + -1))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x.loop_min + -3)), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x.loop_min + -4)), out.s0.x.loop_min)
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3), ((out.s0.x.loop_extent + out.s0.x.loop_min) + 1))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)

  a_copy[i].min: min(min((out.s0.x.loop_min + -3), (out.s0.y + -2)), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x.loop_min + -3))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2), ((out.s0.x.loop_extent + out.s0.x.loop_min) + -2))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)

  a_copy[i].min: min(min((out.s0.x.loop_min + -4), (out.s0.y + -3)), (out.s0.y + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x.loop_min + -4))

  a_copy[i].max: max((max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3), (out.s0.y + -1))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x.loop_min + -3)), (out.s0.x.loop_min + 1))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x.loop_min + -4)), (out.s0.y + 1))
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3), (out.s0.y + 1))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)

  a_copy[i].min: min((min(out.s0.y, (out.s0.x.loop_min + -1)) + -2), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_extent + out.s0.x.loop_min), out.s0.y) + 2)

  a_copy[i].min: min((min(out.s0.y, min(min(out.s0.y, (min(out.s0.y, (out.s0.x.loop_min + -1)) + -2)), (out.s0.x.loop_min + -1))) + -1), min((min(out.s0.y, (out.s0.x.loop_min + -1)) + -2), (out.s0.x.loop_min + -1)))
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: max((max(out.s0.y, max(max(out.s0.y, (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)), (out.s0.x.loop_extent + out.s0.x.loop_min))) + 1), max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min)))
  a[i].max     : (max((out.s0.x.loop_extent + out.s0.x.loop_min), out.s0.y) + 3)

  a_copy[i].min: min(min((out.s0.x.loop_min + -3), (out.s0.y + -2)), (min(out.s0.y, (out.s0.x.loop_min + -1)) + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x.loop_min + -3))

  a_copy[i].max: max((max((out.s0.x.loop_extent + out.s0.x.loop_min), out.s0.y) + 2), (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 1))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)

  a_copy[i].min: min(min((out.s0.x.loop_min + -4), (out.s0.y + -3)), (min(out.s0.y, (out.s0.x.loop_min + -1)) + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x.loop_min + -4))

  a_copy[i].max: max((max((out.s0.x.loop_extent + out.s0.x.loop_min), out.s0.y) + 3), (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 1))
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x.loop_min + -3)), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.x.loop_min + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x.loop_min + -4)), (out.s0.x.loop_min + -1))
  a[i].min     : min((out.s0.x.loop_min + -4), (out.s0.y + -3))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3), (out.s0.x.loop_extent + out.s0.x.loop_min))
  a[i].max     : (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)

  a_copy[i].min: min((out.s0.x.loop_min + -3), (out.s0.y + -2))
  a[i].min     : min((out.s0.y + -2), (out.s0.x.loop_min + -3))

  a_copy[i].max: (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 2)
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 2)

  a_copy[i].min: min((out.s0.x.loop_min + -4), (out.s0.y + -3))
  a[i].min     : min((out.s0.y + -3), (out.s0.x.loop_min + -4))

  a_copy[i].max: (max((out.s0.x.loop_min + out.s0.x.loop_extent), out.s0.y) + 3)
  a[i].max     : (max(out.s0.y, (out.s0.x.loop_extent + out.s0.x.loop_min)) + 3)

  a_copy[i].min: min((min(out.s0.y, (out.s0.x + -1)) + -2), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x + 1)) + 2), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min((min((min(out.s0.y, (out.s0.x + -1)) + -2), (out.s0.x + -1)) + -1), min((min(out.s0.y, (out.s0.x + -1)) + -1), out.s0.x))
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max(max((max(out.s0.y, (out.s0.x + 1)) + 1), out.s0.x), (max((max(out.s0.y, (out.s0.x + 1)) + 2), (out.s0.x + 1)) + 1))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min(min((out.s0.x + -3), (out.s0.y + -2)), (min(out.s0.y, (out.s0.x + -1)) + -2))
  a[i].min     : min((out.s0.y + -2), (out.s0.x + -3))

  a_copy[i].max: max(max((out.s0.x + 3), (out.s0.y + 2)), max(out.s0.y, (out.s0.x + 1)))
  a[i].max     : max((out.s0.y + 2), (out.s0.x + 3))

  a_copy[i].min: min(min((out.s0.x + -4), (out.s0.y + -3)), (min(out.s0.y, (out.s0.x + -1)) + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x + -4))

  a_copy[i].max: max(max((out.s0.x + 4), (out.s0.y + 3)), (max(out.s0.y, (out.s0.x + 1)) + 1))
  a[i].max     : max((out.s0.y + 3), (out.s0.x + 4))

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x + -3)), min(out.s0.y, (out.s0.x + -1)))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max(max((out.s0.y + 2), (out.s0.x + 3)), (max(out.s0.y, (out.s0.x + 1)) + 2))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x + -4)), (min(out.s0.y, (out.s0.x + -1)) + -1))
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max(max((out.s0.y + 3), (out.s0.x + 4)), (max(out.s0.y, (out.s0.x + 1)) + 1))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min(min((out.s0.x + -3), (out.s0.y + -2)), (out.s0.x + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x + -3))

  a_copy[i].max: max(max((out.s0.x + 3), (out.s0.y + 2)), (out.s0.x + 1))
  a[i].max     : max((out.s0.y + 2), (out.s0.x + 3))

  a_copy[i].min: min(min((out.s0.x + -4), (out.s0.y + -3)), (out.s0.x + -2))
  a[i].min     : min((out.s0.y + -3), (out.s0.x + -4))

  a_copy[i].max: max(max((out.s0.x + 4), (out.s0.y + 3)), out.s0.x)
  a[i].max     : max((out.s0.y + 3), (out.s0.x + 4))

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x + -3)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max(max((out.s0.y + 2), (out.s0.x + 3)), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x + -4)), out.s0.x)
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max(max((out.s0.y + 3), (out.s0.x + 4)), (out.s0.x + 2))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min(min((out.s0.x + -3), (out.s0.y + -2)), (out.s0.x + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x + -3))

  a_copy[i].max: max(max((out.s0.x + 3), (out.s0.y + 2)), (out.s0.x + -1))
  a[i].max     : max((out.s0.y + 2), (out.s0.x + 3))

  a_copy[i].min: min(min((out.s0.x + -4), (out.s0.y + -3)), (out.s0.y + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x + -4))

  a_copy[i].max: max(max((out.s0.x + 4), (out.s0.y + 3)), (out.s0.y + -1))
  a[i].max     : max((out.s0.y + 3), (out.s0.x + 4))

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x + -3)), (out.s0.x + 1))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max(max((out.s0.y + 2), (out.s0.x + 3)), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x + -4)), (out.s0.y + 1))
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max(max((out.s0.y + 3), (out.s0.x + 4)), (out.s0.y + 1))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min((min(out.s0.y, (out.s0.x + -1)) + -2), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max((max(out.s0.y, (out.s0.x + 1)) + 2), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min((min(out.s0.y, min(min(out.s0.y, (min(out.s0.y, (out.s0.x + -1)) + -2)), (out.s0.x + -1))) + -1), min((min(out.s0.y, (out.s0.x + -1)) + -2), (out.s0.x + -1)))
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max((max(out.s0.y, max(max(out.s0.y, (max(out.s0.y, (out.s0.x + 1)) + 2)), (out.s0.x + 1))) + 1), max((max(out.s0.y, (out.s0.x + 1)) + 2), (out.s0.x + 1)))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min(min((out.s0.x + -3), (out.s0.y + -2)), (min(out.s0.y, (out.s0.x + -1)) + -1))
  a[i].min     : min((out.s0.y + -2), (out.s0.x + -3))

  a_copy[i].max: max(max((out.s0.x + 3), (out.s0.y + 2)), (max(out.s0.y, (out.s0.x + 1)) + 1))
  a[i].max     : max((out.s0.y + 2), (out.s0.x + 3))

  a_copy[i].min: min(min((out.s0.x + -4), (out.s0.y + -3)), (min(out.s0.y, (out.s0.x + -1)) + -1))
  a[i].min     : min((out.s0.y + -3), (out.s0.x + -4))

  a_copy[i].max: max(max((out.s0.x + 4), (out.s0.y + 3)), (max(out.s0.y, (out.s0.x + 1)) + 1))
  a[i].max     : max((out.s0.y + 3), (out.s0.x + 4))

  a_copy[i].min: min(min((out.s0.y + -2), (out.s0.x + -3)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -3), (out.s0.y + -2))

  a_copy[i].max: max(max((out.s0.y + 2), (out.s0.x + 3)), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 3), (out.s0.y + 2))

  a_copy[i].min: min(min((out.s0.y + -3), (out.s0.x + -4)), (out.s0.x + -1))
  a[i].min     : min((out.s0.x + -4), (out.s0.y + -3))

  a_copy[i].max: max(max((out.s0.y + 3), (out.s0.x + 4)), (out.s0.x + 1))
  a[i].max     : max((out.s0.x + 4), (out.s0.y + 3))

  a_copy[i].min: min((out.s0.x + -3), (out.s0.y + -2))
  a[i].min     : min((out.s0.y + -2), (out.s0.x + -3))

  a_copy[i].max: max((out.s0.x + 3), (out.s0.y + 2))
  a[i].max     : max((out.s0.y + 2), (out.s0.x + 3))

  a_copy[i].min: min((out.s0.x + -4), (out.s0.y + -3))
  a[i].min     : min((out.s0.y + -3), (out.s0.x + -4))

  a_copy[i].max: max((out.s0.x + 4), (out.s0.y + 3))
  a[i].max     : max((out.s0.y + 3), (out.s0.x + 4))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/reduction_schedule.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_reduction_schedule -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_reduction_schedule

  a_copy[i].min: min(energy.s1.x.min, energy.s2.r.x$r.min)
  a[i].min     : min(energy.s2.r.x$r.min, energy.s1.x.min)

  a_copy[i].max: max(energy.s1.x.max, energy.s2.r.x$r.max)
  a[i].max     : max(energy.s2.r.x$r.max, energy.s1.x.max)

  a_copy[i].min: min(max((energy.s2.r.x$r.min + -1), 0), energy.s2.r.x$r.min)
  a[i].min     : max((energy.s2.r.x$r.min + -1), 0)

  a_copy[i].min: min(max((energy.s2.r.x$r.min + -1), 0), min((energy.s2.r.x$r.min + 1), 31))
  a[i].min     : max((energy.s2.r.x$r.min + -1), 0)

  a_copy[i].max: max(max(energy.s2.r.x$r.max, min((energy.s2.r.x$r.max + 1), 31)), 0)
  a[i].max     : max((energy.s2.r.x$r.max + 1), 31)

  a_copy[i].min: min(energy.s0.x.min, energy.s1.x.min)
  a[i].min     : min(energy.s1.x.min, energy.s0.x.min)

  a_copy[i].max: max(energy.s0.x.max, energy.s1.x.max)
  a[i].max     : max(energy.s1.x.max, energy.s0.x.max)

  a_copy[i].min: min(min(energy.s1.x.min, energy.s0.x.min), energy.s2.r.x$r.min)
  a[i].min     : min(energy.s2.r.x$r.min, min(energy.s0.x.min, energy.s1.x.min))

  a_copy[i].max: max(max(energy.s1.x.max, energy.s0.x.max), energy.s2.r.x$r.max)
  a[i].max     : max(energy.s2.r.x$r.max, max(energy.s0.x.max, energy.s1.x.max))

  a_copy[i].min: min(min(energy.s0.y.min, energy.s2.r.y$r.min), 0)
  a[i].min     : min(min(energy.s2.r.y$r.min, energy.s0.y.min), 0)

  a_copy[i].max: max(max(energy.s0.y.max, energy.s2.r.y$r.max), 0)
  a[i].max     : max(max(energy.s2.r.y$r.max, energy.s0.y.max), 0)

  a_copy[i].min: min(max((energy.s2.r.x$r.min + -1), 0), min(energy.s2.r.x$r.min, min(energy.s0.x.min, energy.s1.x.min)))
  a[i].min     : min(energy.s1.x.min, min(energy.s0.x.min, max((energy.s2.r.x$r.min + -1), 0)))

  a_copy[i].max: max(max((energy.s2.r.x$r.max + 1), max(energy.s2.r.x$r.max, max(energy.s0.x.max, energy.s1.x.max))), 31)
  a[i].max     : max(max(energy.s1.x.max, max(energy.s0.x.max, (energy.s2.r.x$r.max + 1))), 31)

  a_copy[i].min: min((energy.s2.r.y$r.min + -1), min(min(energy.s2.r.y$r.min, energy.s0.y.min), 0))
  a[i].min     : min(min(energy.s0.y.min, (energy.s2.r.y$r.min + -1)), 0)

  a_copy[i].max: max((energy.s2.r.y$r.max + -1), max(max(energy.s2.r.y$r.max, energy.s0.y.max), 0))
  a[i].max     : max(max(energy.s0.y.max, energy.s2.r.y$r.max), 0)

  a_copy[i].min: min(max((energy.s2.r.x$r.min + -1), 0), energy.s2.r.x$r.min)
  a[i].min     : max((energy.s2.r.x$r.min + -1), 0)

  a_copy[i].min: min(max((energy.s2.r.x$r.min + -1), 0), min((energy.s2.r.x$r.min + 1), 31))
  a[i].min     : max((energy.s2.r.x$r.min + -1), 0)

  a_copy[i].max: max(max(energy.s2.r.x$r.max, min((energy.s2.r.x$r.max + 1), 31)), 0)
  a[i].max     : max((energy.s2.r.x$r.max + 1), 31)

  a_copy[i].min: min(energy.min.0, max((energy.s2.r.x$r.min + -1), 0))
  a[i].min     : min(max((energy.s2.r.x$r.min + -1), 0), energy.min.0)

  a_copy[i].max: max(((energy.min.0 + energy.extent.0) + -1), max((energy.s2.r.x$r.max + 1), 31))
  a[i].max     : max(max((energy.s2.r.x$r.max + 1), ((energy.extent.0 + energy.min.0) + -1)), 31)

  a_copy[i].min: min(energy.min.1, (energy.s2.r.y$r.min + -1))
  a[i].min     : min((energy.s2.r.y$r.min + -1), energy.min.1)

  a_copy[i].max: (max((energy.min.1 + energy.extent.1), energy.s2.r.y$r.max) + -1)
  a[i].max     : (max(energy.s2.r.y$r.max, (energy.extent.1 + energy.min.1)) + -1)

  a_copy[i].min: min(energy.min.0, max((energy.s2.r.x$r.min + -1), 0))
  a[i].min     : min(max((energy.s2.r.x$r.min + -1), 0), energy.min.0)

  a_copy[i].max: max(((energy.min.0 + energy.extent.0) + -1), max((energy.s2.r.x$r.max + 1), 31))
  a[i].max     : max(max((energy.s2.r.x$r.max + 1), ((energy.extent.0 + energy.min.0) + -1)), 31)

  a_copy[i].min: min(energy.min.1, (energy.s2.r.y$r.min + -1))
  a[i].min     : min((energy.s2.r.y$r.min + -1), energy.min.1)

  a_copy[i].max: (max((energy.min.1 + energy.extent.1), energy.s2.r.y$r.max) + -1)
  a[i].max     : (max(energy.s2.r.y$r.max, (energy.extent.1 + energy.min.1)) + -1)
