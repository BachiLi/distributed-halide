LD_LIBRARY_PATH=:../../non-linear-FM/bin/:../../non-linear-FM/isl-0.15/release/lib ./bilateral_grid 8

  a_copy[i].min (61): min(min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.min + -1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2))

  a_copy[i].max (61): max(max((blurz.s0.z.max + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), (blurz.s0.z.max + -1))
  a[i].max      (57): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + -1))

  a_copy[i].min (60): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2)), blurz.s0.z.min)
  a[i].min      (57): min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (60): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + -1)), blurz.s0.z.max)
  a[i].max      (56): max(blurz.s0.z.max, int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (61): min(min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.min + 1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2))

  a_copy[i].max (60): max(max(blurz.s0.z.max, int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), (blurz.s0.z.max + 1))
  a[i].max      (57): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + 1))

  a_copy[i].min (61): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2)), (blurz.s0.z.min + 2))
  a[i].min      (57): min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (61): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + 1)), (blurz.s0.z.max + 2))
  a[i].max      (57): max((blurz.s0.z.max + 2), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (12): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), min(blurx.s0.x.min, (blurx.s0.x.max + -7)))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))

  a_copy[i].min (13): min(min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 1))
  a[i].min      (5): min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2))

  a_copy[i].min (13): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 2))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))

  a_copy[i].min (13): min(min((blurz.s0.x.max + -7), min(blurz.s0.x.min, histogram.s1.x.min)), min(histogram.s1.x.min, histogram.s0.x.min))
  a[i].min      (10): min(histogram.s0.x.min, min(histogram.s1.x.min, min(blurz.s0.x.min, (blurz.s0.x.max + -7))))

  a_copy[i].min (16): max(min(((min(blurz.s0.x.min, (blurz.s0.x.max + -7))*8) + -4), ((p0.min.0 + p0.extent.0) + -1)), p0.min.0)
  a[i].min      (19): max(min(((p0.extent.0 + p0.min.0) + -1), min(((blurz.s0.x.max*8) + -60), ((blurz.s0.x.min*8) + -4))), p0.min.0)

  a_copy[i].max (46): max(min(((min(((((((blurz.s0.x.max - blurz.s0.x.min) + 8)/8)*8) + blurz.s0.x.min) + -1), blurz.s0.x.max)*8) + 3), ((p0.min.0 + p0.extent.0) + -1)), p0.min.0)
  a[i].max      (49): max(p0.min.0, min(min(((((((blurz.s0.x.max - blurz.s0.x.min) + 8)/8)*64) + (blurz.s0.x.min*8)) + -5), ((blurz.s0.x.max*8) + 3)), ((p0.extent.0 + p0.min.0) + -1)))

  a_copy[i].min (61): min(min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.min + -1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2))

  a_copy[i].max (61): max(max((blurz.s0.z.max + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), (blurz.s0.z.max + -1))
  a[i].max      (57): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + -1))

  a_copy[i].min (60): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2)), blurz.s0.z.min)
  a[i].min      (57): min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (60): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + -1)), blurz.s0.z.max)
  a[i].max      (56): max(blurz.s0.z.max, int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (61): min(min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.min + 1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2))

  a_copy[i].max (60): max(max(blurz.s0.z.max, int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), (blurz.s0.z.max + 1))
  a[i].max      (57): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + 1))

  a_copy[i].min (61): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.min + -2)), (blurz.s0.z.min + 2))
  a[i].min      (57): min((blurz.s0.z.min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (61): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.max + 1)), (blurz.s0.z.max + 2))
  a[i].max      (57): max((blurz.s0.z.max + 2), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (12): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), min(blurx.s0.x.min, (blurx.s0.x.max + -7)))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))

  a_copy[i].min (13): min(min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 1))
  a[i].min      (5): min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2))

  a_copy[i].min (13): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 2))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))

  a_copy[i].min (12): min(histogram.s1.x.min, (min(((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min), (blurz.s0.x.loop_max + -7)) + blurz.s0.x.v2.loop_min))
  a[i].min      (13): min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_max) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min))

  a_copy[i].max (16): max(histogram.s1.x.max, ((min(((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + -8), (blurz.s0.x.loop_max + -7)) + (blurz.s0.x.v2.loop_extent + blurz.s0.x.v2.loop_min)) + -1))
  a[i].max      (20): max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_max) + -8)), histogram.s1.x.max)

  a_copy[i].min (25): min(min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_max) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min)), (min(((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min), (blurz.s0.x.loop_max + -7)) + blurz.s0.x.v2.loop_min))
  a[i].min      (13): min(histogram.s1.x.min, min((((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_min), ((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7)))

  a_copy[i].max (36): max(max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_max) + -8)), histogram.s1.x.max), ((min(((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + -8), (blurz.s0.x.loop_max + -7)) + (blurz.s0.x.v2.loop_extent + blurz.s0.x.v2.loop_min)) + -1))
  a[i].max      (17): max(histogram.s1.x.max, min(((((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -8)))

  a_copy[i].min (61): min(min((blurz.s0.z.loop_min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.loop_min + -1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.loop_min + -2))

  a_copy[i].max (63): max(max(((blurz.s0.z.loop_min + blurz.s0.z.loop_extent) + -3), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), ((blurz.s0.z.loop_extent + blurz.s0.z.loop_min) + -2))
  a[i].max      (58): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), ((blurz.s0.z.loop_extent + blurz.s0.z.loop_min) + -2))

  a_copy[i].max (10): max(max(((blurz.s0.c.loop_min + blurz.s0.c.loop_extent) + -1), histogram.s1.c.max), ((blurz.s0.c.loop_extent + blurz.s0.c.loop_min) + -1))
  a[i].max      (5): max(histogram.s1.c.max, ((blurz.s0.c.loop_extent + blurz.s0.c.loop_min) + -1))

  a_copy[i].min (25): min(min(histogram.s1.x.min, min((((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_min), ((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7))), (min(((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min), (blurz.s0.x.loop_max + -7)) + blurz.s0.x.v2.loop_min))
  a[i].min      (13): min(((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min))

  a_copy[i].max (33): max(max(histogram.s1.x.max, min(((((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -8))), ((min(((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + -8), (blurz.s0.x.loop_max + -7)) + (blurz.s0.x.v2.loop_extent + blurz.s0.x.v2.loop_min)) + -1))
  a[i].max      (20): max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + blurz.s0.x.v2.loop_extent) + -8)), histogram.s1.x.max)

  a_copy[i].min (60): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.loop_min + -2)), blurz.s0.z.loop_min)
  a[i].min      (57): min((blurz.s0.z.loop_min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (63): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), ((blurz.s0.z.loop_extent + blurz.s0.z.loop_min) + -2)), ((blurz.s0.z.loop_extent + blurz.s0.z.loop_min) + -1))
  a[i].max      (58): max(((blurz.s0.z.loop_min + blurz.s0.z.loop_extent) + -1), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (25): min(min(((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min)), (min(((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min), (blurz.s0.x.loop_max + -7)) + blurz.s0.x.v2.loop_min))
  a[i].min      (13): min(histogram.s1.x.min, min((((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_min), ((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_max) + -7)))

  a_copy[i].max (36): max(max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + blurz.s0.x.v2.loop_extent) + -8)), histogram.s1.x.max), ((min(((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + -8), (blurz.s0.x.loop_max + -7)) + (blurz.s0.x.v2.loop_extent + blurz.s0.x.v2.loop_min)) + -1))
  a[i].max      (17): max(histogram.s1.x.max, min(((((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -8)))

  a_copy[i].min (61): min(min((blurz.s0.z.loop_min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f))), (blurz.s0.z.loop_min + 1))
  a[i].min      (57): min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.loop_min + -2))

  a_copy[i].max (62): max(max(((blurz.s0.z.loop_min + blurz.s0.z.loop_extent) + -1), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f)))), (blurz.s0.z.loop_extent + blurz.s0.z.loop_min))
  a[i].max      (57): max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.loop_extent + blurz.s0.z.loop_min))

  a_copy[i].max (10): max(max(((blurz.s0.c.loop_min + blurz.s0.c.loop_extent) + -1), histogram.s1.c.max), ((blurz.s0.c.loop_extent + blurz.s0.c.loop_min) + -1))
  a[i].max      (5): max(histogram.s1.c.max, ((blurz.s0.c.loop_extent + blurz.s0.c.loop_min) + -1))

  a_copy[i].min (25): min(min(histogram.s1.x.min, min((((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_min), ((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_max) + -7))), (min(((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min), (blurz.s0.x.loop_max + -7)) + blurz.s0.x.v2.loop_min))
  a[i].min      (13): min(((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min))

  a_copy[i].max (33): max(max(histogram.s1.x.max, min(((((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -8))), ((min(((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + -8), (blurz.s0.x.loop_max + -7)) + (blurz.s0.x.v2.loop_extent + blurz.s0.x.v2.loop_min)) + -1))
  a[i].max      (20): max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + blurz.s0.x.v2.loop_extent) + -8)), histogram.s1.x.max)

  a_copy[i].min (61): min(min(int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)), (blurz.s0.z.loop_min + -2)), (blurz.s0.z.loop_min + 2))
  a[i].min      (57): min((blurz.s0.z.loop_min + -2), int32(select(((1.000000f/r_sigma) < 0.000000f), ((1.000000f/r_sigma) + 0.500000f), 0.500000f)))

  a_copy[i].max (62): max(max(int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))), (blurz.s0.z.loop_extent + blurz.s0.z.loop_min)), ((blurz.s0.z.loop_extent + blurz.s0.z.loop_min) + 1))
  a[i].max      (58): max(((blurz.s0.z.loop_min + blurz.s0.z.loop_extent) + 1), int32(select(((1.000000f/r_sigma) < 0.000000f), 0.500000f, ((1.000000f/r_sigma) + 0.500000f))))

  a_copy[i].min (19): min(min(((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + -7), min(((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)), histogram.s1.x.min)), min(histogram.s1.x.min, histogram.s0.x.min))
  a[i].min      (16): min(histogram.s0.x.min, min(histogram.s1.x.min, min((((blurz.s0.x.x.loop_min*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_min), ((blurz.s0.x.v2.loop_min + blurz.s0.x.loop_max) + -7))))

  a_copy[i].max (23): max(max(min((((((blurz.s0.x.v2.loop_min + blurz.s0.x.v2.loop_extent) + blurz.s0.x.loop_min) + (blurz.s0.x.x.loop_min*8)) + (blurz.s0.x.x.loop_extent*8)) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_min) + blurz.s0.x.v2.loop_extent) + -8)), histogram.s0.x.max), histogram.s1.x.max)
  a[i].max      (20): max(histogram.s1.x.max, max(histogram.s0.x.max, min(((((((blurz.s0.x.x.loop_extent + blurz.s0.x.x.loop_min)*8) + blurz.s0.x.loop_min) + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -9), (((blurz.s0.x.loop_max + blurz.s0.x.v2.loop_extent) + blurz.s0.x.v2.loop_min) + -8))))

  a_copy[i].min (12): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), min(blurx.s0.x.min, (blurx.s0.x.max + -7)))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))

  a_copy[i].min (13): min(min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 1))
  a[i].min      (5): min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2))

  a_copy[i].min (13): min(min((blurx.s0.x.max + -9), (blurx.s0.x.min + -2)), (min(blurx.s0.x.min, (blurx.s0.x.max + -7)) + 2))
  a[i].min      (5): min((blurx.s0.x.min + -2), (blurx.s0.x.max + -9))
