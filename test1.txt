mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/argmax.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_argmax -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_argmax

  a_copy[i].min: min(min(arg_max_g.s1.r4.x$r.min, g.s0.x.min), 0)
  a[i].min     : min(min(g.s0.x.min, arg_max_g.s1.r4.x$r.min), 0)

  a_copy[i].max: max(max(arg_max_g.s1.r4.x$r.max, g.s0.x.max), 0)
  a[i].max     : max(max(g.s0.x.max, arg_max_g.s1.r4.x$r.max), 0)

  a_copy[i].min: min(min(arg_max_g.s1.r4.y$r.min, g.s0.y.min), 0)
  a[i].min     : min(min(g.s0.y.min, arg_max_g.s1.r4.y$r.min), 0)

  a_copy[i].max: max(max(arg_max_g.s1.r4.y$r.max, g.s0.y.max), 0)
  a[i].max     : max(max(g.s0.y.max, arg_max_g.s1.r4.y$r.max), 0)

  a_copy[i].min: min(min(arg_max_g.s1.r4.x$r.min, g.s0.x.min), 0)
  a[i].min     : min(min(g.s0.x.min, arg_max_g.s1.r4.x$r.min), 0)

  a_copy[i].max: max(max(arg_max_g.s1.r4.x$r.max, g.s0.x.max), 0)
  a[i].max     : max(max(g.s0.x.max, arg_max_g.s1.r4.x$r.max), 0)

  a_copy[i].min: min(min(arg_max_g.s1.r4.y$r.min, g.s0.y.min), 0)
  a[i].min     : min(min(g.s0.y.min, arg_max_g.s1.r4.y$r.min), 0)

  a_copy[i].max: max(max(arg_max_g.s1.r4.y$r.max, g.s0.y.max), 0)
  a[i].max     : max(max(g.s0.y.max, arg_max_g.s1.r4.y$r.max), 0)

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(argmax.s1.r4.x$r.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, argmax.s1.r4.x$r.min)

  a_copy[i].max: max(argmax.s1.r4.x$r.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, argmax.s1.r4.x$r.max)

  a_copy[i].min: min(argmax.s1.r4.y$r.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, argmax.s1.r4.y$r.min)

  a_copy[i].max: max(argmax.s1.r4.y$r.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, argmax.s1.r4.y$r.max)

  a_copy[i].min: min(argmax.s1.r4.x$r.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, argmax.s1.r4.x$r.min)

  a_copy[i].max: max(argmax.s1.r4.x$r.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, argmax.s1.r4.x$r.max)

  a_copy[i].min: min(argmax.s1.r4.y$r.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, argmax.s1.r4.y$r.min)

  a_copy[i].max: max(argmax.s1.r4.y$r.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, argmax.s1.r4.y$r.max)

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(argmin.s1.r4.x$r.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, argmin.s1.r4.x$r.min)

  a_copy[i].max: max(argmin.s1.r4.x$r.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, argmin.s1.r4.x$r.max)

  a_copy[i].min: min(argmin.s1.r4.y$r.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, argmin.s1.r4.y$r.min)

  a_copy[i].max: max(argmin.s1.r4.y$r.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, argmin.s1.r4.y$r.max)

  a_copy[i].min: min(argmin.s1.r4.x$r.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, argmin.s1.r4.x$r.min)

  a_copy[i].max: max(argmin.s1.r4.x$r.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, argmin.s1.r4.x$r.max)

  a_copy[i].min: min(argmin.s1.r4.y$r.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, argmin.s1.r4.y$r.min)

  a_copy[i].max: max(argmin.s1.r4.y$r.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, argmin.s1.r4.y$r.max)

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h.s1.r25.x$r.min, h.s0.x.min), -1)
  a[i].min     : min(min(h.s0.x.min, h.s1.r25.x$r.min), -1)

  a_copy[i].max: max(max(h.s1.r25.x$r.max, h.s0.x.max), -1)
  a[i].max     : max(max(h.s0.x.max, h.s1.r25.x$r.max), -1)

  a_copy[i].min: min(min(h.s1.r25.x$r.min, h.s0.x.min), -1)
  a[i].min     : min(min(h.s0.x.min, h.s1.r25.x$r.min), -1)

  a_copy[i].max: max(max(h.s1.r25.x$r.max, h.s0.x.max), -1)
  a[i].max     : max(max(h.s0.x.max, h.s1.r25.x$r.max), -1)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$1672) min: h.s0.x; max: h.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$1674) min: -1; max: -1
  Box B:
Used: (undefined)
Dim (_interval$1676) min: min(h.s1.r25.x$r, -1); max: max(h.s1.r25.x$r, -1)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$2.s1.r30.x$r.min, h$2.s0.x.min), 0)
  a[i].min     : min(min(h$2.s0.x.min, h$2.s1.r30.x$r.min), 0)

  a_copy[i].max: max(max(h$2.s1.r30.x$r.max, h$2.s0.x.max), 0)
  a[i].max     : max(max(h$2.s0.x.max, h$2.s1.r30.x$r.max), 0)

  a_copy[i].min: min(min(h$2.s1.r30.x$r.min, h$2.s0.x.min), 0)
  a[i].min     : min(min(h$2.s0.x.min, h$2.s1.r30.x$r.min), 0)

  a_copy[i].max: max(max(h$2.s1.r30.x$r.max, h$2.s0.x.max), 0)
  a[i].max     : max(max(h$2.s0.x.max, h$2.s1.r30.x$r.max), 0)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$1944) min: h$2.s0.x; max: h$2.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$1946) min: 0; max: 0
  Box B:
Used: (undefined)
Dim (_interval$1948) min: min(h$2.s1.r30.x$r, 0); max: max(h$2.s1.r30.x$r, 0)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$3.s1.r35.x$r.min, h$3.s0.x.min), 1)
  a[i].min     : min(min(h$3.s0.x.min, h$3.s1.r35.x$r.min), 1)

  a_copy[i].max: max(max(h$3.s1.r35.x$r.max, h$3.s0.x.max), 1)
  a[i].max     : max(max(h$3.s0.x.max, h$3.s1.r35.x$r.max), 1)

  a_copy[i].min: min(min(h$3.s1.r35.x$r.min, h$3.s0.x.min), 1)
  a[i].min     : min(min(h$3.s0.x.min, h$3.s1.r35.x$r.min), 1)

  a_copy[i].max: max(max(h$3.s1.r35.x$r.max, h$3.s0.x.max), 1)
  a[i].max     : max(max(h$3.s0.x.max, h$3.s1.r35.x$r.max), 1)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2216) min: h$3.s0.x; max: h$3.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2218) min: 1; max: 1
  Box B:
Used: (undefined)
Dim (_interval$2220) min: min(h$3.s1.r35.x$r, 1); max: max(h$3.s1.r35.x$r, 1)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$4.s1.r40.x$r.min, h$4.s0.x.min), 5)
  a[i].min     : min(min(h$4.s0.x.min, h$4.s1.r40.x$r.min), 5)

  a_copy[i].max: max(max(h$4.s1.r40.x$r.max, h$4.s0.x.max), 5)
  a[i].max     : max(max(h$4.s0.x.max, h$4.s1.r40.x$r.max), 5)

  a_copy[i].min: min(min(h$4.s1.r40.x$r.min, h$4.s0.x.min), 5)
  a[i].min     : min(min(h$4.s0.x.min, h$4.s1.r40.x$r.min), 5)

  a_copy[i].max: max(max(h$4.s1.r40.x$r.max, h$4.s0.x.max), 5)
  a[i].max     : max(max(h$4.s0.x.max, h$4.s1.r40.x$r.max), 5)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2488) min: h$4.s0.x; max: h$4.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2490) min: 5; max: 5
  Box B:
Used: (undefined)
Dim (_interval$2492) min: min(h$4.s1.r40.x$r, 5); max: max(h$4.s1.r40.x$r, 5)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$5.s1.r45.x$r.min, h$5.s0.x.min), 99)
  a[i].min     : min(min(h$5.s0.x.min, h$5.s1.r45.x$r.min), 99)

  a_copy[i].max: max(max(h$5.s1.r45.x$r.max, h$5.s0.x.max), 99)
  a[i].max     : max(max(h$5.s0.x.max, h$5.s1.r45.x$r.max), 99)

  a_copy[i].min: min(min(h$5.s1.r45.x$r.min, h$5.s0.x.min), 99)
  a[i].min     : min(min(h$5.s0.x.min, h$5.s1.r45.x$r.min), 99)

  a_copy[i].max: max(max(h$5.s1.r45.x$r.max, h$5.s0.x.max), 99)
  a[i].max     : max(max(h$5.s0.x.max, h$5.s1.r45.x$r.max), 99)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2760) min: h$5.s0.x; max: h$5.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$2762) min: 99; max: 99
  Box B:
Used: (undefined)
Dim (_interval$2764) min: min(h$5.s1.r45.x$r, 99); max: max(h$5.s1.r45.x$r, 99)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$6.s1.r50.x$r.min, h$6.s0.x.min), 100)
  a[i].min     : min(min(h$6.s0.x.min, h$6.s1.r50.x$r.min), 100)

  a_copy[i].max: max(max(h$6.s1.r50.x$r.max, h$6.s0.x.max), 100)
  a[i].max     : max(max(h$6.s0.x.max, h$6.s1.r50.x$r.max), 100)

  a_copy[i].min: min(min(h$6.s1.r50.x$r.min, h$6.s0.x.min), 100)
  a[i].min     : min(min(h$6.s0.x.min, h$6.s1.r50.x$r.min), 100)

  a_copy[i].max: max(max(h$6.s1.r50.x$r.max, h$6.s0.x.max), 100)
  a[i].max     : max(max(h$6.s0.x.max, h$6.s1.r50.x$r.max), 100)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$3032) min: h$6.s0.x; max: h$6.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$3034) min: 100; max: 100
  Box B:
Used: (undefined)
Dim (_interval$3036) min: min(h$6.s1.r50.x$r, 100); max: max(h$6.s1.r50.x$r, 100)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

  a_copy[i].min: min(min(h$7.s1.r55.x$r.min, h$7.s0.x.min), 101)
  a[i].min     : min(min(h$7.s0.x.min, h$7.s1.r55.x$r.min), 101)

  a_copy[i].max: max(max(h$7.s1.r55.x$r.max, h$7.s0.x.max), 101)
  a[i].max     : max(max(h$7.s0.x.max, h$7.s1.r55.x$r.max), 101)

  a_copy[i].min: min(min(h$7.s1.r55.x$r.min, h$7.s0.x.min), 101)
  a[i].min     : min(min(h$7.s0.x.min, h$7.s1.r55.x$r.min), 101)

  a_copy[i].max: max(max(h$7.s1.r55.x$r.max, h$7.s0.x.max), 101)
  a[i].max     : max(max(h$7.s0.x.max, h$7.s1.r55.x$r.max), 101)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$3304) min: h$7.s0.x; max: h$7.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$3306) min: 101; max: 101
  Box B:
Used: (undefined)
Dim (_interval$3308) min: min(h$7.s1.r55.x$r, 101); max: max(h$7.s1.r55.x$r, 101)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1

OVERLAP BOXES
  Box A:
Used: (undefined)
  Box B:
Used: (undefined)
boxes_overlap_halide? 1
boxes_overlap_nfm? 1
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/assertion_failure_in_parallel_for.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_assertion_failure_in_parallel_for -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_assertion_failure_in_parallel_for

  a_copy[i].min: min(h.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(min((split + 1), h.s0.x.min), 0)
  a[i].min     : min(min(h.s0.x.min, (split + 1)), 0)

  a_copy[i].max: max(max((split + -1), h.s0.x.max), 0)
  a[i].max     : max(max(h.s0.x.max, (split + -1)), 0)

  a_copy[i].min: min(min((split + 1), h.s0.y.min), 0)
  a[i].min     : min(min(h.s0.y.min, (split + 1)), 0)

  a_copy[i].max: max(max((split + -1), h.s0.y.max), 0)
  a[i].max     : max(max(h.s0.y.max, (split + -1)), 0)

  a_copy[i].min: min(min((split + 1), f.s0.y.min), 0)
  a[i].min     : min(min(f.s0.y.min, (split + 1)), 0)

  a_copy[i].max: max(max((split + -1), f.s0.y.max), 0)
  a[i].max     : max(max(f.s0.y.max, (split + -1)), 0)

  a_copy[i].min: min(min((split + 1), h.s0.x.min), 0)
  a[i].min     : min(min(h.s0.x.min, (split + 1)), 0)

  a_copy[i].max: max(max((split + -1), h.s0.x.max), 0)
  a[i].max     : max(max(h.s0.x.max, (split + -1)), 0)

  a_copy[i].min: min(min((split + 1), h.s0.y.min), 0)
  a[i].min     : min(min(h.s0.y.min, (split + 1)), 0)

  a_copy[i].max: max(max((split + -1), h.s0.y.max), 0)
  a[i].max     : max(max(h.s0.y.max, (split + -1)), 0)
Expected: Bounds given for h in x (from 0 to 9) do not cover required region (from 0 to 10)
Expected: Bounds given for h in x (from 0 to 9) do not cover required region (from 0 to 10)
Expected: Bounds given for h in x (from 0 to 9) do not cover required region (from 0 to 10)
Expected: Bounds given for h in x (from 0 to 9) do not cover required region (from 0 to 10)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/autotune_bug_2.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_autotune_bug_2 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_autotune_bug_2

  a_copy[i].min: min(min(f.s0.x.min, (f.s0.x.max + -7)), f.s1.x.min)
  a[i].min     : min(f.s1.x.min, min((f.s0.x.max + -7), f.s0.x.min))

  a_copy[i].max: max(min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max), f.s1.x.max)
  a[i].max     : max(f.s1.x.max, min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max))

  a_copy[i].min: min(g.s0.x.min, min(f.s1.x.min, min((f.s0.x.max + -7), f.s0.x.min)))
  a[i].min     : min(f.s0.x.min, min((f.s0.x.max + -7), min(f.s1.x.min, g.s0.x.min)))

  a_copy[i].max: max((g.s0.x.max + 1), max(f.s1.x.max, min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max)))
  a[i].max     : max(min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max), max(f.s1.x.max, (g.s0.x.max + 1)))

  a_copy[i].min: min(min(f.s0.x.min, (f.s0.x.max + -7)), f.s1.x.min)
  a[i].min     : min(f.s1.x.min, min((f.s0.x.max + -7), f.s0.x.min))

  a_copy[i].max: max(min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max), f.s1.x.max)
  a[i].max     : max(f.s1.x.max, min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max))

  a_copy[i].max: max((min(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 1), (g.s0.x.max + -6)) + 7), (g.s0.x.max + 1))
  a[i].max     : min(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 8), (g.s0.x.max + 1))

  a_copy[i].max: max((g.s0.x.max + 1), min(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 8), (g.s0.x.max + 1)))
  a[i].max     : max(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 8), (g.s0.x.max + 1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/autotune_bug_3.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_autotune_bug_3 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_autotune_bug_3

  a_copy[i].min: min(g.s0.x.min, min(f.s0.x.min, (f.s0.x.max + -7)))
  a[i].min     : min((f.s0.x.max + -7), min(f.s0.x.min, g.s0.x.min))

  a_copy[i].max: max((g.s0.x.max + 1), min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max))
  a[i].max     : max(min((((((f.s0.x.max - f.s0.x.min)/8)*8) + f.s0.x.min) + 7), f.s0.x.max), (g.s0.x.max + 1))

  a_copy[i].max: max((g.s0.x.max + 1), (min(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 1), (g.s0.x.max + -6)) + 7))
  a[i].max     : max(((((((g.s0.x.max - g.s0.x.min) + 1)/8)*8) + g.s0.x.max) + 8), (g.s0.x.max + 1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/autotune_bug_4.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_autotune_bug_4 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_autotune_bug_4

  a_copy[i].min: min(min(g.s0.x.min, (g.s0.x.max + -4)), min(f.s0.x.min, (f.s0.x.max + -3)))
  a[i].min     : min((f.s0.x.max + -3), min(f.s0.x.min, min((g.s0.x.max + -4), g.s0.x.min)))

  a_copy[i].max: max(min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max), min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max))
  a[i].max     : max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max))

  a_copy[i].min: min(h.s0.x.min, min(g.s0.x.min, (g.s0.x.max + -4)))
  a[i].min     : min((g.s0.x.max + -4), min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max((((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min) + 6), min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max))
  a[i].max     : max(min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max), (((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min) + 6))

  a_copy[i].max: max((((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min) + 6), (min(((((((((h.s0.x.max - h.s0.x.min)/6)*6) + 6)/5)*5) + ((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min)) + 1), (((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min) + 2)) + 4))
  a[i].max     : max((((((((((h.s0.x.max - h.s0.x.min)/6)*6) + 6)/5)*5) + (((h.s0.x.max - h.s0.x.min)/6)*6)) + h.s0.x.min) + 5), (((((h.s0.x.max - h.s0.x.min)/6)*6) + h.s0.x.min) + 6))

  a_copy[i].min: (h.s0.x.xi.base + h.s0.x.xi.loop_min)
  a[i].min     : (h.s0.x.xi.loop_min + h.s0.x.xi.base)

  a_copy[i].max: (h.s0.x.xi.base + (h.s0.x.xi.loop_extent + h.s0.x.xi.loop_min))
  a[i].max     : ((h.s0.x.xi.loop_min + h.s0.x.xi.loop_extent) + h.s0.x.xi.base)

  a_copy[i].min: min(min(g.s0.x.min, (g.s0.x.max + -4)), min(f.s0.x.min, (f.s0.x.max + -3)))
  a[i].min     : min((f.s0.x.max + -3), min(f.s0.x.min, min((g.s0.x.max + -4), g.s0.x.min)))

  a_copy[i].max: max(min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max), min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max))
  a[i].max     : max(min((((((f.s0.x.max - f.s0.x.min)/4)*4) + f.s0.x.min) + 3), f.s0.x.max), min((((((g.s0.x.max - g.s0.x.min)/5)*5) + g.s0.x.min) + 4), g.s0.x.max))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/autotune_bug_5.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_autotune_bug_5 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_autotune_bug_5

  a_copy[i].min: min(upsampledx.s0.x.min, clamped.s0.x.min)
  a[i].min     : min(clamped.s0.x.min, upsampledx.s0.x.min)

  a_copy[i].max: max((upsampledx.s0.x.max + 1), clamped.s0.x.max)
  a[i].max     : max(clamped.s0.x.max, (upsampledx.s0.x.max + 1))

  a_copy[i].min: min(upsampledx.s0.y.min, clamped.s0.y.min)
  a[i].min     : min(clamped.s0.y.min, upsampledx.s0.y.min)

  a_copy[i].max: max(upsampledx.s0.y.max, clamped.s0.y.max)
  a[i].max     : max(clamped.s0.y.max, upsampledx.s0.y.max)

  a_copy[i].min: min(upsampled.s0.x.min, upsampledx.s0.x.min)
  a[i].min     : min(upsampledx.s0.x.min, upsampled.s0.x.min)

  a_copy[i].max: max(upsampled.s0.x.max, upsampledx.s0.x.max)
  a[i].max     : max(upsampledx.s0.x.max, upsampled.s0.x.max)

  a_copy[i].min: min(min(upsampled.s0.y.min, (upsampled.s0.y.max + -7)), upsampledx.s0.y.min)
  a[i].min     : min(upsampledx.s0.y.min, min((upsampled.s0.y.max + -7), upsampled.s0.y.min))

  a_copy[i].max: max(min((((((upsampled.s0.y.max - upsampled.s0.y.min)/8)*8) + upsampled.s0.y.min) + 7), upsampled.s0.y.max), upsampledx.s0.y.max)
  a[i].max     : max(upsampledx.s0.y.max, min((((((upsampled.s0.y.max - upsampled.s0.y.min)/8)*8) + upsampled.s0.y.min) + 7), upsampled.s0.y.max))

  a_copy[i].min: min(upsampled.s0.y.min, (upsampled.s0.y.max + -7))
  a[i].min     : min((upsampled.s0.y.max + -7), upsampled.s0.y.min)

  a_copy[i].min: min(upsampled.s0.x.min, clamped.s0.x.min)
  a[i].min     : min(clamped.s0.x.min, upsampled.s0.x.min)

  a_copy[i].max: max((upsampled.s0.x.max + 1), clamped.s0.x.max)
  a[i].max     : max(clamped.s0.x.max, (upsampled.s0.x.max + 1))

  a_copy[i].min: min(min((upsampled.s0.y.max + -7), upsampled.s0.y.min), clamped.s0.y.min)
  a[i].min     : min(clamped.s0.y.min, min(upsampled.s0.y.min, (upsampled.s0.y.max + -7)))

  a_copy[i].max: max(min((((((upsampled.s0.y.max - upsampled.s0.y.min)/8)*8) + upsampled.s0.y.min) + 7), upsampled.s0.y.max), clamped.s0.y.max)
  a[i].max     : max(clamped.s0.y.max, min((((((upsampled.s0.y.max - upsampled.s0.y.min)/8)*8) + upsampled.s0.y.min) + 7), upsampled.s0.y.max))

  a_copy[i].min: min(upsampled.s0.x, upsampledx.s0.x.min)
  a[i].min     : min(upsampledx.s0.x.min, upsampled.s0.x)

  a_copy[i].max: max(upsampled.s0.x, upsampledx.s0.x.max)
  a[i].max     : max(upsampledx.s0.x.max, upsampled.s0.x)

  a_copy[i].min: min((upsampled.s0.y.yi.base + upsampled.s0.y.yi), upsampledx.s0.y.min)
  a[i].min     : min(upsampledx.s0.y.min, (upsampled.s0.y.yi + upsampled.s0.y.yi.base))

  a_copy[i].max: max((upsampled.s0.y.yi.base + upsampled.s0.y.yi), upsampledx.s0.y.max)
  a[i].max     : max(upsampledx.s0.y.max, (upsampled.s0.y.yi + upsampled.s0.y.yi.base))

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/autotune_bug.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_autotune_bug -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_autotune_bug

  a_copy[i].min: min(blur_x.s0.x.min, (blur_x.s0.x.max + -3))
  a[i].min     : min((blur_x.s0.x.max + -3), blur_x.s0.x.min)

  a_copy[i].max: (min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max) + 1)
  a[i].max     : min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 4), (blur_x.s0.x.max + 1))

  a_copy[i].min: min(min((blur_x.s0.x.max + -3), blur_x.s0.x.min), (min(blur_x.s0.x.min, (blur_x.s0.x.max + -3)) + 2))
  a[i].min     : min(blur_x.s0.x.min, (blur_x.s0.x.max + -3))

  a_copy[i].max: max(min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 4), (blur_x.s0.x.max + 1)), (min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max) + 2))
  a[i].max     : min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 5), (blur_x.s0.x.max + 2))

  a_copy[i].min: min(blur_y.s0.x.min, min(blur_x.s0.x.min, (blur_x.s0.x.max + -3)))
  a[i].min     : min((blur_x.s0.x.max + -3), min(blur_x.s0.x.min, blur_y.s0.x.min))

  a_copy[i].max: max(blur_y.s0.x.max, min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max))
  a[i].max     : max(min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max), blur_y.s0.x.max)

  a_copy[i].min: min(blur_y.s0.y.min, blur_x.s0.y.min)
  a[i].min     : min(blur_x.s0.y.min, blur_y.s0.y.min)

  a_copy[i].max: max((blur_y.s0.y.max + 2), blur_x.s0.y.max)
  a[i].max     : max(blur_x.s0.y.max, (blur_y.s0.y.max + 2))

  a_copy[i].min: min(min(blur_x.s0.x.min, (blur_x.s0.x.max + -3)), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, min((blur_x.s0.x.max + -3), blur_x.s0.x.min))

  a_copy[i].max: max(min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 5), (blur_x.s0.x.max + 2)), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 5), (blur_x.s0.x.max + 2)))

  a_copy[i].min: min(blur_x.s0.y.min, input.s0.y.min)
  a[i].min     : min(input.s0.y.min, blur_x.s0.y.min)

  a_copy[i].max: max(blur_x.s0.y.max, input.s0.y.max)
  a[i].max     : max(input.s0.y.max, blur_x.s0.y.max)

  a_copy[i].max: ((min((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4), -3) + blur_y.s0.x.max) + 4)
  a[i].max     : min((((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4) + blur_y.s0.x.max) + 4), (blur_y.s0.x.max + 1))

  a_copy[i].max: max(min((((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4) + blur_y.s0.x.max) + 4), (blur_y.s0.x.max + 1)), ((min((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4), -3) + blur_y.s0.x.max) + 5))
  a[i].max     : min((((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4) + blur_y.s0.x.max) + 5), (blur_y.s0.x.max + 2))

  a_copy[i].min: min((blur_y.s0.x.min + -3), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, (blur_y.s0.x.min + -3))

  a_copy[i].max: max(min((((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4) + blur_y.s0.x.max) + 5), (blur_y.s0.x.max + 2)), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, min((((((blur_y.s0.x.max - blur_y.s0.x.min)/4)*4) + blur_y.s0.x.max) + 5), (blur_y.s0.x.max + 2)))

  a_copy[i].min: min(blur_y.s0.y.min, input.s0.y.min)
  a[i].min     : min(input.s0.y.min, blur_y.s0.y.min)

  a_copy[i].max: max((blur_y.s0.y.max + 2), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, (blur_y.s0.y.max + 2))

  a_copy[i].min: min(blur_x.s0.x.min, (blur_x.s0.x.max + -3))
  a[i].min     : min((blur_x.s0.x.max + -3), blur_x.s0.x.min)

  a_copy[i].max: (min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max) + 1)
  a[i].max     : min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 4), (blur_x.s0.x.max + 1))

  a_copy[i].min: min(min((blur_x.s0.x.max + -3), blur_x.s0.x.min), (min(blur_x.s0.x.min, (blur_x.s0.x.max + -3)) + 2))
  a[i].min     : min(blur_x.s0.x.min, (blur_x.s0.x.max + -3))

  a_copy[i].max: max(min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 4), (blur_x.s0.x.max + 1)), (min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max) + 2))
  a[i].max     : min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 5), (blur_x.s0.x.max + 2))

  a_copy[i].min: min(blur_y.s0.x, min(blur_x.s0.x.min, (blur_x.s0.x.max + -3)))
  a[i].min     : min((blur_x.s0.x.max + -3), min(blur_x.s0.x.min, blur_y.s0.x))

  a_copy[i].max: max(blur_y.s0.x, min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max))
  a[i].max     : max(min((((((blur_x.s0.x.max - blur_x.s0.x.min)/4)*4) + blur_x.s0.x.min) + 3), blur_x.s0.x.max), blur_y.s0.x)

  a_copy[i].min: min(blur_y.s0.y, blur_x.s0.y.min)
  a[i].min     : min(blur_x.s0.y.min, blur_y.s0.y)

  a_copy[i].max: max((blur_y.s0.y + 2), blur_x.s0.y.max)
  a[i].max     : max(blur_x.s0.y.max, (blur_y.s0.y + 2))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bad_likely.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bad_likely -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bad_likely
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bit_counting.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bit_counting -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bit_counting
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bitwise_ops.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bitwise_ops -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bitwise_ops
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bool_compute_root_vectorize.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bool_compute_root_vectorize -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bool_compute_root_vectorize

  a_copy[i].min: min(min(selector.s0.x.min, (selector.s0.x.max + -7)), pred.s0.x.min)
  a[i].min     : min(pred.s0.x.min, min((selector.s0.x.max + -7), selector.s0.x.min))

  a_copy[i].max: max(min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max), pred.s0.x.max)
  a[i].max     : max(pred.s0.x.max, min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max))

  a_copy[i].min: min(selector.s0.y.min, pred.s0.y.min)
  a[i].min     : min(pred.s0.y.min, selector.s0.y.min)

  a_copy[i].max: max(selector.s0.y.max, pred.s0.y.max)
  a[i].max     : max(pred.s0.y.max, selector.s0.y.max)

  a_copy[i].min: min(sum.s1.range.x$r.min, min(selector.s0.x.min, (selector.s0.x.max + -7)))
  a[i].min     : min((selector.s0.x.max + -7), min(selector.s0.x.min, sum.s1.range.x$r.min))

  a_copy[i].max: max(sum.s1.range.x$r.max, min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max))
  a[i].max     : max(min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max), sum.s1.range.x$r.max)

  a_copy[i].min: min(sum.s1.range.y$r.min, selector.s0.y.min)
  a[i].min     : min(selector.s0.y.min, sum.s1.range.y$r.min)

  a_copy[i].max: max(sum.s1.range.y$r.max, selector.s0.y.max)
  a[i].max     : max(selector.s0.y.max, sum.s1.range.y$r.max)

  a_copy[i].min: min(min(selector.s0.x.min, (selector.s0.x.max + -7)), pred.s0.x.min)
  a[i].min     : min(pred.s0.x.min, min((selector.s0.x.max + -7), selector.s0.x.min))

  a_copy[i].max: max(min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max), pred.s0.x.max)
  a[i].max     : max(pred.s0.x.max, min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max))

  a_copy[i].min: min(selector.s0.y.min, pred.s0.y.min)
  a[i].min     : min(pred.s0.y.min, selector.s0.y.min)

  a_copy[i].max: max(selector.s0.y.max, pred.s0.y.max)
  a[i].max     : max(pred.s0.y.max, selector.s0.y.max)

  a_copy[i].min: min(sum.s1.range.x$r.min, min(selector.s0.x.min, (selector.s0.x.max + -7)))
  a[i].min     : min((selector.s0.x.max + -7), min(selector.s0.x.min, sum.s1.range.x$r.min))

  a_copy[i].max: max(sum.s1.range.x$r.max, min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max))
  a[i].max     : max(min((((((selector.s0.x.max - selector.s0.x.min)/8)*8) + selector.s0.x.min) + 7), selector.s0.x.max), sum.s1.range.x$r.max)

  a_copy[i].min: min(sum.s1.range.y$r.min, selector.s0.y.min)
  a[i].min     : min(selector.s0.y.min, sum.s1.range.y$r.min)

  a_copy[i].max: max(sum.s1.range.y$r.max, selector.s0.y.max)
  a[i].max     : max(selector.s0.y.max, sum.s1.range.y$r.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/boundary_conditions.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_boundary_conditions -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_boundary_conditions
Vector width: 1
repeat_edge
constant_exterior
repeat_image
mirror_image
mirror_interior
Vector width: 2
repeat_edge
constant_exterior
repeat_image
mirror_image
mirror_interior
Vector width: 4
repeat_edge
constant_exterior
repeat_image
mirror_image
mirror_interior
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bound.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bound -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bound

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.y.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.y.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, g.s0.y.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds
Defining function...
Realizing function...
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_inference_chunk.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_inference_chunk -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_inference_chunk

  a_copy[i].min: min((f.s0.x.min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.min + -1))

  a_copy[i].max: max((f.s0.x.max + 1), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.max + 1))

  a_copy[i].min: min((f.s0.y.min + -1), g.s0.y.min)
  a[i].min     : min(g.s0.y.min, (f.s0.y.min + -1))

  a_copy[i].max: max((f.s0.y.max + 1), g.s0.y.max)
  a[i].max     : max(g.s0.y.max, (f.s0.y.max + 1))

  a_copy[i].min: min((g.s0.x.min + -1), h.s0.x.min)
  a[i].min     : min(h.s0.x.min, (g.s0.x.min + -1))

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min((g.s0.y.min + -1), h.s0.y.min)
  a[i].min     : min(h.s0.y.min, (g.s0.y.min + -1))

  a_copy[i].max: max((g.s0.y.max + 1), h.s0.y.max)
  a[i].max     : max(h.s0.y.max, (g.s0.y.max + 1))

  a_copy[i].min: min((f.s0.x.min + -2), h.s0.x.min)
  a[i].min     : min(h.s0.x.min, (f.s0.x.min + -2))

  a_copy[i].max: max((f.s0.x.max + 2), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (f.s0.x.max + 2))

  a_copy[i].min: min((f.s0.y.min + -2), h.s0.y.min)
  a[i].min     : min(h.s0.y.min, (f.s0.y.min + -2))

  a_copy[i].max: max((f.s0.y.max + 2), h.s0.y.max)
  a[i].max     : max(h.s0.y.max, (f.s0.y.max + 2))

  a_copy[i].max: (f.s0.x.loop_extent + f.s0.x.loop_min)
  a[i].max     : (f.s0.x.loop_min + f.s0.x.loop_extent)

  a_copy[i].min: min((f.s0.x.loop_min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.loop_min + -1))

  a_copy[i].max: max((f.s0.x.loop_min + f.s0.x.loop_extent), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.loop_extent + f.s0.x.loop_min))

  a_copy[i].min: min((f.s0.y + -1), g.s0.y.min)
  a[i].min     : min(g.s0.y.min, (f.s0.y + -1))

  a_copy[i].max: max((f.s0.y + 1), g.s0.y.max)
  a[i].max     : max(g.s0.y.max, (f.s0.y + 1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_inference_complex.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_inference_complex -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_inference_complex

  a_copy[i].min: min((min(f[4].s0.x.min, (f[4].s0.x.max + -3)) + 1), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + -2))
  a[i].min     : min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1))))

  a_copy[i].max: max((min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max) + 1), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + -2))
  a[i].max     : max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)))

  a_copy[i].min: min((f[4].s0.y.min + -1), (f[7].s0.y.min + -2))
  a[i].min     : min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1))

  a_copy[i].max: max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))
  a[i].max     : max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1))

  a_copy[i].min: min(min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1)))), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + 1))
  a[i].min     : min((f[4].s0.x.min + 1), min((f[4].s0.x.max + -2), min((f[7].s0.x.min + -2), (f[7].s0.x.max + -5))))

  a_copy[i].max: max(max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1))), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + 1))
  a[i].max     : max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1)))

  a_copy[i].min: min(min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1)), (f[7].s0.y.min + -3))
  a[i].min     : min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3))

  a_copy[i].max: max(max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1)), (f[7].s0.y.max + -3))
  a[i].max     : max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))

  a_copy[i].min: min(min((f[4].s0.x.min + 1), min((f[4].s0.x.max + -2), min((f[7].s0.x.min + -2), (f[7].s0.x.max + -5)))), min(f[2].s0.x.min, (f[2].s0.x.max + -3)))
  a[i].min     : min((f[2].s0.x.max + -3), min(f[2].s0.x.min, min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1))))))

  a_copy[i].max: max(max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1))), min((((((f[2].s0.x.max - f[2].s0.x.min)/4)*4) + f[2].s0.x.min) + 3), f[2].s0.x.max))
  a[i].max     : max(min((((((f[2].s0.x.max - f[2].s0.x.min)/4)*4) + f[2].s0.x.min) + 3), f[2].s0.x.max), max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1))))

  a_copy[i].min: min(min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3)), f[2].s0.y.min)
  a[i].min     : min(f[2].s0.y.min, min((f[7].s0.y.min + -3), (f[4].s0.y.min + -1)))

  a_copy[i].max: max(max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2)), f[2].s0.y.max)
  a[i].max     : max(f[2].s0.y.max, max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1)))

  a_copy[i].min: min((min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + 2), min(f[4].s0.x.min, (f[4].s0.x.max + -3)))
  a[i].min     : min((f[4].s0.x.max + -3), min(f[4].s0.x.min, min((f[7].s0.x.max + -1), (f[7].s0.x.min + 2))))

  a_copy[i].max: max((min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + 2), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max))
  a[i].max     : max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 5), (f[7].s0.x.max + 2)))

  a_copy[i].min: min((f[4].s0.x.min + 1), (f[7].s0.x.min + -2))
  a[i].min     : min((f[7].s0.x.min + -2), (f[4].s0.x.min + 1))

  a_copy[i].max: (max(f[4].s0.x.max, f[7].s0.x.max) + 1)
  a[i].max     : (max(f[7].s0.x.max, f[4].s0.x.max) + 1)

  a_copy[i].min: min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3))
  a[i].min     : min((f[7].s0.y.min + -3), (f[4].s0.y.min + -1))

  a_copy[i].max: max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))
  a[i].max     : max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1))

  a_copy[i].min: min((min(f[4].s0.x.min, (f[4].s0.x.max + -3)) + 1), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + -2))
  a[i].min     : min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1))))

  a_copy[i].max: max((min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max) + 1), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + -2))
  a[i].max     : max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)))

  a_copy[i].min: min((f[4].s0.y.min + -1), (f[7].s0.y.min + -2))
  a[i].min     : min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1))

  a_copy[i].max: max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))
  a[i].max     : max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1))

  a_copy[i].min: min(min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1)))), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + 1))
  a[i].min     : min((f[4].s0.x.min + 1), min((f[4].s0.x.max + -2), min((f[7].s0.x.min + -2), (f[7].s0.x.max + -5))))

  a_copy[i].max: max(max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1))), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + 1))
  a[i].max     : max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1)))

  a_copy[i].min: min(min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1)), (f[7].s0.y.min + -3))
  a[i].min     : min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3))

  a_copy[i].max: max(max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1)), (f[7].s0.y.max + -3))
  a[i].max     : max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))

  a_copy[i].min: min(min((f[4].s0.x.min + 1), min((f[4].s0.x.max + -2), min((f[7].s0.x.min + -2), (f[7].s0.x.max + -5)))), min(f[2].s0.x.min, (f[2].s0.x.max + -3)))
  a[i].min     : min((f[2].s0.x.max + -3), min(f[2].s0.x.min, min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1))))))

  a_copy[i].max: max(max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1))), min((((((f[2].s0.x.max - f[2].s0.x.min)/4)*4) + f[2].s0.x.min) + 3), f[2].s0.x.max))
  a[i].max     : max(min((((((f[2].s0.x.max - f[2].s0.x.min)/4)*4) + f[2].s0.x.min) + 3), f[2].s0.x.max), max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1))))

  a_copy[i].min: min(min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3)), f[2].s0.y.min)
  a[i].min     : min(f[2].s0.y.min, min((f[7].s0.y.min + -3), (f[4].s0.y.min + -1)))

  a_copy[i].max: max(max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2)), f[2].s0.y.max)
  a[i].max     : max(f[2].s0.y.max, max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1)))

  a_copy[i].min: min((min(f[4].s0.x.min, (f[4].s0.x.max + -3)) + 1), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + -2))
  a[i].min     : min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1))))

  a_copy[i].max: max((min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max) + 1), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + -2))
  a[i].max     : max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)))

  a_copy[i].min: min((f[4].s0.y.min + -1), (f[7].s0.y.min + -2))
  a[i].min     : min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1))

  a_copy[i].max: max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))
  a[i].max     : max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1))

  a_copy[i].min: min(min((f[7].s0.x.max + -5), min((f[7].s0.x.min + -2), min((f[4].s0.x.max + -2), (f[4].s0.x.min + 1)))), (min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + 1))
  a[i].min     : min((f[4].s0.x.min + 1), min((f[4].s0.x.max + -2), min((f[7].s0.x.min + -2), (f[7].s0.x.max + -5))))

  a_copy[i].max: max(max(min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 1), (f[7].s0.x.max + -2)), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1))), (min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + 1))
  a[i].max     : max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 4), (f[4].s0.x.max + 1)), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 4), (f[7].s0.x.max + 1)))

  a_copy[i].min: min(min((f[7].s0.y.min + -2), (f[4].s0.y.min + -1)), (f[7].s0.y.min + -3))
  a[i].min     : min((f[4].s0.y.min + -1), (f[7].s0.y.min + -3))

  a_copy[i].max: max(max((f[7].s0.y.max + -2), (f[4].s0.y.max + -1)), (f[7].s0.y.max + -3))
  a[i].max     : max((f[4].s0.y.max + -1), (f[7].s0.y.max + -2))

  a_copy[i].min: min((min(f[7].s0.x.min, (f[7].s0.x.max + -3)) + 2), min(f[4].s0.x.min, (f[4].s0.x.max + -3)))
  a[i].min     : min((f[4].s0.x.max + -3), min(f[4].s0.x.min, min((f[7].s0.x.max + -1), (f[7].s0.x.min + 2))))

  a_copy[i].max: max((min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 3), f[7].s0.x.max) + 2), min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max))
  a[i].max     : max(min((((((f[4].s0.x.max - f[4].s0.x.min)/4)*4) + f[4].s0.x.min) + 3), f[4].s0.x.max), min((((((f[7].s0.x.max - f[7].s0.x.min)/4)*4) + f[7].s0.x.min) + 5), (f[7].s0.x.max + 2)))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_inference.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_inference -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_inference

  a_copy[i].min: min((f.s0.x.min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.min + -1))

  a_copy[i].max: max((f.s0.x.max + 1), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.max + 1))

  a_copy[i].min: min((g.s0.x.min + -1), h.s0.x.min)
  a[i].min     : min(h.s0.x.min, (g.s0.x.min + -1))

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min((g.s0.x.min + -1), h.s0.x.min)
  a[i].min     : min(h.s0.x.min, (g.s0.x.min + -1))

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min((f.s0.x.min + -1), g.s0.x.min)
  a[i].min     : min(g.s0.x.min, (f.s0.x.min + -1))

  a_copy[i].max: max((f.s0.x.max + 1), g.s0.x.max)
  a[i].max     : max(g.s0.x.max, (f.s0.x.max + 1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_of_abs.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_of_abs -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_of_abs
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_of_cast.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_of_cast -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_of_cast
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_of_func.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_of_func -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_of_func

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g$2.s0.x.min, f$2.s0.x.min)
  a[i].min     : min(f$2.s0.x.min, g$2.s0.x.min)

  a_copy[i].max: max(g$2.s0.x.max, f$2.s0.x.max)
  a[i].max     : max(f$2.s0.x.max, g$2.s0.x.max)

  a_copy[i].min: min(g$2.s0.x.min, f$2.s0.x.min)
  a[i].min     : min(f$2.s0.x.min, g$2.s0.x.min)

  a_copy[i].max: max(g$2.s0.x.max, f$2.s0.x.max)
  a[i].max     : max(f$2.s0.x.max, g$2.s0.x.max)

  a_copy[i].min: min(g$3.s0.x.min, f$3.s0.x.min)
  a[i].min     : min(f$3.s0.x.min, g$3.s0.x.min)

  a_copy[i].max: max(g$3.s0.x.max, f$3.s0.x.max)
  a[i].max     : max(f$3.s0.x.max, g$3.s0.x.max)

  a_copy[i].min: min(min(h.s0.x.min, g$3.s0.x.min), 0)
  a[i].min     : min(min(g$3.s0.x.min, h.s0.x.min), 0)

  a_copy[i].max: max(max(h.s0.x.max, g$3.s0.x.max), 90)
  a[i].max     : max(max(g$3.s0.x.max, h.s0.x.max), 90)

  a_copy[i].min: min(g$3.s0.x.min, f$3.s0.x.min)
  a[i].min     : min(f$3.s0.x.min, g$3.s0.x.min)

  a_copy[i].max: max(g$3.s0.x.max, f$3.s0.x.max)
  a[i].max     : max(f$3.s0.x.max, g$3.s0.x.max)

  a_copy[i].min: min(min(h.s0.x.min, g$3.s0.x.min), 0)
  a[i].min     : min(min(g$3.s0.x.min, h.s0.x.min), 0)

  a_copy[i].max: max(max(h.s0.x.max, g$3.s0.x.max), 90)
  a[i].max     : max(max(g$3.s0.x.max, h.s0.x.max), 90)

  a_copy[i].min: min(f0.s0.x.min, f$4.s0.x.min)
  a[i].min     : min(f$4.s0.x.min, f0.s0.x.min)

  a_copy[i].max: max(f0.s0.x.max, f$4.s0.x.max)
  a[i].max     : max(f$4.s0.x.max, f0.s0.x.max)

  a_copy[i].min: min(f1.s0.x.min, f0.s0.x.min)
  a[i].min     : min(f0.s0.x.min, f1.s0.x.min)

  a_copy[i].max: max(f1.s0.x.max, f0.s0.x.max)
  a[i].max     : max(f0.s0.x.max, f1.s0.x.max)

  a_copy[i].min: min(f2.s0.x.min, f1.s0.x.min)
  a[i].min     : min(f1.s0.x.min, f2.s0.x.min)

  a_copy[i].max: max(f2.s0.x.max, f1.s0.x.max)
  a[i].max     : max(f1.s0.x.max, f2.s0.x.max)

  a_copy[i].min: min(f11.s0.x.min, f10.s0.x.min)
  a[i].min     : min(f10.s0.x.min, f11.s0.x.min)

  a_copy[i].max: max(f11.s0.x.max, f10.s0.x.max)
  a[i].max     : max(f10.s0.x.max, f11.s0.x.max)

  a_copy[i].min: min(f12.s0.x.min, f11.s0.x.min)
  a[i].min     : min(f11.s0.x.min, f12.s0.x.min)

  a_copy[i].max: max(f12.s0.x.max, f11.s0.x.max)
  a[i].max     : max(f11.s0.x.max, f12.s0.x.max)

  a_copy[i].min: min(f13.s0.x.min, f12.s0.x.min)
  a[i].min     : min(f12.s0.x.min, f13.s0.x.min)

  a_copy[i].max: max(f13.s0.x.max, f12.s0.x.max)
  a[i].max     : max(f12.s0.x.max, f13.s0.x.max)

  a_copy[i].min: min(f14.s0.x.min, f13.s0.x.min)
  a[i].min     : min(f13.s0.x.min, f14.s0.x.min)

  a_copy[i].max: max(f14.s0.x.max, f13.s0.x.max)
  a[i].max     : max(f13.s0.x.max, f14.s0.x.max)

  a_copy[i].min: min(f15.s0.x.min, f14.s0.x.min)
  a[i].min     : min(f14.s0.x.min, f15.s0.x.min)

  a_copy[i].max: max(f15.s0.x.max, f14.s0.x.max)
  a[i].max     : max(f14.s0.x.max, f15.s0.x.max)

  a_copy[i].min: min(f16.s0.x.min, f15.s0.x.min)
  a[i].min     : min(f15.s0.x.min, f16.s0.x.min)

  a_copy[i].max: max(f16.s0.x.max, f15.s0.x.max)
  a[i].max     : max(f15.s0.x.max, f16.s0.x.max)

  a_copy[i].min: min(f17.s0.x.min, f16.s0.x.min)
  a[i].min     : min(f16.s0.x.min, f17.s0.x.min)

  a_copy[i].max: max(f17.s0.x.max, f16.s0.x.max)
  a[i].max     : max(f16.s0.x.max, f17.s0.x.max)

  a_copy[i].min: min(f18.s0.x.min, f17.s0.x.min)
  a[i].min     : min(f17.s0.x.min, f18.s0.x.min)

  a_copy[i].max: max(f18.s0.x.max, f17.s0.x.max)
  a[i].max     : max(f17.s0.x.max, f18.s0.x.max)

  a_copy[i].min: min(h$2.s0.x.min, f18.s0.x.min)
  a[i].min     : min(f18.s0.x.min, h$2.s0.x.min)

  a_copy[i].max: max(h$2.s0.x.max, f18.s0.x.max)
  a[i].max     : max(f18.s0.x.max, h$2.s0.x.max)

  a_copy[i].min: min(f3.s0.x.min, f2.s0.x.min)
  a[i].min     : min(f2.s0.x.min, f3.s0.x.min)

  a_copy[i].max: max(f3.s0.x.max, f2.s0.x.max)
  a[i].max     : max(f2.s0.x.max, f3.s0.x.max)

  a_copy[i].min: min(f4.s0.x.min, f3.s0.x.min)
  a[i].min     : min(f3.s0.x.min, f4.s0.x.min)

  a_copy[i].max: max(f4.s0.x.max, f3.s0.x.max)
  a[i].max     : max(f3.s0.x.max, f4.s0.x.max)

  a_copy[i].min: min(f5.s0.x.min, f4.s0.x.min)
  a[i].min     : min(f4.s0.x.min, f5.s0.x.min)

  a_copy[i].max: max(f5.s0.x.max, f4.s0.x.max)
  a[i].max     : max(f4.s0.x.max, f5.s0.x.max)

  a_copy[i].min: min(f6.s0.x.min, f5.s0.x.min)
  a[i].min     : min(f5.s0.x.min, f6.s0.x.min)

  a_copy[i].max: max(f6.s0.x.max, f5.s0.x.max)
  a[i].max     : max(f5.s0.x.max, f6.s0.x.max)

  a_copy[i].min: min(f7.s0.x.min, f6.s0.x.min)
  a[i].min     : min(f6.s0.x.min, f7.s0.x.min)

  a_copy[i].max: max(f7.s0.x.max, f6.s0.x.max)
  a[i].max     : max(f6.s0.x.max, f7.s0.x.max)

  a_copy[i].min: min(f8.s0.x.min, f7.s0.x.min)
  a[i].min     : min(f7.s0.x.min, f8.s0.x.min)

  a_copy[i].max: max(f8.s0.x.max, f7.s0.x.max)
  a[i].max     : max(f7.s0.x.max, f8.s0.x.max)

  a_copy[i].min: min(f9.s0.x.min, f8.s0.x.min)
  a[i].min     : min(f8.s0.x.min, f9.s0.x.min)

  a_copy[i].max: max(f9.s0.x.max, f8.s0.x.max)
  a[i].max     : max(f8.s0.x.max, f9.s0.x.max)

  a_copy[i].min: min(f10.s0.x.min, f9.s0.x.min)
  a[i].min     : min(f9.s0.x.min, f10.s0.x.min)

  a_copy[i].max: max(f10.s0.x.max, f9.s0.x.max)
  a[i].max     : max(f9.s0.x.max, f10.s0.x.max)

  a_copy[i].min: min(f0.s0.x.min, f$4.s0.x.min)
  a[i].min     : min(f$4.s0.x.min, f0.s0.x.min)

  a_copy[i].max: max(f0.s0.x.max, f$4.s0.x.max)
  a[i].max     : max(f$4.s0.x.max, f0.s0.x.max)

  a_copy[i].min: min(f1.s0.x.min, f0.s0.x.min)
  a[i].min     : min(f0.s0.x.min, f1.s0.x.min)

  a_copy[i].max: max(f1.s0.x.max, f0.s0.x.max)
  a[i].max     : max(f0.s0.x.max, f1.s0.x.max)

  a_copy[i].min: min(f2.s0.x.min, f1.s0.x.min)
  a[i].min     : min(f1.s0.x.min, f2.s0.x.min)

  a_copy[i].max: max(f2.s0.x.max, f1.s0.x.max)
  a[i].max     : max(f1.s0.x.max, f2.s0.x.max)

  a_copy[i].min: min(f3.s0.x.min, f2.s0.x.min)
  a[i].min     : min(f2.s0.x.min, f3.s0.x.min)

  a_copy[i].max: max(f3.s0.x.max, f2.s0.x.max)
  a[i].max     : max(f2.s0.x.max, f3.s0.x.max)

  a_copy[i].min: min(f4.s0.x.min, f3.s0.x.min)
  a[i].min     : min(f3.s0.x.min, f4.s0.x.min)

  a_copy[i].max: max(f4.s0.x.max, f3.s0.x.max)
  a[i].max     : max(f3.s0.x.max, f4.s0.x.max)

  a_copy[i].min: min(f5.s0.x.min, f4.s0.x.min)
  a[i].min     : min(f4.s0.x.min, f5.s0.x.min)

  a_copy[i].max: max(f5.s0.x.max, f4.s0.x.max)
  a[i].max     : max(f4.s0.x.max, f5.s0.x.max)

  a_copy[i].min: min(f6.s0.x.min, f5.s0.x.min)
  a[i].min     : min(f5.s0.x.min, f6.s0.x.min)

  a_copy[i].max: max(f6.s0.x.max, f5.s0.x.max)
  a[i].max     : max(f5.s0.x.max, f6.s0.x.max)

  a_copy[i].min: min(f7.s0.x.min, f6.s0.x.min)
  a[i].min     : min(f6.s0.x.min, f7.s0.x.min)

  a_copy[i].max: max(f7.s0.x.max, f6.s0.x.max)
  a[i].max     : max(f6.s0.x.max, f7.s0.x.max)

  a_copy[i].min: min(f8.s0.x.min, f7.s0.x.min)
  a[i].min     : min(f7.s0.x.min, f8.s0.x.min)

  a_copy[i].max: max(f8.s0.x.max, f7.s0.x.max)
  a[i].max     : max(f7.s0.x.max, f8.s0.x.max)

  a_copy[i].min: min(f9.s0.x.min, f8.s0.x.min)
  a[i].min     : min(f8.s0.x.min, f9.s0.x.min)

  a_copy[i].max: max(f9.s0.x.max, f8.s0.x.max)
  a[i].max     : max(f8.s0.x.max, f9.s0.x.max)

  a_copy[i].min: min(f10.s0.x.min, f9.s0.x.min)
  a[i].min     : min(f9.s0.x.min, f10.s0.x.min)

  a_copy[i].max: max(f10.s0.x.max, f9.s0.x.max)
  a[i].max     : max(f9.s0.x.max, f10.s0.x.max)

  a_copy[i].min: min(f11.s0.x.min, f10.s0.x.min)
  a[i].min     : min(f10.s0.x.min, f11.s0.x.min)

  a_copy[i].max: max(f11.s0.x.max, f10.s0.x.max)
  a[i].max     : max(f10.s0.x.max, f11.s0.x.max)

  a_copy[i].min: min(f12.s0.x.min, f11.s0.x.min)
  a[i].min     : min(f11.s0.x.min, f12.s0.x.min)

  a_copy[i].max: max(f12.s0.x.max, f11.s0.x.max)
  a[i].max     : max(f11.s0.x.max, f12.s0.x.max)

  a_copy[i].min: min(f13.s0.x.min, f12.s0.x.min)
  a[i].min     : min(f12.s0.x.min, f13.s0.x.min)

  a_copy[i].max: max(f13.s0.x.max, f12.s0.x.max)
  a[i].max     : max(f12.s0.x.max, f13.s0.x.max)

  a_copy[i].min: min(f14.s0.x.min, f13.s0.x.min)
  a[i].min     : min(f13.s0.x.min, f14.s0.x.min)

  a_copy[i].max: max(f14.s0.x.max, f13.s0.x.max)
  a[i].max     : max(f13.s0.x.max, f14.s0.x.max)

  a_copy[i].min: min(f15.s0.x.min, f14.s0.x.min)
  a[i].min     : min(f14.s0.x.min, f15.s0.x.min)

  a_copy[i].max: max(f15.s0.x.max, f14.s0.x.max)
  a[i].max     : max(f14.s0.x.max, f15.s0.x.max)

  a_copy[i].min: min(f16.s0.x.min, f15.s0.x.min)
  a[i].min     : min(f15.s0.x.min, f16.s0.x.min)

  a_copy[i].max: max(f16.s0.x.max, f15.s0.x.max)
  a[i].max     : max(f15.s0.x.max, f16.s0.x.max)

  a_copy[i].min: min(f17.s0.x.min, f16.s0.x.min)
  a[i].min     : min(f16.s0.x.min, f17.s0.x.min)

  a_copy[i].max: max(f17.s0.x.max, f16.s0.x.max)
  a[i].max     : max(f16.s0.x.max, f17.s0.x.max)

  a_copy[i].min: min(f18.s0.x.min, f17.s0.x.min)
  a[i].min     : min(f17.s0.x.min, f18.s0.x.min)

  a_copy[i].max: max(f18.s0.x.max, f17.s0.x.max)
  a[i].max     : max(f17.s0.x.max, f18.s0.x.max)

  a_copy[i].min: min(h$2.s0.x.min, f18.s0.x.min)
  a[i].min     : min(f18.s0.x.min, h$2.s0.x.min)

  a_copy[i].max: max(h$2.s0.x.max, f18.s0.x.max)
  a[i].max     : max(f18.s0.x.max, h$2.s0.x.max)

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9142) min: f$4.s0.x; max: f$4.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9144) min: f0.s0.x; max: f0.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9154) min: f1.s0.x; max: f1.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9164) min: f2.s0.x; max: f2.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9174) min: f3.s0.x; max: f3.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9184) min: f4.s0.x; max: f4.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9194) min: f5.s0.x; max: f5.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9204) min: f6.s0.x; max: f6.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9214) min: f7.s0.x; max: f7.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9224) min: f8.s0.x; max: f8.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9234) min: f9.s0.x; max: f9.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9244) min: f10.s0.x; max: f10.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9254) min: f11.s0.x; max: f11.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9264) min: f12.s0.x; max: f12.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9274) min: f13.s0.x; max: f13.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9284) min: f14.s0.x; max: f14.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9294) min: f15.s0.x; max: f15.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9304) min: f16.s0.x; max: f16.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9314) min: f17.s0.x; max: f17.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0

OVERLAP BOXES
  Box A:
Used: (undefined)
Dim (_interval$9324) min: f18.s0.x; max: f18.s0.x
  Box B:
Used: (undefined)
boxes_overlap_halide? 0
boxes_overlap_nfm? 0
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_of_monotonic_math.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_of_monotonic_math -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_of_monotonic_math
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/bounds_query.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_bounds_query -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_bounds_query

  a_copy[i].min: min((first_and_second.s0.x.min + -1), first.s0.x.min)
  a[i].min     : min(first.s0.x.min, (first_and_second.s0.x.min + -1))

  a_copy[i].max: max((first_and_second.s0.x.max + 3), first.s0.x.max)
  a[i].max     : max(first.s0.x.max, (first_and_second.s0.x.max + 3))

  a_copy[i].min: min((first_and_second.s0.y.min + -1), first.s0.y.min)
  a[i].min     : min(first.s0.y.min, (first_and_second.s0.y.min + -1))

  a_copy[i].max: max((first_and_second.s0.y.max + 1), first.s0.y.max)
  a[i].max     : max(first.s0.y.max, (first_and_second.s0.y.max + 1))

  a_copy[i].min: min((first_and_second.s0.x.min + -1), first.s0.x.min)
  a[i].min     : min(first.s0.x.min, (first_and_second.s0.x.min + -1))

  a_copy[i].max: max((first_and_second.s0.x.max + 3), first.s0.x.max)
  a[i].max     : max(first.s0.x.max, (first_and_second.s0.x.max + 3))

  a_copy[i].min: min((first_and_second.s0.y.min + -1), first.s0.y.min)
  a[i].min     : min(first.s0.y.min, (first_and_second.s0.y.min + -1))

  a_copy[i].max: max((first_and_second.s0.y.max + 1), first.s0.y.max)
  a[i].max     : max(first.s0.y.max, (first_and_second.s0.y.max + 1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/buffer_t.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_buffer_t -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_buffer_t
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/cascaded_filters.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_cascaded_filters -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_cascaded_filters

  a_copy[i].min: min(S1.s0.x.min, S0.s0.x.min)
  a[i].min     : min(S0.s0.x.min, S1.s0.x.min)

  a_copy[i].max: max((S1.s0.x.max + 1), S0.s0.x.max)
  a[i].max     : max(S0.s0.x.max, (S1.s0.x.max + 1))

  a_copy[i].min: min(S2.s0.x.min, S1.s0.x.min)
  a[i].min     : min(S1.s0.x.min, S2.s0.x.min)

  a_copy[i].max: max((S2.s0.x.max + 1), S1.s0.x.max)
  a[i].max     : max(S1.s0.x.max, (S2.s0.x.max + 1))

  a_copy[i].min: min(S11.s0.x.min, S10.s0.x.min)
  a[i].min     : min(S10.s0.x.min, S11.s0.x.min)

  a_copy[i].max: max((S11.s0.x.max + 1), S10.s0.x.max)
  a[i].max     : max(S10.s0.x.max, (S11.s0.x.max + 1))

  a_copy[i].min: min(S12.s0.x.min, S11.s0.x.min)
  a[i].min     : min(S11.s0.x.min, S12.s0.x.min)

  a_copy[i].max: max((S12.s0.x.max + 1), S11.s0.x.max)
  a[i].max     : max(S11.s0.x.max, (S12.s0.x.max + 1))

  a_copy[i].min: min(S13.s0.x.min, S12.s0.x.min)
  a[i].min     : min(S12.s0.x.min, S13.s0.x.min)

  a_copy[i].max: max((S13.s0.x.max + 1), S12.s0.x.max)
  a[i].max     : max(S12.s0.x.max, (S13.s0.x.max + 1))

  a_copy[i].min: min(S14.s0.x.min, S13.s0.x.min)
  a[i].min     : min(S13.s0.x.min, S14.s0.x.min)

  a_copy[i].max: max((S14.s0.x.max + 1), S13.s0.x.max)
  a[i].max     : max(S13.s0.x.max, (S14.s0.x.max + 1))

  a_copy[i].min: min(S15.s0.x.min, S14.s0.x.min)
  a[i].min     : min(S14.s0.x.min, S15.s0.x.min)

  a_copy[i].max: max((S15.s0.x.max + 1), S14.s0.x.max)
  a[i].max     : max(S14.s0.x.max, (S15.s0.x.max + 1))

  a_copy[i].min: min(S16.s0.x.min, S15.s0.x.min)
  a[i].min     : min(S15.s0.x.min, S16.s0.x.min)

  a_copy[i].max: max((S16.s0.x.max + 1), S15.s0.x.max)
  a[i].max     : max(S15.s0.x.max, (S16.s0.x.max + 1))

  a_copy[i].min: min(S17.s0.x.min, S16.s0.x.min)
  a[i].min     : min(S16.s0.x.min, S17.s0.x.min)

  a_copy[i].max: max((S17.s0.x.max + 1), S16.s0.x.max)
  a[i].max     : max(S16.s0.x.max, (S17.s0.x.max + 1))

  a_copy[i].min: min(S18.s0.x.min, S17.s0.x.min)
  a[i].min     : min(S17.s0.x.min, S18.s0.x.min)

  a_copy[i].max: max((S18.s0.x.max + 1), S17.s0.x.max)
  a[i].max     : max(S17.s0.x.max, (S18.s0.x.max + 1))

  a_copy[i].min: min(S19.s0.x.min, S18.s0.x.min)
  a[i].min     : min(S18.s0.x.min, S19.s0.x.min)

  a_copy[i].max: max((S19.s0.x.max + 1), S18.s0.x.max)
  a[i].max     : max(S18.s0.x.max, (S19.s0.x.max + 1))

  a_copy[i].min: min(S20.s0.x.min, S19.s0.x.min)
  a[i].min     : min(S19.s0.x.min, S20.s0.x.min)

  a_copy[i].max: max((S20.s0.x.max + 1), S19.s0.x.max)
  a[i].max     : max(S19.s0.x.max, (S20.s0.x.max + 1))

  a_copy[i].min: min(S3.s0.x.min, S2.s0.x.min)
  a[i].min     : min(S2.s0.x.min, S3.s0.x.min)

  a_copy[i].max: max((S3.s0.x.max + 1), S2.s0.x.max)
  a[i].max     : max(S2.s0.x.max, (S3.s0.x.max + 1))

  a_copy[i].min: min(S21.s0.x.min, S20.s0.x.min)
  a[i].min     : min(S20.s0.x.min, S21.s0.x.min)

  a_copy[i].max: max((S21.s0.x.max + 1), S20.s0.x.max)
  a[i].max     : max(S20.s0.x.max, (S21.s0.x.max + 1))

  a_copy[i].min: min(S22.s0.x.min, S21.s0.x.min)
  a[i].min     : min(S21.s0.x.min, S22.s0.x.min)

  a_copy[i].max: max((S22.s0.x.max + 1), S21.s0.x.max)
  a[i].max     : max(S21.s0.x.max, (S22.s0.x.max + 1))

  a_copy[i].min: min(S23.s0.x.min, S22.s0.x.min)
  a[i].min     : min(S22.s0.x.min, S23.s0.x.min)

  a_copy[i].max: max((S23.s0.x.max + 1), S22.s0.x.max)
  a[i].max     : max(S22.s0.x.max, (S23.s0.x.max + 1))

  a_copy[i].min: min(S24.s0.x.min, S23.s0.x.min)
  a[i].min     : min(S23.s0.x.min, S24.s0.x.min)

  a_copy[i].max: max((S24.s0.x.max + 1), S23.s0.x.max)
  a[i].max     : max(S23.s0.x.max, (S24.s0.x.max + 1))

  a_copy[i].min: min(S25.s0.x.min, S24.s0.x.min)
  a[i].min     : min(S24.s0.x.min, S25.s0.x.min)

  a_copy[i].max: max((S25.s0.x.max + 1), S24.s0.x.max)
  a[i].max     : max(S24.s0.x.max, (S25.s0.x.max + 1))

  a_copy[i].min: min(S26.s0.x.min, S25.s0.x.min)
  a[i].min     : min(S25.s0.x.min, S26.s0.x.min)

  a_copy[i].max: max((S26.s0.x.max + 1), S25.s0.x.max)
  a[i].max     : max(S25.s0.x.max, (S26.s0.x.max + 1))

  a_copy[i].min: min(S27.s0.x.min, S26.s0.x.min)
  a[i].min     : min(S26.s0.x.min, S27.s0.x.min)

  a_copy[i].max: max((S27.s0.x.max + 1), S26.s0.x.max)
  a[i].max     : max(S26.s0.x.max, (S27.s0.x.max + 1))

  a_copy[i].min: min(S28.s0.x.min, S27.s0.x.min)
  a[i].min     : min(S27.s0.x.min, S28.s0.x.min)

  a_copy[i].max: max((S28.s0.x.max + 1), S27.s0.x.max)
  a[i].max     : max(S27.s0.x.max, (S28.s0.x.max + 1))

  a_copy[i].min: min(S29.s0.x.min, S28.s0.x.min)
  a[i].min     : min(S28.s0.x.min, S29.s0.x.min)

  a_copy[i].max: max((S29.s0.x.max + 1), S28.s0.x.max)
  a[i].max     : max(S28.s0.x.max, (S29.s0.x.max + 1))

  a_copy[i].min: min(S30.s0.x.min, S29.s0.x.min)
  a[i].min     : min(S29.s0.x.min, S30.s0.x.min)

  a_copy[i].max: max((S30.s0.x.max + 1), S29.s0.x.max)
  a[i].max     : max(S29.s0.x.max, (S30.s0.x.max + 1))

  a_copy[i].min: min(S4.s0.x.min, S3.s0.x.min)
  a[i].min     : min(S3.s0.x.min, S4.s0.x.min)

  a_copy[i].max: max((S4.s0.x.max + 1), S3.s0.x.max)
  a[i].max     : max(S3.s0.x.max, (S4.s0.x.max + 1))

  a_copy[i].min: min(S31.s0.x.min, S30.s0.x.min)
  a[i].min     : min(S30.s0.x.min, S31.s0.x.min)

  a_copy[i].max: max((S31.s0.x.max + 1), S30.s0.x.max)
  a[i].max     : max(S30.s0.x.max, (S31.s0.x.max + 1))

  a_copy[i].min: min(S32.s0.x.min, S31.s0.x.min)
  a[i].min     : min(S31.s0.x.min, S32.s0.x.min)

  a_copy[i].max: max((S32.s0.x.max + 1), S31.s0.x.max)
  a[i].max     : max(S31.s0.x.max, (S32.s0.x.max + 1))

  a_copy[i].min: min(S33.s0.x.min, S32.s0.x.min)
  a[i].min     : min(S32.s0.x.min, S33.s0.x.min)

  a_copy[i].max: max((S33.s0.x.max + 1), S32.s0.x.max)
  a[i].max     : max(S32.s0.x.max, (S33.s0.x.max + 1))

  a_copy[i].min: min(S34.s0.x.min, S33.s0.x.min)
  a[i].min     : min(S33.s0.x.min, S34.s0.x.min)

  a_copy[i].max: max((S34.s0.x.max + 1), S33.s0.x.max)
  a[i].max     : max(S33.s0.x.max, (S34.s0.x.max + 1))

  a_copy[i].min: min(S35.s0.x.min, S34.s0.x.min)
  a[i].min     : min(S34.s0.x.min, S35.s0.x.min)

  a_copy[i].max: max((S35.s0.x.max + 1), S34.s0.x.max)
  a[i].max     : max(S34.s0.x.max, (S35.s0.x.max + 1))

  a_copy[i].min: min(S36.s0.x.min, S35.s0.x.min)
  a[i].min     : min(S35.s0.x.min, S36.s0.x.min)

  a_copy[i].max: max((S36.s0.x.max + 1), S35.s0.x.max)
  a[i].max     : max(S35.s0.x.max, (S36.s0.x.max + 1))

  a_copy[i].min: min(S37.s0.x.min, S36.s0.x.min)
  a[i].min     : min(S36.s0.x.min, S37.s0.x.min)

  a_copy[i].max: max((S37.s0.x.max + 1), S36.s0.x.max)
  a[i].max     : max(S36.s0.x.max, (S37.s0.x.max + 1))

  a_copy[i].min: min(S38.s0.x.min, S37.s0.x.min)
  a[i].min     : min(S37.s0.x.min, S38.s0.x.min)

  a_copy[i].max: max((S38.s0.x.max + 1), S37.s0.x.max)
  a[i].max     : max(S37.s0.x.max, (S38.s0.x.max + 1))

  a_copy[i].min: min(S39.s0.x.min, S38.s0.x.min)
  a[i].min     : min(S38.s0.x.min, S39.s0.x.min)

  a_copy[i].max: max((S39.s0.x.max + 1), S38.s0.x.max)
  a[i].max     : max(S38.s0.x.max, (S39.s0.x.max + 1))

  a_copy[i].min: min(S40.s0.x.min, S39.s0.x.min)
  a[i].min     : min(S39.s0.x.min, S40.s0.x.min)

  a_copy[i].max: max((S40.s0.x.max + 1), S39.s0.x.max)
  a[i].max     : max(S39.s0.x.max, (S40.s0.x.max + 1))

  a_copy[i].min: min(S5.s0.x.min, S4.s0.x.min)
  a[i].min     : min(S4.s0.x.min, S5.s0.x.min)

  a_copy[i].max: max((S5.s0.x.max + 1), S4.s0.x.max)
  a[i].max     : max(S4.s0.x.max, (S5.s0.x.max + 1))

  a_copy[i].min: min(S41.s0.x.min, S40.s0.x.min)
  a[i].min     : min(S40.s0.x.min, S41.s0.x.min)

  a_copy[i].max: max((S41.s0.x.max + 1), S40.s0.x.max)
  a[i].max     : max(S40.s0.x.max, (S41.s0.x.max + 1))

  a_copy[i].min: min(S42.s0.x.min, S41.s0.x.min)
  a[i].min     : min(S41.s0.x.min, S42.s0.x.min)

  a_copy[i].max: max((S42.s0.x.max + 1), S41.s0.x.max)
  a[i].max     : max(S41.s0.x.max, (S42.s0.x.max + 1))

  a_copy[i].min: min(S43.s0.x.min, S42.s0.x.min)
  a[i].min     : min(S42.s0.x.min, S43.s0.x.min)

  a_copy[i].max: max((S43.s0.x.max + 1), S42.s0.x.max)
  a[i].max     : max(S42.s0.x.max, (S43.s0.x.max + 1))

  a_copy[i].min: min(S44.s0.x.min, S43.s0.x.min)
  a[i].min     : min(S43.s0.x.min, S44.s0.x.min)

  a_copy[i].max: max((S44.s0.x.max + 1), S43.s0.x.max)
  a[i].max     : max(S43.s0.x.max, (S44.s0.x.max + 1))

  a_copy[i].min: min(S45.s0.x.min, S44.s0.x.min)
  a[i].min     : min(S44.s0.x.min, S45.s0.x.min)

  a_copy[i].max: max((S45.s0.x.max + 1), S44.s0.x.max)
  a[i].max     : max(S44.s0.x.max, (S45.s0.x.max + 1))

  a_copy[i].min: min(S46.s0.x.min, S45.s0.x.min)
  a[i].min     : min(S45.s0.x.min, S46.s0.x.min)

  a_copy[i].max: max((S46.s0.x.max + 1), S45.s0.x.max)
  a[i].max     : max(S45.s0.x.max, (S46.s0.x.max + 1))

  a_copy[i].min: min(S47.s0.x.min, S46.s0.x.min)
  a[i].min     : min(S46.s0.x.min, S47.s0.x.min)

  a_copy[i].max: max((S47.s0.x.max + 1), S46.s0.x.max)
  a[i].max     : max(S46.s0.x.max, (S47.s0.x.max + 1))

  a_copy[i].min: min(S48.s0.x.min, S47.s0.x.min)
  a[i].min     : min(S47.s0.x.min, S48.s0.x.min)

  a_copy[i].max: max((S48.s0.x.max + 1), S47.s0.x.max)
  a[i].max     : max(S47.s0.x.max, (S48.s0.x.max + 1))

  a_copy[i].min: min(S49.s0.x.min, S48.s0.x.min)
  a[i].min     : min(S48.s0.x.min, S49.s0.x.min)

  a_copy[i].max: max((S49.s0.x.max + 1), S48.s0.x.max)
  a[i].max     : max(S48.s0.x.max, (S49.s0.x.max + 1))

  a_copy[i].min: min(S50.s0.x.min, S49.s0.x.min)
  a[i].min     : min(S49.s0.x.min, S50.s0.x.min)

  a_copy[i].max: max((S50.s0.x.max + 1), S49.s0.x.max)
  a[i].max     : max(S49.s0.x.max, (S50.s0.x.max + 1))

  a_copy[i].min: min(S6.s0.x.min, S5.s0.x.min)
  a[i].min     : min(S5.s0.x.min, S6.s0.x.min)

  a_copy[i].max: max((S6.s0.x.max + 1), S5.s0.x.max)
  a[i].max     : max(S5.s0.x.max, (S6.s0.x.max + 1))

  a_copy[i].min: min(S51.s0.x.min, S50.s0.x.min)
  a[i].min     : min(S50.s0.x.min, S51.s0.x.min)

  a_copy[i].max: max((S51.s0.x.max + 1), S50.s0.x.max)
  a[i].max     : max(S50.s0.x.max, (S51.s0.x.max + 1))

  a_copy[i].min: min(S52.s0.x.min, S51.s0.x.min)
  a[i].min     : min(S51.s0.x.min, S52.s0.x.min)

  a_copy[i].max: max((S52.s0.x.max + 1), S51.s0.x.max)
  a[i].max     : max(S51.s0.x.max, (S52.s0.x.max + 1))

  a_copy[i].min: min(S53.s0.x.min, S52.s0.x.min)
  a[i].min     : min(S52.s0.x.min, S53.s0.x.min)

  a_copy[i].max: max((S53.s0.x.max + 1), S52.s0.x.max)
  a[i].max     : max(S52.s0.x.max, (S53.s0.x.max + 1))

  a_copy[i].min: min(S54.s0.x.min, S53.s0.x.min)
  a[i].min     : min(S53.s0.x.min, S54.s0.x.min)

  a_copy[i].max: max((S54.s0.x.max + 1), S53.s0.x.max)
  a[i].max     : max(S53.s0.x.max, (S54.s0.x.max + 1))

  a_copy[i].min: min(S55.s0.x.min, S54.s0.x.min)
  a[i].min     : min(S54.s0.x.min, S55.s0.x.min)

  a_copy[i].max: max((S55.s0.x.max + 1), S54.s0.x.max)
  a[i].max     : max(S54.s0.x.max, (S55.s0.x.max + 1))

  a_copy[i].min: min(S56.s0.x.min, S55.s0.x.min)
  a[i].min     : min(S55.s0.x.min, S56.s0.x.min)

  a_copy[i].max: max((S56.s0.x.max + 1), S55.s0.x.max)
  a[i].max     : max(S55.s0.x.max, (S56.s0.x.max + 1))

  a_copy[i].min: min(S57.s0.x.min, S56.s0.x.min)
  a[i].min     : min(S56.s0.x.min, S57.s0.x.min)

  a_copy[i].max: max((S57.s0.x.max + 1), S56.s0.x.max)
  a[i].max     : max(S56.s0.x.max, (S57.s0.x.max + 1))

  a_copy[i].min: min(S58.s0.x.min, S57.s0.x.min)
  a[i].min     : min(S57.s0.x.min, S58.s0.x.min)

  a_copy[i].max: max((S58.s0.x.max + 1), S57.s0.x.max)
  a[i].max     : max(S57.s0.x.max, (S58.s0.x.max + 1))

  a_copy[i].min: min(S59.s0.x.min, S58.s0.x.min)
  a[i].min     : min(S58.s0.x.min, S59.s0.x.min)

  a_copy[i].max: max((S59.s0.x.max + 1), S58.s0.x.max)
  a[i].max     : max(S58.s0.x.max, (S59.s0.x.max + 1))

  a_copy[i].min: min(S60.s0.x.min, S59.s0.x.min)
  a[i].min     : min(S59.s0.x.min, S60.s0.x.min)

  a_copy[i].max: max((S60.s0.x.max + 1), S59.s0.x.max)
  a[i].max     : max(S59.s0.x.max, (S60.s0.x.max + 1))

  a_copy[i].min: min(S7.s0.x.min, S6.s0.x.min)
  a[i].min     : min(S6.s0.x.min, S7.s0.x.min)

  a_copy[i].max: max((S7.s0.x.max + 1), S6.s0.x.max)
  a[i].max     : max(S6.s0.x.max, (S7.s0.x.max + 1))

  a_copy[i].min: min(S61.s0.x.min, S60.s0.x.min)
  a[i].min     : min(S60.s0.x.min, S61.s0.x.min)

  a_copy[i].max: max((S61.s0.x.max + 1), S60.s0.x.max)
  a[i].max     : max(S60.s0.x.max, (S61.s0.x.max + 1))

  a_copy[i].min: min(S62.s0.x.min, S61.s0.x.min)
  a[i].min     : min(S61.s0.x.min, S62.s0.x.min)

  a_copy[i].max: max((S62.s0.x.max + 1), S61.s0.x.max)
  a[i].max     : max(S61.s0.x.max, (S62.s0.x.max + 1))

  a_copy[i].min: min(S63.s0.x.min, S62.s0.x.min)
  a[i].min     : min(S62.s0.x.min, S63.s0.x.min)

  a_copy[i].max: max((S63.s0.x.max + 1), S62.s0.x.max)
  a[i].max     : max(S62.s0.x.max, (S63.s0.x.max + 1))

  a_copy[i].min: min(S64.s0.x.min, S63.s0.x.min)
  a[i].min     : min(S63.s0.x.min, S64.s0.x.min)

  a_copy[i].max: max((S64.s0.x.max + 1), S63.s0.x.max)
  a[i].max     : max(S63.s0.x.max, (S64.s0.x.max + 1))

  a_copy[i].min: min(S65.s0.x.min, S64.s0.x.min)
  a[i].min     : min(S64.s0.x.min, S65.s0.x.min)

  a_copy[i].max: max((S65.s0.x.max + 1), S64.s0.x.max)
  a[i].max     : max(S64.s0.x.max, (S65.s0.x.max + 1))

  a_copy[i].min: min(S66.s0.x.min, S65.s0.x.min)
  a[i].min     : min(S65.s0.x.min, S66.s0.x.min)

  a_copy[i].max: max((S66.s0.x.max + 1), S65.s0.x.max)
  a[i].max     : max(S65.s0.x.max, (S66.s0.x.max + 1))

  a_copy[i].min: min(S67.s0.x.min, S66.s0.x.min)
  a[i].min     : min(S66.s0.x.min, S67.s0.x.min)

  a_copy[i].max: max((S67.s0.x.max + 1), S66.s0.x.max)
  a[i].max     : max(S66.s0.x.max, (S67.s0.x.max + 1))

  a_copy[i].min: min(S68.s0.x.min, S67.s0.x.min)
  a[i].min     : min(S67.s0.x.min, S68.s0.x.min)

  a_copy[i].max: max((S68.s0.x.max + 1), S67.s0.x.max)
  a[i].max     : max(S67.s0.x.max, (S68.s0.x.max + 1))

  a_copy[i].min: min(S69.s0.x.min, S68.s0.x.min)
  a[i].min     : min(S68.s0.x.min, S69.s0.x.min)

  a_copy[i].max: max((S69.s0.x.max + 1), S68.s0.x.max)
  a[i].max     : max(S68.s0.x.max, (S69.s0.x.max + 1))

  a_copy[i].min: min(S70.s0.x.min, S69.s0.x.min)
  a[i].min     : min(S69.s0.x.min, S70.s0.x.min)

  a_copy[i].max: max((S70.s0.x.max + 1), S69.s0.x.max)
  a[i].max     : max(S69.s0.x.max, (S70.s0.x.max + 1))

  a_copy[i].min: min(S8.s0.x.min, S7.s0.x.min)
  a[i].min     : min(S7.s0.x.min, S8.s0.x.min)

  a_copy[i].max: max((S8.s0.x.max + 1), S7.s0.x.max)
  a[i].max     : max(S7.s0.x.max, (S8.s0.x.max + 1))

  a_copy[i].min: min(S71.s0.x.min, S70.s0.x.min)
  a[i].min     : min(S70.s0.x.min, S71.s0.x.min)

  a_copy[i].max: max((S71.s0.x.max + 1), S70.s0.x.max)
  a[i].max     : max(S70.s0.x.max, (S71.s0.x.max + 1))

  a_copy[i].min: min(S72.s0.x.min, S71.s0.x.min)
  a[i].min     : min(S71.s0.x.min, S72.s0.x.min)

  a_copy[i].max: max((S72.s0.x.max + 1), S71.s0.x.max)
  a[i].max     : max(S71.s0.x.max, (S72.s0.x.max + 1))

  a_copy[i].min: min(S73.s0.x.min, S72.s0.x.min)
  a[i].min     : min(S72.s0.x.min, S73.s0.x.min)

  a_copy[i].max: max((S73.s0.x.max + 1), S72.s0.x.max)
  a[i].max     : max(S72.s0.x.max, (S73.s0.x.max + 1))

  a_copy[i].min: min(S74.s0.x.min, S73.s0.x.min)
  a[i].min     : min(S73.s0.x.min, S74.s0.x.min)

  a_copy[i].max: max((S74.s0.x.max + 1), S73.s0.x.max)
  a[i].max     : max(S73.s0.x.max, (S74.s0.x.max + 1))

  a_copy[i].min: min(S75.s0.x.min, S74.s0.x.min)
  a[i].min     : min(S74.s0.x.min, S75.s0.x.min)

  a_copy[i].max: max((S75.s0.x.max + 1), S74.s0.x.max)
  a[i].max     : max(S74.s0.x.max, (S75.s0.x.max + 1))

  a_copy[i].min: min(S76.s0.x.min, S75.s0.x.min)
  a[i].min     : min(S75.s0.x.min, S76.s0.x.min)

  a_copy[i].max: max((S76.s0.x.max + 1), S75.s0.x.max)
  a[i].max     : max(S75.s0.x.max, (S76.s0.x.max + 1))

  a_copy[i].min: min(S77.s0.x.min, S76.s0.x.min)
  a[i].min     : min(S76.s0.x.min, S77.s0.x.min)

  a_copy[i].max: max((S77.s0.x.max + 1), S76.s0.x.max)
  a[i].max     : max(S76.s0.x.max, (S77.s0.x.max + 1))

  a_copy[i].min: min(S78.s0.x.min, S77.s0.x.min)
  a[i].min     : min(S77.s0.x.min, S78.s0.x.min)

  a_copy[i].max: max((S78.s0.x.max + 1), S77.s0.x.max)
  a[i].max     : max(S77.s0.x.max, (S78.s0.x.max + 1))

  a_copy[i].min: min(S79.s0.x.min, S78.s0.x.min)
  a[i].min     : min(S78.s0.x.min, S79.s0.x.min)

  a_copy[i].max: max((S79.s0.x.max + 1), S78.s0.x.max)
  a[i].max     : max(S78.s0.x.max, (S79.s0.x.max + 1))

  a_copy[i].min: min(S80.s0.x.min, S79.s0.x.min)
  a[i].min     : min(S79.s0.x.min, S80.s0.x.min)

  a_copy[i].max: max((S80.s0.x.max + 1), S79.s0.x.max)
  a[i].max     : max(S79.s0.x.max, (S80.s0.x.max + 1))

  a_copy[i].min: min(S9.s0.x.min, S8.s0.x.min)
  a[i].min     : min(S8.s0.x.min, S9.s0.x.min)

  a_copy[i].max: max((S9.s0.x.max + 1), S8.s0.x.max)
  a[i].max     : max(S8.s0.x.max, (S9.s0.x.max + 1))

  a_copy[i].min: min(S81.s0.x.min, S80.s0.x.min)
  a[i].min     : min(S80.s0.x.min, S81.s0.x.min)

  a_copy[i].max: max((S81.s0.x.max + 1), S80.s0.x.max)
  a[i].max     : max(S80.s0.x.max, (S81.s0.x.max + 1))

  a_copy[i].min: min(S82.s0.x.min, S81.s0.x.min)
  a[i].min     : min(S81.s0.x.min, S82.s0.x.min)

  a_copy[i].max: max((S82.s0.x.max + 1), S81.s0.x.max)
  a[i].max     : max(S81.s0.x.max, (S82.s0.x.max + 1))

  a_copy[i].min: min(S83.s0.x.min, S82.s0.x.min)
  a[i].min     : min(S82.s0.x.min, S83.s0.x.min)

  a_copy[i].max: max((S83.s0.x.max + 1), S82.s0.x.max)
  a[i].max     : max(S82.s0.x.max, (S83.s0.x.max + 1))

  a_copy[i].min: min(S84.s0.x.min, S83.s0.x.min)
  a[i].min     : min(S83.s0.x.min, S84.s0.x.min)

  a_copy[i].max: max((S84.s0.x.max + 1), S83.s0.x.max)
  a[i].max     : max(S83.s0.x.max, (S84.s0.x.max + 1))

  a_copy[i].min: min(S85.s0.x.min, S84.s0.x.min)
  a[i].min     : min(S84.s0.x.min, S85.s0.x.min)

  a_copy[i].max: max((S85.s0.x.max + 1), S84.s0.x.max)
  a[i].max     : max(S84.s0.x.max, (S85.s0.x.max + 1))

  a_copy[i].min: min(S86.s0.x.min, S85.s0.x.min)
  a[i].min     : min(S85.s0.x.min, S86.s0.x.min)

  a_copy[i].max: max((S86.s0.x.max + 1), S85.s0.x.max)
  a[i].max     : max(S85.s0.x.max, (S86.s0.x.max + 1))

  a_copy[i].min: min(S87.s0.x.min, S86.s0.x.min)
  a[i].min     : min(S86.s0.x.min, S87.s0.x.min)

  a_copy[i].max: max((S87.s0.x.max + 1), S86.s0.x.max)
  a[i].max     : max(S86.s0.x.max, (S87.s0.x.max + 1))

  a_copy[i].min: min(S88.s0.x.min, S87.s0.x.min)
  a[i].min     : min(S87.s0.x.min, S88.s0.x.min)

  a_copy[i].max: max((S88.s0.x.max + 1), S87.s0.x.max)
  a[i].max     : max(S87.s0.x.max, (S88.s0.x.max + 1))

  a_copy[i].min: min(S89.s0.x.min, S88.s0.x.min)
  a[i].min     : min(S88.s0.x.min, S89.s0.x.min)

  a_copy[i].max: max((S89.s0.x.max + 1), S88.s0.x.max)
  a[i].max     : max(S88.s0.x.max, (S89.s0.x.max + 1))

  a_copy[i].min: min(S90.s0.x.min, S89.s0.x.min)
  a[i].min     : min(S89.s0.x.min, S90.s0.x.min)

  a_copy[i].max: max((S90.s0.x.max + 1), S89.s0.x.max)
  a[i].max     : max(S89.s0.x.max, (S90.s0.x.max + 1))

  a_copy[i].min: min(S10.s0.x.min, S9.s0.x.min)
  a[i].min     : min(S9.s0.x.min, S10.s0.x.min)

  a_copy[i].max: max((S10.s0.x.max + 1), S9.s0.x.max)
  a[i].max     : max(S9.s0.x.max, (S10.s0.x.max + 1))

  a_copy[i].min: min(S91.s0.x.min, S90.s0.x.min)
  a[i].min     : min(S90.s0.x.min, S91.s0.x.min)

  a_copy[i].max: max((S91.s0.x.max + 1), S90.s0.x.max)
  a[i].max     : max(S90.s0.x.max, (S91.s0.x.max + 1))

  a_copy[i].min: min(S92.s0.x.min, S91.s0.x.min)
  a[i].min     : min(S91.s0.x.min, S92.s0.x.min)

  a_copy[i].max: max((S92.s0.x.max + 1), S91.s0.x.max)
  a[i].max     : max(S91.s0.x.max, (S92.s0.x.max + 1))

  a_copy[i].min: min(S93.s0.x.min, S92.s0.x.min)
  a[i].min     : min(S92.s0.x.min, S93.s0.x.min)

  a_copy[i].max: max((S93.s0.x.max + 1), S92.s0.x.max)
  a[i].max     : max(S92.s0.x.max, (S93.s0.x.max + 1))

  a_copy[i].min: min(S94.s0.x.min, S93.s0.x.min)
  a[i].min     : min(S93.s0.x.min, S94.s0.x.min)

  a_copy[i].max: max((S94.s0.x.max + 1), S93.s0.x.max)
  a[i].max     : max(S93.s0.x.max, (S94.s0.x.max + 1))

  a_copy[i].min: min(S95.s0.x.min, S94.s0.x.min)
  a[i].min     : min(S94.s0.x.min, S95.s0.x.min)

  a_copy[i].max: max((S95.s0.x.max + 1), S94.s0.x.max)
  a[i].max     : max(S94.s0.x.max, (S95.s0.x.max + 1))

  a_copy[i].min: min(S96.s0.x.min, S95.s0.x.min)
  a[i].min     : min(S95.s0.x.min, S96.s0.x.min)

  a_copy[i].max: max((S96.s0.x.max + 1), S95.s0.x.max)
  a[i].max     : max(S95.s0.x.max, (S96.s0.x.max + 1))

  a_copy[i].min: min(S97.s0.x.min, S96.s0.x.min)
  a[i].min     : min(S96.s0.x.min, S97.s0.x.min)

  a_copy[i].max: max((S97.s0.x.max + 1), S96.s0.x.max)
  a[i].max     : max(S96.s0.x.max, (S97.s0.x.max + 1))

  a_copy[i].min: min(S98.s0.x.min, S97.s0.x.min)
  a[i].min     : min(S97.s0.x.min, S98.s0.x.min)

  a_copy[i].max: max((S98.s0.x.max + 1), S97.s0.x.max)
  a[i].max     : max(S97.s0.x.max, (S98.s0.x.max + 1))

  a_copy[i].min: min(S99.s0.x.min, S98.s0.x.min)
  a[i].min     : min(S98.s0.x.min, S99.s0.x.min)

  a_copy[i].max: max((S99.s0.x.max + 1), S98.s0.x.max)
  a[i].max     : max(S98.s0.x.max, (S99.s0.x.max + 1))

  a_copy[i].min: min(S100.s0.x.min, S99.s0.x.min)
  a[i].min     : min(S99.s0.x.min, S100.s0.x.min)

  a_copy[i].max: max((S100.s0.x.max + 1), S99.s0.x.max)
  a[i].max     : max(S99.s0.x.max, (S100.s0.x.max + 1))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].min: min((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].min     : min(((S100.s0.x + 1) % 2), (S100.s0.x % 2))

  a_copy[i].max: max((S100.s0.x % 2), ((S100.s0.x + 1) % 2))
  a[i].max     : max(((S100.s0.x + 1) % 2), (S100.s0.x % 2))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/cast.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_cast -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_cast
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/cast_handle.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_cast_handle -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_cast_handle
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/c_function.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_c_function -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_c_function
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/chunk.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_chunk -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_chunk
Defining function...
Realizing function...
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/chunk_sharing.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_chunk_sharing -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_chunk_sharing
Defining function...
Realizing function...

  a_copy[i].min: min(b.s0.i.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, b.s0.i.min)

  a_copy[i].max: max(b.s0.i.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, b.s0.i.max)

  a_copy[i].min: min(b.s0.j.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, b.s0.j.min)

  a_copy[i].max: max(b.s0.j.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, b.s0.j.max)

  a_copy[i].min: min(min(c.s0.i.min, b.s0.i.min), a.s0.i.min)
  a[i].min     : min(a.s0.i.min, min(b.s0.i.min, c.s0.i.min))

  a_copy[i].max: max(max(c.s0.i.max, b.s0.i.max), a.s0.i.max)
  a[i].max     : max(a.s0.i.max, max(b.s0.i.max, c.s0.i.max))

  a_copy[i].min: min(min(c.s0.j.min, b.s0.j.min), a.s0.j.min)
  a[i].min     : min(a.s0.j.min, min(b.s0.j.min, c.s0.j.min))

  a_copy[i].max: max(max(c.s0.j.max, b.s0.j.max), a.s0.j.max)
  a[i].max     : max(a.s0.j.max, max(b.s0.j.max, c.s0.j.max))

  a_copy[i].min: min(d.s0.x.min, b.s0.i.min)
  a[i].min     : min(b.s0.i.min, d.s0.x.min)

  a_copy[i].max: max(d.s0.x.max, b.s0.i.max)
  a[i].max     : max(b.s0.i.max, d.s0.x.max)

  a_copy[i].min: min(d.s0.y.min, b.s0.j.min)
  a[i].min     : min(b.s0.j.min, d.s0.y.min)

  a_copy[i].max: max(d.s0.y.max, b.s0.j.max)
  a[i].max     : max(b.s0.j.max, d.s0.y.max)

  a_copy[i].min: min(d.s0.x.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, d.s0.x.min)

  a_copy[i].max: max(d.s0.x.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, d.s0.x.max)

  a_copy[i].min: min(d.s0.y.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, d.s0.y.min)

  a_copy[i].max: max(d.s0.y.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, d.s0.y.max)

  a_copy[i].min: min(b.s0.i.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, b.s0.i.min)

  a_copy[i].max: max(b.s0.i.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, b.s0.i.max)

  a_copy[i].min: min(b.s0.j.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, b.s0.j.min)

  a_copy[i].max: max(b.s0.j.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, b.s0.j.max)

  a_copy[i].min: min(b.s0.i.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, b.s0.i.min)

  a_copy[i].max: max(b.s0.i.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, b.s0.i.max)

  a_copy[i].min: min(b.s0.j.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, b.s0.j.min)

  a_copy[i].max: max(b.s0.j.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, b.s0.j.max)

  a_copy[i].min: min(b.s0.i.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, b.s0.i.min)

  a_copy[i].max: max(b.s0.i.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, b.s0.i.max)

  a_copy[i].min: min(b.s0.j.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, b.s0.j.min)

  a_copy[i].max: max(b.s0.j.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, b.s0.j.max)

  a_copy[i].min: min(min(c.s0.i.min, b.s0.i.min), a.s0.i.min)
  a[i].min     : min(a.s0.i.min, min(b.s0.i.min, c.s0.i.min))

  a_copy[i].max: max(max(c.s0.i.max, b.s0.i.max), a.s0.i.max)
  a[i].max     : max(a.s0.i.max, max(b.s0.i.max, c.s0.i.max))

  a_copy[i].min: min(min(c.s0.j.min, b.s0.j.min), a.s0.j.min)
  a[i].min     : min(a.s0.j.min, min(b.s0.j.min, c.s0.j.min))

  a_copy[i].max: max(max(c.s0.j.max, b.s0.j.max), a.s0.j.max)
  a[i].max     : max(a.s0.j.max, max(b.s0.j.max, c.s0.j.max))

  a_copy[i].min: min(b.s0.i.min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, b.s0.i.min)

  a_copy[i].max: max(b.s0.i.max, c.s0.i.max)
  a[i].max     : max(c.s0.i.max, b.s0.i.max)

  a_copy[i].min: min(b.s0.j.min, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, b.s0.j.min)

  a_copy[i].max: max(b.s0.j.max, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, b.s0.j.max)

  a_copy[i].min: min(d.s0.x.loop_min, b.s0.i.min)
  a[i].min     : min(b.s0.i.min, d.s0.x.loop_min)

  a_copy[i].max: max(((d.s0.x.loop_extent + d.s0.x.loop_min) + -1), b.s0.i.max)
  a[i].max     : max(b.s0.i.max, ((d.s0.x.loop_min + d.s0.x.loop_extent) + -1))

  a_copy[i].min: min(d.s0.y, b.s0.j.min)
  a[i].min     : min(b.s0.j.min, d.s0.y)

  a_copy[i].max: max(d.s0.y, b.s0.j.max)
  a[i].max     : max(b.s0.j.max, d.s0.y)

  a_copy[i].min: min(d.s0.x.loop_min, c.s0.i.min)
  a[i].min     : min(c.s0.i.min, d.s0.x.loop_min)

  a_copy[i].max: max(((d.s0.x.loop_extent + d.s0.x.loop_min) + -1), c.s0.i.max)
  a[i].max     : max(c.s0.i.max, ((d.s0.x.loop_min + d.s0.x.loop_extent) + -1))

  a_copy[i].min: min(d.s0.y, c.s0.j.min)
  a[i].min     : min(c.s0.j.min, d.s0.y)

  a_copy[i].max: max(d.s0.y, c.s0.j.max)
  a[i].max     : max(c.s0.j.max, d.s0.y)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/circular_reference_leak.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_circular_reference_leak -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_circular_reference_leak
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/code_explosion.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_code_explosion -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_code_explosion
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compare_vars.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compare_vars -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compare_vars
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compile_to_bitcode.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compile_to_bitcode -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compile_to_bitcode

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compile_to.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compile_to -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compile_to

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compile_to_lowered_stmt.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compile_to_lowered_stmt -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compile_to_lowered_stmt

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(j.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, j.s0.x.min)

  a_copy[i].max: max(j.s0.x.max, h.s0.x.max)
  a[i].max     : max(h.s0.x.max, j.s0.x.max)

  a_copy[i].min: min(j.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, j.s0.y.min)

  a_copy[i].max: max(j.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, j.s0.y.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compute_at_split_rvar.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compute_at_split_rvar -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compute_at_split_rvar

  a_copy[i].min: min(g.s0.x.min, g.s1.r.x$r.min)
  a[i].min     : min(g.s1.r.x$r.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, (((((g.s1.r.x$r.max - g.s1.r.x$r.min)/2)*2) + g.s1.r.x$r.min) + 1))
  a[i].max     : max((((((g.s1.r.x$r.max - g.s1.r.x$r.min)/2)*2) + g.s1.r.x$r.min) + 1), g.s0.x.max)

  a_copy[i].min: min(g.s1.r.x$r.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s1.r.x$r.min)

  a_copy[i].max: max((((((g.s1.r.x$r.max - g.s1.r.x$r.min)/2)*2) + g.s1.r.x$r.min) + 1), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, (((((g.s1.r.x$r.max - g.s1.r.x$r.min)/2)*2) + g.s1.r.x$r.min) + 1))

  a_copy[i].min: min((g.s1.r.x$r.ri.base + g.s1.r.x$r.ri), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, (g.s1.r.x$r.ri + g.s1.r.x$r.ri.base))

  a_copy[i].max: max((g.s1.r.x$r.ri.base + g.s1.r.x$r.ri), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, (g.s1.r.x$r.ri + g.s1.r.x$r.ri.base))

  a_copy[i].min: min(g$2.s0.x$2.min, g$2.s1.r$2.x$r.min)
  a[i].min     : min(g$2.s1.r$2.x$r.min, g$2.s0.x$2.min)

  a_copy[i].max: max(g$2.s0.x$2.max, (((((g$2.s1.r$2.x$r.max - g$2.s1.r$2.x$r.min)/2)*2) + g$2.s1.r$2.x$r.min) + 1))
  a[i].max     : max((((((g$2.s1.r$2.x$r.max - g$2.s1.r$2.x$r.min)/2)*2) + g$2.s1.r$2.x$r.min) + 1), g$2.s0.x$2.max)

  a_copy[i].min: min(g$2.s1.r$2.x$r.min, f$2.s0.x$2.min)
  a[i].min     : min(f$2.s0.x$2.min, g$2.s1.r$2.x$r.min)

  a_copy[i].max: max((((((g$2.s1.r$2.x$r.max - g$2.s1.r$2.x$r.min)/2)*2) + g$2.s1.r$2.x$r.min) + 1), f$2.s0.x$2.max)
  a[i].max     : max(f$2.s0.x$2.max, (((((g$2.s1.r$2.x$r.max - g$2.s1.r$2.x$r.min)/2)*2) + g$2.s1.r$2.x$r.min) + 1))

  a_copy[i].min: min((g$2.s1.r$2.x$r.ri$3.base + g$2.s1.r$2.x$r.ri$3.loop_min), f$2.s0.x$2.min)
  a[i].min     : min(f$2.s0.x$2.min, (g$2.s1.r$2.x$r.ri$3.loop_min + g$2.s1.r$2.x$r.ri$3.base))

  a_copy[i].max: max(((g$2.s1.r$2.x$r.ri$3.base + (g$2.s1.r$2.x$r.ri$3.loop_extent + g$2.s1.r$2.x$r.ri$3.loop_min)) + -1), f$2.s0.x$2.max)
  a[i].max     : max(f$2.s0.x$2.max, (((g$2.s1.r$2.x$r.ri$3.loop_min + g$2.s1.r$2.x$r.ri$3.loop_extent) + g$2.s1.r$2.x$r.ri$3.base) + -1))

  a_copy[i].min: min(g$3.s0.x$3.min, g$3.s1.r$3.x$r.min)
  a[i].min     : min(g$3.s1.r$3.x$r.min, g$3.s0.x$3.min)

  a_copy[i].max: max(g$3.s0.x$3.max, (((((g$3.s1.r$3.x$r.max - g$3.s1.r$3.x$r.min)/2)*2) + g$3.s1.r$3.x$r.min) + 1))
  a[i].max     : max((((((g$3.s1.r$3.x$r.max - g$3.s1.r$3.x$r.min)/2)*2) + g$3.s1.r$3.x$r.min) + 1), g$3.s0.x$3.max)

  a_copy[i].min: min(g$3.s1.r$3.x$r.min, f$3.s0.x$3.min)
  a[i].min     : min(f$3.s0.x$3.min, g$3.s1.r$3.x$r.min)

  a_copy[i].max: max((((((g$3.s1.r$3.x$r.max - g$3.s1.r$3.x$r.min)/2)*2) + g$3.s1.r$3.x$r.min) + 1), f$3.s0.x$3.max)
  a[i].max     : max(f$3.s0.x$3.max, (((((g$3.s1.r$3.x$r.max - g$3.s1.r$3.x$r.min)/2)*2) + g$3.s1.r$3.x$r.min) + 1))

  a_copy[i].min: min((g$3.s1.r$3.x$r.ri$4.base + g$3.s1.r$3.x$r.ri$4), f$3.s0.x$3.min)
  a[i].min     : min(f$3.s0.x$3.min, (g$3.s1.r$3.x$r.ri$4 + g$3.s1.r$3.x$r.ri$4.base))

  a_copy[i].max: max((g$3.s1.r$3.x$r.ri$4.base + g$3.s1.r$3.x$r.ri$4), f$3.s0.x$3.max)
  a[i].max     : max(f$3.s0.x$3.max, (g$3.s1.r$3.x$r.ri$4 + g$3.s1.r$3.x$r.ri$4.base))

  a_copy[i].min: min(g$4.s0.x$4.min, g$4.s1.r$4.x$r.min)
  a[i].min     : min(g$4.s1.r$4.x$r.min, g$4.s0.x$4.min)

  a_copy[i].max: max(g$4.s0.x$4.max, (((((g$4.s1.r$4.x$r.max - g$4.s1.r$4.x$r.min)/2)*2) + g$4.s1.r$4.x$r.min) + 1))
  a[i].max     : max((((((g$4.s1.r$4.x$r.max - g$4.s1.r$4.x$r.min)/2)*2) + g$4.s1.r$4.x$r.min) + 1), g$4.s0.x$4.max)

  a_copy[i].min: min(g$4.s1.r$4.x$r.min, f$4.s0.x$4.min)
  a[i].min     : min(f$4.s0.x$4.min, g$4.s1.r$4.x$r.min)

  a_copy[i].max: max((((((g$4.s1.r$4.x$r.max - g$4.s1.r$4.x$r.min)/2)*2) + g$4.s1.r$4.x$r.min) + 1), f$4.s0.x$4.max)
  a[i].max     : max(f$4.s0.x$4.max, (((((g$4.s1.r$4.x$r.max - g$4.s1.r$4.x$r.min)/2)*2) + g$4.s1.r$4.x$r.min) + 1))

  a_copy[i].min: min((g$4.s1.r$4.x$r.ri$5.base + g$4.s1.r$4.x$r.ri$5), f$4.s0.x$4.min)
  a[i].min     : min(f$4.s0.x$4.min, (g$4.s1.r$4.x$r.ri$5 + g$4.s1.r$4.x$r.ri$5.base))

  a_copy[i].max: max((g$4.s1.r$4.x$r.ri$5.base + g$4.s1.r$4.x$r.ri$5), f$4.s0.x$4.max)
  a[i].max     : max(f$4.s0.x$4.max, (g$4.s1.r$4.x$r.ri$5 + g$4.s1.r$4.x$r.ri$5.base))

  a_copy[i].min: min(g$5.s0.x$5.min, g$5.s1.r$5.x$r.min)
  a[i].min     : min(g$5.s1.r$5.x$r.min, g$5.s0.x$5.min)

  a_copy[i].max: max(g$5.s0.x$5.max, (((((g$5.s1.r$5.x$r.max - g$5.s1.r$5.x$r.min)/4)*4) + g$5.s1.r$5.x$r.min) + 3))
  a[i].max     : max((((((g$5.s1.r$5.x$r.max - g$5.s1.r$5.x$r.min)/4)*4) + g$5.s1.r$5.x$r.min) + 3), g$5.s0.x$5.max)

  a_copy[i].min: min(g$5.s1.r$5.x$r.min, f$5.s0.x$5.min)
  a[i].min     : min(f$5.s0.x$5.min, g$5.s1.r$5.x$r.min)

  a_copy[i].max: max((((((g$5.s1.r$5.x$r.max - g$5.s1.r$5.x$r.min)/4)*4) + g$5.s1.r$5.x$r.min) + 3), f$5.s0.x$5.max)
  a[i].max     : max(f$5.s0.x$5.max, (((((g$5.s1.r$5.x$r.max - g$5.s1.r$5.x$r.min)/4)*4) + g$5.s1.r$5.x$r.min) + 3))

  a_copy[i].min: min((g$5.s1.r$5.x$r.ri$6.base + (g$5.s1.r$5.x$r.ri$6.rii.base + g$5.s1.r$5.x$r.ri$6.rii.loop_min)), f$5.s0.x$5.min)
  a[i].min     : min(f$5.s0.x$5.min, ((g$5.s1.r$5.x$r.ri$6.rii.loop_min + g$5.s1.r$5.x$r.ri$6.rii.base) + g$5.s1.r$5.x$r.ri$6.base))

  a_copy[i].max: max(((g$5.s1.r$5.x$r.ri$6.base + (g$5.s1.r$5.x$r.ri$6.rii.base + (g$5.s1.r$5.x$r.ri$6.rii.loop_extent + g$5.s1.r$5.x$r.ri$6.rii.loop_min))) + -1), f$5.s0.x$5.max)
  a[i].max     : max(f$5.s0.x$5.max, ((((g$5.s1.r$5.x$r.ri$6.rii.loop_min + g$5.s1.r$5.x$r.ri$6.rii.loop_extent) + g$5.s1.r$5.x$r.ri$6.rii.base) + g$5.s1.r$5.x$r.ri$6.base) + -1))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/computed_index.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_computed_index -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_computed_index
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/compute_outermost.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_compute_outermost -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_compute_outermost
Frac: -32, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -16*_div + -16, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn1.s0.x$2.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn1.s0.x$2.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -16*_div$2 + 16, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: out.s0.x.max + -1*out.s0.x.min + -16*_div$2 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -1*out.s0.x.min + blur_fn1.s0.x$2.max + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.max + blur_fn1.s0.x$2.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn1.s0.x$2.max + -16*_div$2 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.max + blur_fn1.s0.x$2.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((min((max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1) + 1), 0)*16) + out.s0.x.min), (out.s0.x.max + -15)), blur_fn1.s0.x$2.min)
  a[i].min     : min(blur_fn1.s0.x$2.min, min((out.s0.x.max + -15), out.s0.x.min))

  a_copy[i].max: max(min((((max((max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1) + -1), 0)*16) + out.s0.x.min) + 15), out.s0.x.max), blur_fn1.s0.x$2.max)
  a[i].max     : max(blur_fn1.s0.x$2.max, select(((((out.s0.x.max - out.s0.x.min) + 16)/16) < 1), min((out.s0.x.min + 15), out.s0.x.max), min(((((((out.s0.x.max - out.s0.x.min) + 16)/16)*16) + out.s0.x.min) + -1), out.s0.x.max)))

  a_copy[i].min: min(min(out.s0.y.min, (out.s0.y.max + -15)), blur_fn1.s0.y$2.min)
  a[i].min     : min(blur_fn1.s0.y$2.min, min((out.s0.y.max + -15), out.s0.y.min))

  a_copy[i].max: max(min((((((((((out.s0.x.max - out.s0.x.min) + 16)/16)*(((out.s0.y.max - out.s0.y.min) + 16)/16)) + -1)/max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1))*16) + out.s0.y.min) + 15), out.s0.y.max), blur_fn1.s0.y$2.max)
  a[i].max     : max(blur_fn1.s0.y$2.max, min((((((((((out.s0.x.max - out.s0.x.min) + 16)/16)*(((out.s0.y.max - out.s0.y.min) + 16)/16)) + -1)/max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1))*16) + out.s0.y.min) + 15), out.s0.y.max))
Frac: -32, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -16*_div$4 + -16, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn2.s0.x$3.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn2.s0.x$3.min, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -16*_div$5 + 16, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: out.s0.x.max + -1*out.s0.x.min + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: out.s0.x.max + -1*out.s0.x.min + -16*_div$5 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -1*out.s0.x.min + blur_fn2.s0.x$3.max + -15, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.max + blur_fn2.s0.x$3.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.min + blur_fn2.s0.x$3.max + -16*_div$5 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -1*out.s0.x.max + blur_fn2.s0.x$3.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(min(((min((max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1) + 1), 0)*16) + out.s0.x.min), (out.s0.x.max + -15)), blur_fn2.s0.x$3.min)
  a[i].min     : min(blur_fn2.s0.x$3.min, min((out.s0.x.max + -15), out.s0.x.min))

  a_copy[i].max: max(min((((max((max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1) + -1), 0)*16) + out.s0.x.min) + 15), out.s0.x.max), blur_fn2.s0.x$3.max)
  a[i].max     : max(blur_fn2.s0.x$3.max, select(((((out.s0.x.max - out.s0.x.min) + 16)/16) < 1), min((out.s0.x.min + 15), out.s0.x.max), min(((((((out.s0.x.max - out.s0.x.min) + 16)/16)*16) + out.s0.x.min) + -1), out.s0.x.max)))

  a_copy[i].min: min(min(out.s0.y.min, (out.s0.y.max + -15)), blur_fn2.s0.y$3.min)
  a[i].min     : min(blur_fn2.s0.y$3.min, min((out.s0.y.max + -15), out.s0.y.min))

  a_copy[i].max: max(min((((((((((out.s0.x.max - out.s0.x.min) + 16)/16)*(((out.s0.y.max - out.s0.y.min) + 16)/16)) + -1)/max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1))*16) + out.s0.y.min) + 15), out.s0.y.max), blur_fn2.s0.y$3.max)
  a[i].max     : max(blur_fn2.s0.y$3.max, min((((((((((out.s0.x.max - out.s0.x.min) + 16)/16)*(((out.s0.y.max - out.s0.y.min) + 16)/16)) + -1)/max((((out.s0.x.max - out.s0.x.min) + 16)/16), 1))*16) + out.s0.y.min) + 15), out.s0.y.max))

  a_copy[i].min: min(blur_fn1.s0.x$2.min, blurx.s0.x$2.min)
  a[i].min     : min(blurx.s0.x$2.min, blur_fn1.s0.x$2.min)

  a_copy[i].max: max(blur_fn1.s0.x$2.max, blurx.s0.x$2.max)
  a[i].max     : max(blurx.s0.x$2.max, blur_fn1.s0.x$2.max)

  a_copy[i].min: min((blur_fn1.s0.y$2.min + -1), blurx.s0.y$2.min)
  a[i].min     : min(blurx.s0.y$2.min, (blur_fn1.s0.y$2.min + -1))

  a_copy[i].max: max((blur_fn1.s0.y$2.max + 1), blurx.s0.y$2.max)
  a[i].max     : max(blurx.s0.y$2.max, (blur_fn1.s0.y$2.max + 1))

  a_copy[i].min: min(blur_fn2.s0.x$3.min, blurx$2.s0.x$3.min)
  a[i].min     : min(blurx$2.s0.x$3.min, blur_fn2.s0.x$3.min)

  a_copy[i].max: max(blur_fn2.s0.x$3.max, blurx$2.s0.x$3.max)
  a[i].max     : max(blurx$2.s0.x$3.max, blur_fn2.s0.x$3.max)

  a_copy[i].min: min((blur_fn2.s0.y$3.min + -1), blurx$2.s0.y$3.min)
  a[i].min     : min(blurx$2.s0.y$3.min, (blur_fn2.s0.y$3.min + -1))

  a_copy[i].max: max((blur_fn2.s0.y$3.max + 1), blurx$2.s0.y$3.max)
  a[i].max     : max(blurx$2.s0.y$3.max, (blur_fn2.s0.y$3.max + 1))

  a_copy[i].min: min((out.s0.x.xi.base + out.s0.x.xi.loop_min), blur_fn1.s0.x$2.min)
  a[i].min     : min(blur_fn1.s0.x$2.min, (out.s0.x.xi.loop_min + out.s0.x.xi.base))

  a_copy[i].max: max(((out.s0.x.xi.base + (out.s0.x.xi.loop_extent + out.s0.x.xi.loop_min)) + -1), blur_fn1.s0.x$2.max)
  a[i].max     : max(blur_fn1.s0.x$2.max, (((out.s0.x.xi.loop_min + out.s0.x.xi.loop_extent) + out.s0.x.xi.base) + -1))

  a_copy[i].min: min((out.s0.y.yi.base + out.s0.y.yi.loop_min), blur_fn1.s0.y$2.min)
  a[i].min     : min(blur_fn1.s0.y$2.min, (out.s0.y.yi.loop_min + out.s0.y.yi.base))

  a_copy[i].max: max(((out.s0.y.yi.base + (out.s0.y.yi.loop_extent + out.s0.y.yi.loop_min)) + -1), blur_fn1.s0.y$2.max)
  a[i].max     : max(blur_fn1.s0.y$2.max, (((out.s0.y.yi.loop_min + out.s0.y.yi.loop_extent) + out.s0.y.yi.base) + -1))

  a_copy[i].max: ((blur_fn1.s0.x$2.loop_extent + blur_fn1.s0.x$2.loop_min) + -1)
  a[i].max     : ((blur_fn1.s0.x$2.loop_min + blur_fn1.s0.x$2.loop_extent) + -1)

  a_copy[i].max: ((blur_fn1.s0.y$2.loop_extent + blur_fn1.s0.y$2.loop_min) + -1)
  a[i].max     : ((blur_fn1.s0.y$2.loop_min + blur_fn1.s0.y$2.loop_extent) + -1)

  a_copy[i].max: max(((blur_fn1.s0.y$2.loop_min + blur_fn1.s0.y$2.loop_extent) + -1), (blur_fn1.s0.y$2.loop_extent + blur_fn1.s0.y$2.loop_min))
  a[i].max     : (blur_fn1.s0.y$2.loop_extent + blur_fn1.s0.y$2.loop_min)

  a_copy[i].min: min(blur_fn1.s0.x$2.loop_min, blurx.s0.x$2.min)
  a[i].min     : min(blurx.s0.x$2.min, blur_fn1.s0.x$2.loop_min)

  a_copy[i].max: max(((blur_fn1.s0.x$2.loop_extent + blur_fn1.s0.x$2.loop_min) + -1), blurx.s0.x$2.max)
  a[i].max     : max(blurx.s0.x$2.max, ((blur_fn1.s0.x$2.loop_min + blur_fn1.s0.x$2.loop_extent) + -1))

  a_copy[i].min: min((blur_fn1.s0.y$2.loop_min + -1), blurx.s0.y$2.min)
  a[i].min     : min(blurx.s0.y$2.min, (blur_fn1.s0.y$2.loop_min + -1))

  a_copy[i].max: max((blur_fn1.s0.y$2.loop_extent + blur_fn1.s0.y$2.loop_min), blurx.s0.y$2.max)
  a[i].max     : max(blurx.s0.y$2.max, (blur_fn1.s0.y$2.loop_min + blur_fn1.s0.y$2.loop_extent))

  a_copy[i].min: min((out.s0.x.xi.base + out.s0.x.xi.loop_min), blur_fn2.s0.x$3.min)
  a[i].min     : min(blur_fn2.s0.x$3.min, (out.s0.x.xi.loop_min + out.s0.x.xi.base))

  a_copy[i].max: max(((out.s0.x.xi.base + (out.s0.x.xi.loop_extent + out.s0.x.xi.loop_min)) + -1), blur_fn2.s0.x$3.max)
  a[i].max     : max(blur_fn2.s0.x$3.max, (((out.s0.x.xi.loop_min + out.s0.x.xi.loop_extent) + out.s0.x.xi.base) + -1))

  a_copy[i].min: min((out.s0.y.yi.base + out.s0.y.yi.loop_min), blur_fn2.s0.y$3.min)
  a[i].min     : min(blur_fn2.s0.y$3.min, (out.s0.y.yi.loop_min + out.s0.y.yi.base))

  a_copy[i].max: max(((out.s0.y.yi.base + (out.s0.y.yi.loop_extent + out.s0.y.yi.loop_min)) + -1), blur_fn2.s0.y$3.max)
  a[i].max     : max(blur_fn2.s0.y$3.max, (((out.s0.y.yi.loop_min + out.s0.y.yi.loop_extent) + out.s0.y.yi.base) + -1))

  a_copy[i].max: ((blur_fn2.s0.x$3.loop_extent + blur_fn2.s0.x$3.loop_min) + -1)
  a[i].max     : ((blur_fn2.s0.x$3.loop_min + blur_fn2.s0.x$3.loop_extent) + -1)

  a_copy[i].max: ((blur_fn2.s0.y$3.loop_extent + blur_fn2.s0.y$3.loop_min) + -1)
  a[i].max     : ((blur_fn2.s0.y$3.loop_min + blur_fn2.s0.y$3.loop_extent) + -1)

  a_copy[i].max: max(((blur_fn2.s0.y$3.loop_min + blur_fn2.s0.y$3.loop_extent) + -1), (blur_fn2.s0.y$3.loop_extent + blur_fn2.s0.y$3.loop_min))
  a[i].max     : (blur_fn2.s0.y$3.loop_extent + blur_fn2.s0.y$3.loop_min)

  a_copy[i].min: min(blur_fn2.s0.x$3.loop_min, blurx$2.s0.x$3.min)
  a[i].min     : min(blurx$2.s0.x$3.min, blur_fn2.s0.x$3.loop_min)

  a_copy[i].max: max(((blur_fn2.s0.x$3.loop_extent + blur_fn2.s0.x$3.loop_min) + -1), blurx$2.s0.x$3.max)
  a[i].max     : max(blurx$2.s0.x$3.max, ((blur_fn2.s0.x$3.loop_min + blur_fn2.s0.x$3.loop_extent) + -1))

  a_copy[i].min: min((blur_fn2.s0.y$3.loop_min + -1), blurx$2.s0.y$3.min)
  a[i].min     : min(blurx$2.s0.y$3.min, (blur_fn2.s0.y$3.loop_min + -1))

  a_copy[i].max: max((blur_fn2.s0.y$3.loop_extent + blur_fn2.s0.y$3.loop_min), blurx$2.s0.y$3.max)
  a[i].max     : max(blurx$2.s0.y$3.max, (blur_fn2.s0.y$3.loop_min + blur_fn2.s0.y$3.loop_extent))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/constant_expr.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_constant_expr -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_constant_expr
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/constant_type.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_constant_type -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_constant_type
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/constraints.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_constraints -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_constraints
Constraint violated: param.extent.0 (144) == 128 (128)
Constraint violated: g.stride.0 (1) == 2 (2)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/convolution.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_convolution -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_convolution

  a_copy[i].min: min(min(blur1.s0.x.min, (blur1.s0.x.max + -5)), blur1.s1.x.min)
  a[i].min     : min(blur1.s1.x.min, min((blur1.s0.x.max + -5), blur1.s0.x.min))

  a_copy[i].max: max(min((((((blur1.s0.x.max - blur1.s0.x.min)/6)*6) + blur1.s0.x.min) + 5), blur1.s0.x.max), (((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + 3))
  a[i].max     : max((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + 3), min((((((blur1.s0.x.max - blur1.s0.x.min)/6)*6) + blur1.s0.x.min) + 5), blur1.s0.x.max))

  a_copy[i].min: min(min(blur1.s0.y.min, (blur1.s0.y.max + -5)), blur1.s1.y.min)
  a[i].min     : min(blur1.s1.y.min, min((blur1.s0.y.max + -5), blur1.s0.y.min))

  a_copy[i].max: max(min((((((blur1.s0.y.max - blur1.s0.y.min)/6)*6) + blur1.s0.y.min) + 5), blur1.s0.y.max), (((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + 3))
  a[i].max     : max((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + 3), min((((((blur1.s0.y.max - blur1.s0.y.min)/6)*6) + blur1.s0.y.min) + 5), blur1.s0.y.max))

  a_copy[i].min: min(blur1.s1.x.min, min((blur1.s0.x.max + -5), blur1.s0.x.min))
  a[i].min     : min(blur1.s0.x.min, min((blur1.s0.x.max + -5), blur1.s1.x.min))

  a_copy[i].max: max((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + 3), min((((((blur1.s0.x.max - blur1.s0.x.min)/6)*6) + blur1.s0.x.min) + 5), blur1.s0.x.max))
  a[i].max     : max(min((((((blur1.s0.x.max - blur1.s0.x.min)/6)*6) + blur1.s0.x.min) + 5), blur1.s0.x.max), (((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + 3))

  a_copy[i].min: min(blur1.s1.y.min, min((blur1.s0.y.max + -5), blur1.s0.y.min))
  a[i].min     : min(blur1.s0.y.min, min((blur1.s0.y.max + -5), blur1.s1.y.min))

  a_copy[i].max: max((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + 3), min((((((blur1.s0.y.max - blur1.s0.y.min)/6)*6) + blur1.s0.y.min) + 5), blur1.s0.y.max))
  a[i].max     : max(min((((((blur1.s0.y.max - blur1.s0.y.min)/6)*6) + blur1.s0.y.min) + 5), blur1.s0.y.max), (((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + 3))

  a_copy[i].min: min(((blur1.s1.x.min + blur1.s1.tent.x$r.min) + -1), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, ((blur1.s1.tent.x$r.min + blur1.s1.x.min) + -1))

  a_copy[i].max: max(((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + blur1.s1.tent.x$r.max) + 2), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, ((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.tent.x$r.max) + blur1.s1.x.min) + 2))

  a_copy[i].min: min(((blur1.s1.y.min + blur1.s1.tent.y$r.min) + -1), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, ((blur1.s1.tent.y$r.min + blur1.s1.y.min) + -1))

  a_copy[i].max: max(((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + blur1.s1.tent.y$r.max) + 2), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, ((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.tent.y$r.max) + blur1.s1.y.min) + 2))

  a_copy[i].min: min(blur1.min.0, blur1.s1.x.min)
  a[i].min     : min(blur1.s1.x.min, blur1.min.0)

  a_copy[i].max: max(((blur1.min.0 + blur1.extent.0) + -1), blur1.s1.x.max)
  a[i].max     : max(blur1.s1.x.max, ((blur1.extent.0 + blur1.min.0) + -1))

  a_copy[i].min: min(blur1.min.1, blur1.s1.y.min)
  a[i].min     : min(blur1.s1.y.min, blur1.min.1)

  a_copy[i].max: max(((blur1.min.1 + blur1.extent.1) + -1), blur1.s1.y.max)
  a[i].max     : max(blur1.s1.y.max, ((blur1.extent.1 + blur1.min.1) + -1))

  a_copy[i].min: min(((blur1.s1.x.min + blur1.s1.tent.x$r.min) + -1), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, ((blur1.s1.tent.x$r.min + blur1.s1.x.min) + -1))

  a_copy[i].max: max(((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.x.min) + blur1.s1.tent.x$r.max) + 2), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, ((((((blur1.s1.x.max - blur1.s1.x.min)/4)*4) + blur1.s1.tent.x$r.max) + blur1.s1.x.min) + 2))

  a_copy[i].min: min(((blur1.s1.y.min + blur1.s1.tent.y$r.min) + -1), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, ((blur1.s1.tent.y$r.min + blur1.s1.y.min) + -1))

  a_copy[i].max: max(((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.y.min) + blur1.s1.tent.y$r.max) + 2), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, ((((((blur1.s1.y.max - blur1.s1.y.min)/4)*4) + blur1.s1.tent.y$r.max) + blur1.s1.y.min) + 2))

  a_copy[i].min: min(sum.s1.x.min, min(blur2.s0.x.min, (blur2.s0.x.max + -3)))
  a[i].min     : min((blur2.s0.x.max + -3), min(blur2.s0.x.min, sum.s1.x.min))

  a_copy[i].max: max(sum.s1.x.max, min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 3), blur2.s0.x.max))
  a[i].max     : max(min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 3), blur2.s0.x.max), sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, blur2.s0.y.min)
  a[i].min     : min(blur2.s0.y.min, sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, blur2.s0.y.max)
  a[i].max     : max(blur2.s0.y.max, sum.s1.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(((sum.s1.x.min + sum.s1.tent.x$r.min) + -1), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, ((sum.s1.tent.x$r.min + sum.s1.x.min) + -1))

  a_copy[i].max: max(((sum.s1.x.max + sum.s1.tent.x$r.max) + -1), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, ((sum.s1.tent.x$r.max + sum.s1.x.max) + -1))

  a_copy[i].min: min(((sum.s1.y.min + sum.s1.tent.y$r.min) + -1), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, ((sum.s1.tent.y$r.min + sum.s1.y.min) + -1))

  a_copy[i].max: max(((sum.s1.y.max + sum.s1.tent.y$r.max) + -1), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, ((sum.s1.tent.y$r.max + sum.s1.y.max) + -1))

  a_copy[i].min: min(min((blur2.s0.x.max + -3), min(blur2.s0.x.min, sum.s1.x.min)), min(sum.s1.x.min, sum.s0.x.min))
  a[i].min     : min(sum.s0.x.min, min(sum.s1.x.min, min(blur2.s0.x.min, (blur2.s0.x.max + -3))))

  a_copy[i].max: max(max(min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 3), blur2.s0.x.max), sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 3), blur2.s0.x.max)))

  a_copy[i].min: min(min(blur2.s0.y.min, sum.s0.y.min), sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, min(sum.s0.y.min, blur2.s0.y.min))

  a_copy[i].max: max(max(blur2.s0.y.max, sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, blur2.s0.y.max))

  a_copy[i].min: min(blur2.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, blur2.s0.x.min)

  a_copy[i].max: max(blur2.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, blur2.s0.x.max)

  a_copy[i].min: min(blur2.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, blur2.s0.y.min)

  a_copy[i].max: max(blur2.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, blur2.s0.y.max)

  a_copy[i].min: min(blur2.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, blur2.s0.x.min)

  a_copy[i].max: max(blur2.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, blur2.s0.x.max)

  a_copy[i].min: min(blur2.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, blur2.s0.y.min)

  a_copy[i].max: max(blur2.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, blur2.s0.y.max)

  a_copy[i].min: min(blur2.s0.x.min, (blur2.s0.x.max + -3))
  a[i].min     : min((blur2.s0.x.max + -3), blur2.s0.x.min)

  a_copy[i].min: min((min(blur2.s0.x.min, (blur2.s0.x.max + -3)) + -1), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, min((blur2.s0.x.max + -4), (blur2.s0.x.min + -1)))

  a_copy[i].max: max((min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 3), blur2.s0.x.max) + 1), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, min((((((blur2.s0.x.max - blur2.s0.x.min)/4)*4) + blur2.s0.x.min) + 4), (blur2.s0.x.max + 1)))

  a_copy[i].min: min((blur2.s0.y.min + -1), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, (blur2.s0.y.min + -1))

  a_copy[i].max: max((blur2.s0.y.max + 1), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, (blur2.s0.y.max + 1))

  a_copy[i].min: min(sum.s1.x.min, (blur2.s0.x.v4.base + blur2.s0.x.v4))
  a[i].min     : min((blur2.s0.x.v4 + blur2.s0.x.v4.base), sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, (blur2.s0.x.v4.base + blur2.s0.x.v4))
  a[i].max     : max((blur2.s0.x.v4 + blur2.s0.x.v4.base), sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, blur2.s0.y)
  a[i].min     : min(blur2.s0.y, sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, blur2.s0.y)
  a[i].max     : max(blur2.s0.y, sum.s1.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(min((blur2.s0.x.v4 + blur2.s0.x.v4.base), sum.s0.x.min), sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, min(sum.s0.x.min, (blur2.s0.x.v4.base + blur2.s0.x.v4)))

  a_copy[i].max: max(max((blur2.s0.x.v4 + blur2.s0.x.v4.base), sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, (blur2.s0.x.v4.base + blur2.s0.x.v4)))

  a_copy[i].min: min(min(blur2.s0.y, sum.s0.y.min), sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, min(sum.s0.y.min, blur2.s0.y))

  a_copy[i].max: max(max(blur2.s0.y, sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, blur2.s0.y))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/convolution_multiple_kernels.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_convolution_multiple_kernels -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_convolution_multiple_kernels

  a_copy[i].min: min((sum$2.s1.x.min + sum$2.s1.r.x$r.min), (sum.s1.x.min + sum.s1.r.x$r.min))
  a[i].min     : min((sum.s1.r.x$r.min + sum.s1.x.min), (sum$2.s1.r.x$r.min + sum$2.s1.x.min))

  a_copy[i].max: max((sum$2.s1.x.max + sum$2.s1.r.x$r.max), (sum.s1.x.max + sum.s1.r.x$r.max))
  a[i].max     : max((sum.s1.r.x$r.max + sum.s1.x.max), (sum$2.s1.r.x$r.max + sum$2.s1.x.max))

  a_copy[i].min: min((sum$2.s1.y.min + sum$2.s1.r.y$r.min), (sum.s1.y.min + sum.s1.r.y$r.min))
  a[i].min     : min((sum.s1.r.y$r.min + sum.s1.y.min), (sum$2.s1.r.y$r.min + sum$2.s1.y.min))

  a_copy[i].max: max((sum$2.s1.y.max + sum$2.s1.r.y$r.max), (sum.s1.y.max + sum.s1.r.y$r.max))
  a[i].max     : max((sum.s1.r.y$r.max + sum.s1.y.max), (sum$2.s1.r.y$r.max + sum$2.s1.y.max))

  a_copy[i].min: min(sum$2.s1.x.min, blur.s0.x.min)
  a[i].min     : min(blur.s0.x.min, sum$2.s1.x.min)

  a_copy[i].max: max(sum$2.s1.x.max, blur.s0.x.max)
  a[i].max     : max(blur.s0.x.max, sum$2.s1.x.max)

  a_copy[i].min: min(sum$2.s1.y.min, blur.s0.y.min)
  a[i].min     : min(blur.s0.y.min, sum$2.s1.y.min)

  a_copy[i].max: max(sum$2.s1.y.max, blur.s0.y.max)
  a[i].max     : max(blur.s0.y.max, sum$2.s1.y.max)

  a_copy[i].min: min(sum.s1.x.min, blur.s0.x.min)
  a[i].min     : min(blur.s0.x.min, sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, blur.s0.x.max)
  a[i].max     : max(blur.s0.x.max, sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, blur.s0.y.min)
  a[i].min     : min(blur.s0.y.min, sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, blur.s0.y.max)
  a[i].max     : max(blur.s0.y.max, sum.s1.y.max)

  a_copy[i].min: min(sum$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, sum$2.s0.x.min)

  a_copy[i].max: max(sum$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, sum$2.s0.x.max)

  a_copy[i].min: min(sum$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, sum$2.s0.y.min)

  a_copy[i].max: max(sum$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, sum$2.s0.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(sum$2.s1.r.x$r.min, box1.s0.x.min)
  a[i].min     : min(box1.s0.x.min, sum$2.s1.r.x$r.min)

  a_copy[i].max: max(sum$2.s1.r.x$r.max, box1.s0.x.max)
  a[i].max     : max(box1.s0.x.max, sum$2.s1.r.x$r.max)

  a_copy[i].min: min(sum$2.s1.r.y$r.min, box1.s0.y.min)
  a[i].min     : min(box1.s0.y.min, sum$2.s1.r.y$r.min)

  a_copy[i].max: max(sum$2.s1.r.y$r.max, box1.s0.y.max)
  a[i].max     : max(box1.s0.y.max, sum$2.s1.r.y$r.max)

  a_copy[i].min: min(sum.s1.r.x$r.min, box2.s0.x.min)
  a[i].min     : min(box2.s0.x.min, sum.s1.r.x$r.min)

  a_copy[i].max: max(sum.s1.r.x$r.max, box2.s0.x.max)
  a[i].max     : max(box2.s0.x.max, sum.s1.r.x$r.max)

  a_copy[i].min: min(sum.s1.r.y$r.min, box2.s0.y.min)
  a[i].min     : min(box2.s0.y.min, sum.s1.r.y$r.min)

  a_copy[i].max: max(sum.s1.r.y$r.max, box2.s0.y.max)
  a[i].max     : max(box2.s0.y.max, sum.s1.r.y$r.max)

  a_copy[i].min: min(min((sum.s1.r.x$r.min + sum.s1.x.min), (sum$2.s1.r.x$r.min + sum$2.s1.x.min)), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, min((sum$2.s1.x.min + sum$2.s1.r.x$r.min), (sum.s1.x.min + sum.s1.r.x$r.min)))

  a_copy[i].max: max(max((sum.s1.r.x$r.max + sum.s1.x.max), (sum$2.s1.r.x$r.max + sum$2.s1.x.max)), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, max((sum$2.s1.x.max + sum$2.s1.r.x$r.max), (sum.s1.x.max + sum.s1.r.x$r.max)))

  a_copy[i].min: min(min((sum.s1.r.y$r.min + sum.s1.y.min), (sum$2.s1.r.y$r.min + sum$2.s1.y.min)), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, min((sum$2.s1.y.min + sum$2.s1.r.y$r.min), (sum.s1.y.min + sum.s1.r.y$r.min)))

  a_copy[i].max: max(max((sum.s1.r.y$r.max + sum.s1.y.max), (sum$2.s1.r.y$r.max + sum$2.s1.y.max)), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, max((sum$2.s1.y.max + sum$2.s1.r.y$r.max), (sum.s1.y.max + sum.s1.r.y$r.max)))

  a_copy[i].min: min(min(blur.s0.x.min, sum.s0.x.min), sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, min(sum.s0.x.min, blur.s0.x.min))

  a_copy[i].max: max(max(blur.s0.x.max, sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, blur.s0.x.max))

  a_copy[i].min: min(min(blur.s0.y.min, sum.s0.y.min), sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, min(sum.s0.y.min, blur.s0.y.min))

  a_copy[i].max: max(max(blur.s0.y.max, sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, blur.s0.y.max))

  a_copy[i].min: min(min(blur.s0.x.min, sum$2.s0.x.min), sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, min(sum$2.s0.x.min, blur.s0.x.min))

  a_copy[i].max: max(max(blur.s0.x.max, sum$2.s0.x.max), sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, max(sum$2.s0.x.max, blur.s0.x.max))

  a_copy[i].min: min(min(blur.s0.y.min, sum$2.s0.y.min), sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, min(sum$2.s0.y.min, blur.s0.y.min))

  a_copy[i].max: max(max(blur.s0.y.max, sum$2.s0.y.max), sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, max(sum$2.s0.y.max, blur.s0.y.max))

  a_copy[i].min: min(blur.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, blur.s0.x.min)

  a_copy[i].max: max(blur.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, blur.s0.x.max)

  a_copy[i].min: min(blur.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, blur.s0.y.min)

  a_copy[i].max: max(blur.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, blur.s0.y.max)

  a_copy[i].min: min(blur.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, blur.s0.x.min)

  a_copy[i].max: max(blur.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, blur.s0.x.max)

  a_copy[i].min: min(blur.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, blur.s0.y.min)

  a_copy[i].max: max(blur.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, blur.s0.y.max)

  a_copy[i].min: min((sum.s1.x.min + sum.s1.r.x$r.min), (sum$2.s1.x.min + sum$2.s1.r.x$r.min))
  a[i].min     : min((sum$2.s1.r.x$r.min + sum$2.s1.x.min), (sum.s1.r.x$r.min + sum.s1.x.min))

  a_copy[i].max: max((sum.s1.x.max + sum.s1.r.x$r.max), (sum$2.s1.x.max + sum$2.s1.r.x$r.max))
  a[i].max     : max((sum$2.s1.r.x$r.max + sum$2.s1.x.max), (sum.s1.r.x$r.max + sum.s1.x.max))

  a_copy[i].min: min((sum.s1.y.min + sum.s1.r.y$r.min), (sum$2.s1.y.min + sum$2.s1.r.y$r.min))
  a[i].min     : min((sum$2.s1.r.y$r.min + sum$2.s1.y.min), (sum.s1.r.y$r.min + sum.s1.y.min))

  a_copy[i].max: max((sum.s1.y.max + sum.s1.r.y$r.max), (sum$2.s1.y.max + sum$2.s1.r.y$r.max))
  a[i].max     : max((sum$2.s1.r.y$r.max + sum$2.s1.y.max), (sum.s1.r.y$r.max + sum.s1.y.max))

  a_copy[i].min: min(blur.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, blur.s0.x.min)

  a_copy[i].max: max(blur.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, blur.s0.x.max)

  a_copy[i].min: min(blur.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, blur.s0.y.min)

  a_copy[i].max: max(blur.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, blur.s0.y.max)

  a_copy[i].min: min(blur.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, blur.s0.x.min)

  a_copy[i].max: max(blur.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, blur.s0.x.max)

  a_copy[i].min: min(blur.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, blur.s0.y.min)

  a_copy[i].max: max(blur.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, blur.s0.y.max)

  a_copy[i].min: min((blur.s0.x.min + -1), input.s0.x.min)
  a[i].min     : min(input.s0.x.min, (blur.s0.x.min + -1))

  a_copy[i].max: max((blur.s0.x.max + 1), input.s0.x.max)
  a[i].max     : max(input.s0.x.max, (blur.s0.x.max + 1))

  a_copy[i].min: min((blur.s0.y.min + -1), input.s0.y.min)
  a[i].min     : min(input.s0.y.min, (blur.s0.y.min + -1))

  a_copy[i].max: max((blur.s0.y.max + 1), input.s0.y.max)
  a[i].max     : max(input.s0.y.max, (blur.s0.y.max + 1))

  a_copy[i].min: min((sum$2.s1.x.min + sum$2.s1.r.x$r.min), (sum.s1.x.min + sum.s1.r.x$r.min))
  a[i].min     : min((sum.s1.r.x$r.min + sum.s1.x.min), (sum$2.s1.r.x$r.min + sum$2.s1.x.min))

  a_copy[i].max: max((sum$2.s1.x.max + sum$2.s1.r.x$r.max), (sum.s1.x.max + sum.s1.r.x$r.max))
  a[i].max     : max((sum.s1.r.x$r.max + sum.s1.x.max), (sum$2.s1.r.x$r.max + sum$2.s1.x.max))

  a_copy[i].min: min((sum$2.s1.y.min + sum$2.s1.r.y$r.min), (sum.s1.y.min + sum.s1.r.y$r.min))
  a[i].min     : min((sum.s1.r.y$r.min + sum.s1.y.min), (sum$2.s1.r.y$r.min + sum$2.s1.y.min))

  a_copy[i].max: max((sum$2.s1.y.max + sum$2.s1.r.y$r.max), (sum.s1.y.max + sum.s1.r.y$r.max))
  a[i].max     : max((sum.s1.r.y$r.max + sum.s1.y.max), (sum$2.s1.r.y$r.max + sum$2.s1.y.max))

  a_copy[i].min: min(sum$2.s1.x.min, blur.s0.x)
  a[i].min     : min(blur.s0.x, sum$2.s1.x.min)

  a_copy[i].max: max(sum$2.s1.x.max, blur.s0.x)
  a[i].max     : max(blur.s0.x, sum$2.s1.x.max)

  a_copy[i].min: min(sum$2.s1.y.min, blur.s0.y)
  a[i].min     : min(blur.s0.y, sum$2.s1.y.min)

  a_copy[i].max: max(sum$2.s1.y.max, blur.s0.y)
  a[i].max     : max(blur.s0.y, sum$2.s1.y.max)

  a_copy[i].min: min(sum.s1.x.min, blur.s0.x)
  a[i].min     : min(blur.s0.x, sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, blur.s0.x)
  a[i].max     : max(blur.s0.x, sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, blur.s0.y)
  a[i].min     : min(blur.s0.y, sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, blur.s0.y)
  a[i].max     : max(blur.s0.y, sum.s1.y.max)

  a_copy[i].min: min(sum$2.s0.x.min, sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, sum$2.s0.x.min)

  a_copy[i].max: max(sum$2.s0.x.max, sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, sum$2.s0.x.max)

  a_copy[i].min: min(sum$2.s0.y.min, sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, sum$2.s0.y.min)

  a_copy[i].max: max(sum$2.s0.y.max, sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, sum$2.s0.y.max)

  a_copy[i].min: min(min(blur.s0.x, sum$2.s0.x.min), sum$2.s1.x.min)
  a[i].min     : min(sum$2.s1.x.min, min(sum$2.s0.x.min, blur.s0.x))

  a_copy[i].max: max(max(blur.s0.x, sum$2.s0.x.max), sum$2.s1.x.max)
  a[i].max     : max(sum$2.s1.x.max, max(sum$2.s0.x.max, blur.s0.x))

  a_copy[i].min: min(min(blur.s0.y, sum$2.s0.y.min), sum$2.s1.y.min)
  a[i].min     : min(sum$2.s1.y.min, min(sum$2.s0.y.min, blur.s0.y))

  a_copy[i].max: max(max(blur.s0.y, sum$2.s0.y.max), sum$2.s1.y.max)
  a[i].max     : max(sum$2.s1.y.max, max(sum$2.s0.y.max, blur.s0.y))

  a_copy[i].min: min(sum.s1.x.min, blur.s0.x)
  a[i].min     : min(blur.s0.x, sum.s1.x.min)

  a_copy[i].max: max(sum.s1.x.max, blur.s0.x)
  a[i].max     : max(blur.s0.x, sum.s1.x.max)

  a_copy[i].min: min(sum.s1.y.min, blur.s0.y)
  a[i].min     : min(blur.s0.y, sum.s1.y.min)

  a_copy[i].max: max(sum.s1.y.max, blur.s0.y)
  a[i].max     : max(blur.s0.y, sum.s1.y.max)

  a_copy[i].min: min(sum.s0.x.min, sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, sum.s0.x.min)

  a_copy[i].max: max(sum.s0.x.max, sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, sum.s0.x.max)

  a_copy[i].min: min(sum.s0.y.min, sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, sum.s0.y.min)

  a_copy[i].max: max(sum.s0.y.max, sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, sum.s0.y.max)

  a_copy[i].min: min(min(blur.s0.x, sum.s0.x.min), sum.s1.x.min)
  a[i].min     : min(sum.s1.x.min, min(sum.s0.x.min, blur.s0.x))

  a_copy[i].max: max(max(blur.s0.x, sum.s0.x.max), sum.s1.x.max)
  a[i].max     : max(sum.s1.x.max, max(sum.s0.x.max, blur.s0.x))

  a_copy[i].min: min(min(blur.s0.y, sum.s0.y.min), sum.s1.y.min)
  a[i].min     : min(sum.s1.y.min, min(sum.s0.y.min, blur.s0.y))

  a_copy[i].max: max(max(blur.s0.y, sum.s0.y.max), sum.s1.y.max)
  a[i].max     : max(sum.s1.y.max, max(sum.s0.y.max, blur.s0.y))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/cross_compilation.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_cross_compilation -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_cross_compilation
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/custom_allocator.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_custom_allocator -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_custom_allocator

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)

  a_copy[i].min: min(g.s0.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, g.s0.x.min)

  a_copy[i].max: max(g.s0.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, g.s0.x.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/custom_error_reporter.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_custom_error_reporter -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_custom_error_reporter
Custom warning: Warning at /home/psuriana/distributed-halide/test/correctness/custom_error_reporter.cpp:40:
Here is a warning.
Custom error: Error at /home/psuriana/distributed-halide/test/correctness/custom_error_reporter.cpp:43:
Here is an error.
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/custom_lowering_pass.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_custom_lowering_pass -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_custom_lowering_pass
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/debug_to_file.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_debug_to_file -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_debug_to_file

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(min(h.s0.x.min, g.s0.x.min), f.s0.x.min)
  a[i].min     : min(f.s0.x.min, min(g.s0.x.min, h.s0.x.min))

  a_copy[i].max: max(max(h.s0.x.max, (g.s0.x.max + 1)), f.s0.x.max)
  a[i].max     : max(f.s0.x.max, max((g.s0.x.max + 1), h.s0.x.max))

  a_copy[i].min: min(min(h.s0.y.min, g.s0.y.min), f.s0.y.min)
  a[i].min     : min(f.s0.y.min, min(g.s0.y.min, h.s0.y.min))

  a_copy[i].max: max(max(h.s0.y.max, g.s0.y.max), f.s0.y.max)
  a[i].max     : max(f.s0.y.max, max(g.s0.y.max, h.s0.y.max))

  a_copy[i].min: min(g.s0.x.min, h.s0.x.min)
  a[i].min     : min(h.s0.x.min, g.s0.x.min)

  a_copy[i].max: max((g.s0.x.max + 1), h.s0.x.max)
  a[i].max     : max(h.s0.x.max, (g.s0.x.max + 1))

  a_copy[i].min: min(g.s0.y.min, h.s0.y.min)
  a[i].min     : min(h.s0.y.min, g.s0.y.min)

  a_copy[i].max: max(g.s0.y.max, h.s0.y.max)
  a[i].max     : max(h.s0.y.max, g.s0.y.max)

  a_copy[i].min: min(h.s0.x.min, g.s0.x.min)
  a[i].min     : min(g.s0.x.min, h.s0.x.min)

  a_copy[i].max: max(h.s0.x.max, g.s0.x.max)
  a[i].max     : max(g.s0.x.max, h.s0.x.max)

  a_copy[i].min: min(h.s0.y.min, g.s0.y.min)
  a[i].min     : min(g.s0.y.min, h.s0.y.min)

  a_copy[i].max: max(h.s0.y.max, g.s0.y.max)
  a[i].max     : max(g.s0.y.max, h.s0.y.max)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/deinterleave4.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_deinterleave4 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_deinterleave4

  a_copy[i].min: min(((f1.s0.x.min + 6)/4), in.s0.x.min)
  a[i].min     : min(in.s0.x.min, ((f1.s0.x.min + 6)/4))

  a_copy[i].max: max(((f1.s0.x.max + 6)/4), in.s0.x.max)
  a[i].max     : max(in.s0.x.max, ((f1.s0.x.max + 6)/4))

  a_copy[i].min: min(((f1.s0.x.min + 6)/4), in.s0.x.min)
  a[i].min     : min(in.s0.x.min, ((f1.s0.x.min + 6)/4))

  a_copy[i].max: max(((f1.s0.x.max + 6)/4), in.s0.x.max)
  a[i].max     : max(in.s0.x.max, ((f1.s0.x.max + 6)/4))

  a_copy[i].min: min(((f2.s0.x.min + 6)/4), in$2.s0.x.min)
  a[i].min     : min(in$2.s0.x.min, ((f2.s0.x.min + 6)/4))

  a_copy[i].max: max(((f2.s0.x.max + 6)/4), in$2.s0.x.max)
  a[i].max     : max(in$2.s0.x.max, ((f2.s0.x.max + 6)/4))

  a_copy[i].min: min(((f2.s0.x.min + 6)/4), in$2.s0.x.min)
  a[i].min     : min(in$2.s0.x.min, ((f2.s0.x.min + 6)/4))

  a_copy[i].max: max(((f2.s0.x.max + 6)/4), in$2.s0.x.max)
  a[i].max     : max(in$2.s0.x.max, ((f2.s0.x.max + 6)/4))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/div_mod.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_div_mod -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_div_mod
Test mod of float32
Test division of uint8x1
Test division of uint16x1
Test division of uint32x1
Test division of int8x1
Test division of int16x1
Test division of int32x1
Test division of uint8x2

  a_copy[i].min: min(f$8.s0.x$7.min, (f$8.s0.x$7.max + -1))
  a[i].min     : min((f$8.s0.x$7.max + -1), f$8.s0.x$7.min)

  a_copy[i].min: min(f$8.s0.x$7.min, (f$8.s0.x$7.max + -1))
  a[i].min     : min((f$8.s0.x$7.max + -1), f$8.s0.x$7.min)
Test division of uint16x2

  a_copy[i].min: min(f$9.s0.x$8.min, (f$9.s0.x$8.max + -1))
  a[i].min     : min((f$9.s0.x$8.max + -1), f$9.s0.x$8.min)

  a_copy[i].min: min(f$9.s0.x$8.min, (f$9.s0.x$8.max + -1))
  a[i].min     : min((f$9.s0.x$8.max + -1), f$9.s0.x$8.min)
Test division of uint32x2

  a_copy[i].min: min(f$10.s0.x$9.min, (f$10.s0.x$9.max + -1))
  a[i].min     : min((f$10.s0.x$9.max + -1), f$10.s0.x$9.min)

  a_copy[i].min: min(f$10.s0.x$9.min, (f$10.s0.x$9.max + -1))
  a[i].min     : min((f$10.s0.x$9.max + -1), f$10.s0.x$9.min)
Test division of int8x2

  a_copy[i].min: min(f$11.s0.x$10.min, (f$11.s0.x$10.max + -1))
  a[i].min     : min((f$11.s0.x$10.max + -1), f$11.s0.x$10.min)

  a_copy[i].min: min(f$11.s0.x$10.min, (f$11.s0.x$10.max + -1))
  a[i].min     : min((f$11.s0.x$10.max + -1), f$11.s0.x$10.min)
Test division of int16x2

  a_copy[i].min: min(f$12.s0.x$11.min, (f$12.s0.x$11.max + -1))
  a[i].min     : min((f$12.s0.x$11.max + -1), f$12.s0.x$11.min)

  a_copy[i].min: min(f$12.s0.x$11.min, (f$12.s0.x$11.max + -1))
  a[i].min     : min((f$12.s0.x$11.max + -1), f$12.s0.x$11.min)
Test division of int32x2

  a_copy[i].min: min(f$13.s0.x$12.min, (f$13.s0.x$12.max + -1))
  a[i].min     : min((f$13.s0.x$12.max + -1), f$13.s0.x$12.min)

  a_copy[i].min: min(f$13.s0.x$12.min, (f$13.s0.x$12.max + -1))
  a[i].min     : min((f$13.s0.x$12.max + -1), f$13.s0.x$12.min)
Test division of uint8x4

  a_copy[i].min: min(f$14.s0.x$13.min, (f$14.s0.x$13.max + -3))
  a[i].min     : min((f$14.s0.x$13.max + -3), f$14.s0.x$13.min)

  a_copy[i].min: min(f$14.s0.x$13.min, (f$14.s0.x$13.max + -3))
  a[i].min     : min((f$14.s0.x$13.max + -3), f$14.s0.x$13.min)
Test division of uint16x4

  a_copy[i].min: min(f$15.s0.x$14.min, (f$15.s0.x$14.max + -3))
  a[i].min     : min((f$15.s0.x$14.max + -3), f$15.s0.x$14.min)

  a_copy[i].min: min(f$15.s0.x$14.min, (f$15.s0.x$14.max + -3))
  a[i].min     : min((f$15.s0.x$14.max + -3), f$15.s0.x$14.min)
Test division of uint32x4

  a_copy[i].min: min(f$16.s0.x$15.min, (f$16.s0.x$15.max + -3))
  a[i].min     : min((f$16.s0.x$15.max + -3), f$16.s0.x$15.min)

  a_copy[i].min: min(f$16.s0.x$15.min, (f$16.s0.x$15.max + -3))
  a[i].min     : min((f$16.s0.x$15.max + -3), f$16.s0.x$15.min)
Test division of int8x4

  a_copy[i].min: min(f$17.s0.x$16.min, (f$17.s0.x$16.max + -3))
  a[i].min     : min((f$17.s0.x$16.max + -3), f$17.s0.x$16.min)

  a_copy[i].min: min(f$17.s0.x$16.min, (f$17.s0.x$16.max + -3))
  a[i].min     : min((f$17.s0.x$16.max + -3), f$17.s0.x$16.min)
Test division of int16x4

  a_copy[i].min: min(f$18.s0.x$17.min, (f$18.s0.x$17.max + -3))
  a[i].min     : min((f$18.s0.x$17.max + -3), f$18.s0.x$17.min)

  a_copy[i].min: min(f$18.s0.x$17.min, (f$18.s0.x$17.max + -3))
  a[i].min     : min((f$18.s0.x$17.max + -3), f$18.s0.x$17.min)
Test division of int32x4

  a_copy[i].min: min(f$19.s0.x$18.min, (f$19.s0.x$18.max + -3))
  a[i].min     : min((f$19.s0.x$18.max + -3), f$19.s0.x$18.min)

  a_copy[i].min: min(f$19.s0.x$18.min, (f$19.s0.x$18.max + -3))
  a[i].min     : min((f$19.s0.x$18.max + -3), f$19.s0.x$18.min)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/dynamic_reduction_bounds.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_dynamic_reduction_bounds -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_dynamic_reduction_bounds
Frac: f.s0.z.min + -1*_div$2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.min + -1*_div, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.max + -1*_div$4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.max + -1*_div$3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(f.s0.x.min, f.s1.x.min)
  a[i].min     : min(f.s1.x.min, f.s0.x.min)

  a_copy[i].max: max(f.s0.x.max, f.s1.x.max)
  a[i].max     : max(f.s1.x.max, f.s0.x.max)

  a_copy[i].min: min(f.s0.y.min, f.s1.y.min)
  a[i].min     : min(f.s1.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, f.s1.y.max)
  a[i].max     : max(f.s1.y.max, f.s0.y.max)

  a_copy[i].min: min(f.s0.z.min, select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
  a[i].min     : min(f.s0.z.min, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))

  a_copy[i].max: max(f.s0.z.max, select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
  a[i].max     : max(f.s0.z.max, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
Frac: f.s0.z.min + -1*_div$6, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.min + -1*_div$5, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.max + -1*_div$8, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.s0.z.max + -1*_div$7, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(f.s1.x.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, f.s1.x.min)

  a_copy[i].max: max(f.s1.x.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, f.s1.x.max)

  a_copy[i].min: min(f.s1.y.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, f.s1.y.min)

  a_copy[i].max: max(f.s1.y.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, f.s1.y.max)

  a_copy[i].min: min(select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))), min(f.s0.z.min, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))))))
  a[i].min     : min(f.s0.z.min, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))

  a_copy[i].max: max(select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))), max(f.s0.z.max, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))))))
  a[i].max     : max(f.s0.z.max, select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
Frac: f.min.2 + -1*_div$10, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.min.2 + -1*_div$9, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.min.2 + f.extent.2 + -1*_div$12 + -1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: f.min.2 + f.extent.2 + -1*_div$11 + -1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(f.min.0, f.s1.x.min)
  a[i].min     : min(f.s1.x.min, f.min.0)

  a_copy[i].max: max(((f.min.0 + f.extent.0) + -1), f.s1.x.max)
  a[i].max     : max(f.s1.x.max, ((f.extent.0 + f.min.0) + -1))

  a_copy[i].min: min(f.min.1, f.s1.y.min)
  a[i].min     : min(f.s1.y.min, f.min.1)

  a_copy[i].max: max(((f.min.1 + f.extent.1) + -1), f.s1.y.max)
  a[i].max     : max(f.s1.y.max, ((f.extent.1 + f.min.1) + -1))

  a_copy[i].min: min(f.min.2, select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
  a[i].min     : min(f.min.2, select(((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))*-1) < 0), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))

  a_copy[i].max: max(((f.min.2 + f.extent.2) + -1), select((0 < int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
  a[i].max     : max(((f.extent.2 + f.min.2) + -1), select((int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))) < 1), (f.s1.dom.x$r.min/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1)))))), (f.s1.dom.x$r.max/int32(sqrt_f32(float32(((input.extent.0*input.extent.0) + (input.extent.1*input.extent.1))))))))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/erf.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_erf -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_erf
Maximum number of incorrect mantissa bits: 3 @ -1.0353
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/exception.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_exception -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_exception
Not performing exceptions test because Halide was compiled without exceptions.

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/explicit_inline_reductions.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_explicit_inline_reductions -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_explicit_inline_reductions

  a_copy[i].min: min(sum$2.s1.v2.min, product.s1.r3.x$r.min)
  a[i].min     : min(product.s1.r3.x$r.min, sum$2.s1.v2.min)

  a_copy[i].max: max(sum$2.s1.v2.max, product.s1.r3.x$r.max)
  a[i].max     : max(product.s1.r3.x$r.max, sum$2.s1.v2.max)

  a_copy[i].min: min(sum.s1.v0.min, product.s1.r3.x$r.min)
  a[i].min     : min(product.s1.r3.x$r.min, sum.s1.v0.min)

  a_copy[i].max: max(sum.s1.v0.max, product.s1.r3.x$r.max)
  a[i].max     : max(product.s1.r3.x$r.max, sum.s1.v0.max)

  a_copy[i].min: min(sum$3.s1.v4.min, product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, sum$3.s1.v4.min)

  a_copy[i].max: max(sum$3.s1.v4.max, product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, sum$3.s1.v4.max)

  a_copy[i].min: min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)
  a[i].min     : min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)

  a_copy[i].max: max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)
  a[i].max     : max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)

  a_copy[i].min: min(product$2.s1.v8.min, f.s1.r1.x$r.min)
  a[i].min     : min(f.s1.r1.x$r.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, f.s1.r1.x$r.max)
  a[i].max     : max(f.s1.r1.x$r.max, product$2.s1.v8.max)

  a_copy[i].min: min(sum$2.s0.v2.min, sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, sum$2.s0.v2.min)

  a_copy[i].max: max(sum$2.s0.v2.max, sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, sum$2.s0.v2.max)

  a_copy[i].min: min(sum.s0.v0.min, sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, sum.s0.v0.min)

  a_copy[i].max: max(sum.s0.v0.max, sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, sum.s0.v0.max)

  a_copy[i].min: min(sum$3.s0.v4.min, sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, sum$3.s0.v4.min)

  a_copy[i].max: max(sum$3.s0.v4.max, sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, sum$3.s0.v4.max)

  a_copy[i].min: min(sum$3.s0.v5.min, sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, sum$3.s0.v5.min)

  a_copy[i].max: max(sum$3.s0.v5.max, sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, sum$3.s0.v5.max)

  a_copy[i].min: min(product$2.s0.v8.min, product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, product$2.s0.v8.min)

  a_copy[i].max: max(product$2.s0.v8.max, product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, product$2.s0.v8.max)

  a_copy[i].min: min(f.s0.x.min, f.s1.r1.x$r.min)
  a[i].min     : min(f.s1.r1.x$r.min, f.s0.x.min)

  a_copy[i].max: max(f.s0.x.max, f.s1.r1.x$r.max)
  a[i].max     : max(f.s1.r1.x$r.max, f.s0.x.max)

  a_copy[i].min: min(f.s0.y.min, f.s1.y.min)
  a[i].min     : min(f.s1.y.min, f.s0.y.min)

  a_copy[i].max: max(f.s0.y.max, f.s1.y.max)
  a[i].max     : max(f.s1.y.max, f.s0.y.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, f.s1.r1.x$r.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, f.s1.r1.x$r.max)

  a_copy[i].min: min(f.s1.y.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, f.s1.y.min)

  a_copy[i].max: max(f.s1.y.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, f.s1.y.max)

  a_copy[i].min: min(min(f.s1.r1.x$r.min, product$2.s0.v8.min), product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, min(product$2.s0.v8.min, f.s1.r1.x$r.min))

  a_copy[i].max: max(max(f.s1.r1.x$r.max, product$2.s0.v8.max), product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, max(product$2.s0.v8.max, f.s1.r1.x$r.max))

  a_copy[i].min: min(min(product.s1.r3.x$r.min, sum.s0.v0.min), sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, min(sum.s0.v0.min, product.s1.r3.x$r.min))

  a_copy[i].max: max(max(product.s1.r3.x$r.max, sum.s0.v0.max), sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, max(sum.s0.v0.max, product.s1.r3.x$r.max))

  a_copy[i].min: min(min(product.s1.r3.x$r.min, sum$2.s0.v2.min), sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, min(sum$2.s0.v2.min, product.s1.r3.x$r.min))

  a_copy[i].max: max(max(product.s1.r3.x$r.max, sum$2.s0.v2.max), sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, max(sum$2.s0.v2.max, product.s1.r3.x$r.max))

  a_copy[i].min: min(min(product$2.s1.v8.min, sum$3.s0.v4.min), sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, min(sum$3.s0.v4.min, product$2.s1.v8.min))

  a_copy[i].max: max(max(product$2.s1.v8.max, sum$3.s0.v4.max), sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, max(sum$3.s0.v4.max, product$2.s1.v8.max))

  a_copy[i].min: min(min(product$2.s1.r3.x$r.min, sum$3.s0.v5.min), sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, min(sum$3.s0.v5.min, product$2.s1.r3.x$r.min))

  a_copy[i].max: max(max(product$2.s1.r3.x$r.max, sum$3.s0.v5.max), sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, max(sum$3.s0.v5.max, product$2.s1.r3.x$r.max))

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, f.s1.r1.x$r.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, f.s1.r1.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product.s1.r3.x$r.min, sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, product.s1.r3.x$r.min)

  a_copy[i].max: max(product.s1.r3.x$r.max, sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, product.s1.r3.x$r.max)

  a_copy[i].min: min(product$2.s1.v8.min, sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s1.r3.x$r.min, sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, product$2.s1.r3.x$r.min)

  a_copy[i].max: max(product$2.s1.r3.x$r.max, sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, product$2.s1.r3.x$r.max)

  a_copy[i].min: min(f.s1.r1.x$r.min, product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, f.s1.r1.x$r.min)

  a_copy[i].max: max(f.s1.r1.x$r.max, product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, f.s1.r1.x$r.max)

  a_copy[i].min: min(f.min.0, f.s1.r1.x$r.min)
  a[i].min     : min(f.s1.r1.x$r.min, f.min.0)

  a_copy[i].max: max(((f.min.0 + f.extent.0) + -1), f.s1.r1.x$r.max)
  a[i].max     : max(f.s1.r1.x$r.max, ((f.extent.0 + f.min.0) + -1))

  a_copy[i].min: min(f.min.1, f.s1.y.min)
  a[i].min     : min(f.s1.y.min, f.min.1)

  a_copy[i].max: max(((f.min.1 + f.extent.1) + -1), f.s1.y.max)
  a[i].max     : max(f.s1.y.max, ((f.extent.1 + f.min.1) + -1))

  a_copy[i].min: min(sum$2.s1.v2.min, product.s1.r3.x$r)
  a[i].min     : min(product.s1.r3.x$r, sum$2.s1.v2.min)

  a_copy[i].max: max(sum$2.s1.v2.max, product.s1.r3.x$r)
  a[i].max     : max(product.s1.r3.x$r, sum$2.s1.v2.max)

  a_copy[i].min: min(sum.s1.v0.min, product.s1.r3.x$r)
  a[i].min     : min(product.s1.r3.x$r, sum.s1.v0.min)

  a_copy[i].max: max(sum.s1.v0.max, product.s1.r3.x$r)
  a[i].max     : max(product.s1.r3.x$r, sum.s1.v0.max)

  a_copy[i].min: min(sum$2.s0.v2.min, sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, sum$2.s0.v2.min)

  a_copy[i].max: max(sum$2.s0.v2.max, sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, sum$2.s0.v2.max)

  a_copy[i].min: min(min(product.s1.r3.x$r, sum$2.s0.v2.min), sum$2.s1.v2.min)
  a[i].min     : min(sum$2.s1.v2.min, min(sum$2.s0.v2.min, product.s1.r3.x$r))

  a_copy[i].max: max(max(product.s1.r3.x$r, sum$2.s0.v2.max), sum$2.s1.v2.max)
  a[i].max     : max(sum$2.s1.v2.max, max(sum$2.s0.v2.max, product.s1.r3.x$r))

  a_copy[i].min: min(sum.s1.v0.min, product.s1.r3.x$r)
  a[i].min     : min(product.s1.r3.x$r, sum.s1.v0.min)

  a_copy[i].max: max(sum.s1.v0.max, product.s1.r3.x$r)
  a[i].max     : max(product.s1.r3.x$r, sum.s1.v0.max)

  a_copy[i].min: min(sum.s0.v0.min, sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, sum.s0.v0.min)

  a_copy[i].max: max(sum.s0.v0.max, sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, sum.s0.v0.max)

  a_copy[i].min: min(min(product.s1.r3.x$r, sum.s0.v0.min), sum.s1.v0.min)
  a[i].min     : min(sum.s1.v0.min, min(sum.s0.v0.min, product.s1.r3.x$r))

  a_copy[i].max: max(max(product.s1.r3.x$r, sum.s0.v0.max), sum.s1.v0.max)
  a[i].max     : max(sum.s1.v0.max, max(sum.s0.v0.max, product.s1.r3.x$r))

  a_copy[i].min: min(product$2.s1.v8.min, f.s1.r1.x$r)
  a[i].min     : min(f.s1.r1.x$r, product$2.s1.v8.min)

  a_copy[i].max: max(product$2.s1.v8.max, f.s1.r1.x$r)
  a[i].max     : max(f.s1.r1.x$r, product$2.s1.v8.max)

  a_copy[i].min: min(product$2.s0.v8.min, product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, product$2.s0.v8.min)

  a_copy[i].max: max(product$2.s0.v8.max, product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, product$2.s0.v8.max)

  a_copy[i].min: min(min(f.s1.r1.x$r, product$2.s0.v8.min), product$2.s1.v8.min)
  a[i].min     : min(product$2.s1.v8.min, min(product$2.s0.v8.min, f.s1.r1.x$r))

  a_copy[i].max: max(max(f.s1.r1.x$r, product$2.s0.v8.max), product$2.s1.v8.max)
  a[i].max     : max(product$2.s1.v8.max, max(product$2.s0.v8.max, f.s1.r1.x$r))

  a_copy[i].min: min(sum$3.s1.v4.min, product$2.s1.v8)
  a[i].min     : min(product$2.s1.v8, sum$3.s1.v4.min)

  a_copy[i].max: max(sum$3.s1.v4.max, product$2.s1.v8)
  a[i].max     : max(product$2.s1.v8, sum$3.s1.v4.max)

  a_copy[i].min: min(sum$3.s1.v5.min, product$2.s1.r3.x$r)
  a[i].min     : min(product$2.s1.r3.x$r, sum$3.s1.v5.min)

  a_copy[i].max: max(sum$3.s1.v5.max, product$2.s1.r3.x$r)
  a[i].max     : max(product$2.s1.r3.x$r, sum$3.s1.v5.max)

  a_copy[i].min: min(sum$3.s0.v4.min, sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, sum$3.s0.v4.min)

  a_copy[i].max: max(sum$3.s0.v4.max, sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, sum$3.s0.v4.max)

  a_copy[i].min: min(sum$3.s0.v5.min, sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, sum$3.s0.v5.min)

  a_copy[i].max: max(sum$3.s0.v5.max, sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, sum$3.s0.v5.max)

  a_copy[i].min: min(min(product$2.s1.v8, sum$3.s0.v4.min), sum$3.s1.v4.min)
  a[i].min     : min(sum$3.s1.v4.min, min(sum$3.s0.v4.min, product$2.s1.v8))

  a_copy[i].max: max(max(product$2.s1.v8, sum$3.s0.v4.max), sum$3.s1.v4.max)
  a[i].max     : max(sum$3.s1.v4.max, max(sum$3.s0.v4.max, product$2.s1.v8))

  a_copy[i].min: min(min(product$2.s1.r3.x$r, sum$3.s0.v5.min), sum$3.s1.v5.min)
  a[i].min     : min(sum$3.s1.v5.min, min(sum$3.s0.v5.min, product$2.s1.r3.x$r))

  a_copy[i].max: max(max(product$2.s1.r3.x$r, sum$3.s0.v5.max), sum$3.s1.v5.max)
  a[i].max     : max(sum$3.s1.v5.max, max(sum$3.s0.v5.max, product$2.s1.r3.x$r))

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_bounds_inference.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_bounds_inference -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_bounds_inference

  a_copy[i].min: min(input$2.bounds_query.f1.min[0], input$2.bounds_query.f2.min[0])
  a[i].min     : min(input$2.bounds_query.f2.min[0], input$2.bounds_query.f1.min[0])

  a_copy[i].max: max(input$2.bounds_query.f1.max[0], input$2.bounds_query.f2.max[0])
  a[i].max     : max(input$2.bounds_query.f2.max[0], input$2.bounds_query.f1.max[0])

  a_copy[i].min: min(input$2.bounds_query.f1.min[1], input$2.bounds_query.f2.min[1])
  a[i].min     : min(input$2.bounds_query.f2.min[1], input$2.bounds_query.f1.min[1])

  a_copy[i].max: max(input$2.bounds_query.f1.max[1], input$2.bounds_query.f2.max[1])
  a[i].max     : max(input$2.bounds_query.f2.max[1], input$2.bounds_query.f1.max[1])

  a_copy[i].min: min(min(g.s0.x.min, (g.s0.x.max + -1)), f1.s0.e2.min)
  a[i].min     : min(f1.s0.e2.min, min((g.s0.x.max + -1), g.s0.x.min))

  a_copy[i].max: max(min((((((g.s0.x.max - g.s0.x.min)/2)*2) + g.s0.x.min) + 1), g.s0.x.max), f1.s0.e2.max)
  a[i].max     : max(f1.s0.e2.max, min((((((g.s0.x.max - g.s0.x.min)/2)*2) + g.s0.x.min) + 1), g.s0.x.max))

  a_copy[i].min: min(min(g.s0.y.min, (g.s0.y.max + -3)), f1.s0.e3.min)
  a[i].min     : min(f1.s0.e3.min, min((g.s0.y.max + -3), g.s0.y.min))

  a_copy[i].max: max(min((((((g.s0.y.max - g.s0.y.min)/4)*4) + g.s0.y.min) + 3), g.s0.y.max), f1.s0.e3.max)
  a[i].max     : max(f1.s0.e3.max, min((((((g.s0.y.max - g.s0.y.min)/4)*4) + g.s0.y.min) + 3), g.s0.y.max))

  a_copy[i].min: min((min(((g.s0.x.x.loop_min*2) + g.s0.x.loop_min), (g.s0.x.loop_max + -1)) + g.s0.x.xi.loop_min), f2.s0.e4.min)
  a[i].min     : min(f2.s0.e4.min, min(((g.s0.x.xi.loop_min + g.s0.x.loop_max) + -1), ((g.s0.x.xi.loop_min + g.s0.x.loop_min) + (g.s0.x.x.loop_min*2))))

  a_copy[i].max: max(((min(((((g.s0.x.x.loop_extent + g.s0.x.x.loop_min)*2) + g.s0.x.loop_min) + -2), (g.s0.x.loop_max + -1)) + (g.s0.x.xi.loop_extent + g.s0.x.xi.loop_min)) + -1), f2.s0.e4.max)
  a[i].max     : max(f2.s0.e4.max, min((((((g.s0.x.xi.loop_min + g.s0.x.xi.loop_extent) + g.s0.x.loop_min) + (g.s0.x.x.loop_min*2)) + (g.s0.x.x.loop_extent*2)) + -3), (((g.s0.x.xi.loop_min + g.s0.x.xi.loop_extent) + g.s0.x.loop_max) + -2)))

  a_copy[i].min: min((g.s0.y.yi.base + g.s0.y.yi.loop_min), f2.s0.e5.min)
  a[i].min     : min(f2.s0.e5.min, (g.s0.y.yi.loop_min + g.s0.y.yi.base))

  a_copy[i].max: max(((g.s0.y.yi.base + (g.s0.y.yi.loop_extent + g.s0.y.yi.loop_min)) + -1), f2.s0.e5.max)
  a[i].max     : max(f2.s0.e5.max, (((g.s0.y.yi.loop_min + g.s0.y.yi.loop_extent) + g.s0.y.yi.base) + -1))

  a_copy[i].min: min(g$2.s0.x.min, g$2.s1.x.min)
  a[i].min     : min(g$2.s1.x.min, g$2.s0.x.min)

  a_copy[i].max: max(g$2.s0.x.max, g$2.s1.x.max)
  a[i].max     : max(g$2.s1.x.max, g$2.s0.x.max)

  a_copy[i].min: min(min(g$2.s0.y.min, (g$2.s0.y.max + -3)), g$2.s1.y.min)
  a[i].min     : min(g$2.s1.y.min, min((g$2.s0.y.max + -3), g$2.s0.y.min))

  a_copy[i].max: max(min((((((g$2.s0.y.max - g$2.s0.y.min)/4)*4) + g$2.s0.y.min) + 3), g$2.s0.y.max), g$2.s1.y.max)
  a[i].max     : max(g$2.s1.y.max, min((((((g$2.s0.y.max - g$2.s0.y.min)/4)*4) + g$2.s0.y.min) + 3), g$2.s0.y.max))

  a_copy[i].min: min(g$2.s1.x.min, f2$2.s0.x.min)
  a[i].min     : min(f2$2.s0.x.min, g$2.s1.x.min)

  a_copy[i].max: max(g$2.s1.x.max, f2$2.s0.x.max)
  a[i].max     : max(f2$2.s0.x.max, g$2.s1.x.max)

  a_copy[i].min: min(g$2.s1.y.min, f2$2.s0.y.min)
  a[i].min     : min(f2$2.s0.y.min, g$2.s1.y.min)

  a_copy[i].max: max(g$2.s1.y.max, f2$2.s0.y.max)
  a[i].max     : max(f2$2.s0.y.max, g$2.s1.y.max)

  a_copy[i].min: min(g$2.s1.x.min, g$2.s0.x.min)
  a[i].min     : min(g$2.s0.x.min, g$2.s1.x.min)

  a_copy[i].max: max(g$2.s1.x.max, g$2.s0.x.max)
  a[i].max     : max(g$2.s0.x.max, g$2.s1.x.max)

  a_copy[i].min: min(g$2.s1.y.min, min((g$2.s0.y.max + -3), g$2.s0.y.min))
  a[i].min     : min(g$2.s0.y.min, min((g$2.s0.y.max + -3), g$2.s1.y.min))

  a_copy[i].max: max(g$2.s1.y.max, min((((((g$2.s0.y.max - g$2.s0.y.min)/4)*4) + g$2.s0.y.min) + 3), g$2.s0.y.max))
  a[i].max     : max(min((((((g$2.s0.y.max - g$2.s0.y.min)/4)*4) + g$2.s0.y.min) + 3), g$2.s0.y.max), g$2.s1.y.max)

  a_copy[i].min: min((f2$2.s0.x.min + 8), input$3.bounds_query.f1$2.min[0])
  a[i].min     : min(input$3.bounds_query.f1$2.min[0], (f2$2.s0.x.min + 8))

  a_copy[i].max: max((f2$2.s0.x.max + 8), input$3.bounds_query.f1$2.max[0])
  a[i].max     : max(input$3.bounds_query.f1$2.max[0], (f2$2.s0.x.max + 8))

  a_copy[i].min: min((f2$2.s0.y.min + 17), input$3.bounds_query.f1$2.min[1])
  a[i].min     : min(input$3.bounds_query.f1$2.min[1], (f2$2.s0.y.min + 17))

  a_copy[i].max: max((f2$2.s0.y.max + 17), input$3.bounds_query.f1$2.max[1])
  a[i].max     : max(input$3.bounds_query.f1$2.max[1], (f2$2.s0.y.max + 17))

  a_copy[i].min: min(g$2.min.0, g$2.s1.x.min)
  a[i].min     : min(g$2.s1.x.min, g$2.min.0)

  a_copy[i].max: max(((g$2.min.0 + g$2.extent.0) + -1), g$2.s1.x.max)
  a[i].max     : max(g$2.s1.x.max, ((g$2.extent.0 + g$2.min.0) + -1))

  a_copy[i].min: min(g$2.min.1, g$2.s1.y.min)
  a[i].min     : min(g$2.s1.y.min, g$2.min.1)

  a_copy[i].max: max(((g$2.min.1 + g$2.extent.1) + -1), g$2.s1.y.max)
  a[i].max     : max(g$2.s1.y.max, ((g$2.extent.1 + g$2.min.1) + -1))

  a_copy[i].min: min(g$2.s0.x, f1$2.s0.e6.min)
  a[i].min     : min(f1$2.s0.e6.min, g$2.s0.x)

  a_copy[i].max: max(g$2.s0.x, f1$2.s0.e6.max)
  a[i].max     : max(f1$2.s0.e6.max, g$2.s0.x)

  a_copy[i].min: min((g$2.s0.y.v0.base + g$2.s0.y.v0.loop_min), f1$2.s0.e7.min)
  a[i].min     : min(f1$2.s0.e7.min, (g$2.s0.y.v0.loop_min + g$2.s0.y.v0.base))

  a_copy[i].max: max(((g$2.s0.y.v0.base + (g$2.s0.y.v0.loop_extent + g$2.s0.y.v0.loop_min)) + -1), f1$2.s0.e7.max)
  a[i].max     : max(f1$2.s0.e7.max, (((g$2.s0.y.v0.loop_min + g$2.s0.y.v0.loop_extent) + g$2.s0.y.v0.base) + -1))

  a_copy[i].min: min(g$2.s1.x, f2$2.s0.x.min)
  a[i].min     : min(f2$2.s0.x.min, g$2.s1.x)

  a_copy[i].max: max(g$2.s1.x, f2$2.s0.x.max)
  a[i].max     : max(f2$2.s0.x.max, g$2.s1.x)

  a_copy[i].min: min(g$2.s1.y, f2$2.s0.y.min)
  a[i].min     : min(f2$2.s0.y.min, g$2.s1.y)

  a_copy[i].max: max(g$2.s1.y, f2$2.s0.y.max)
  a[i].max     : max(f2$2.s0.y.max, g$2.s1.y)
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_consumer.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_consumer -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_consumer
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_error.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_error -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_error
Expected: Bounds inference call to external stage extern_error returned non-zero value: -1
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_output_expansion.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_output_expansion -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_output_expansion

  a_copy[i].min: min((h.s0.x.x.base + h.s0.x.x.loop_min), g.s0.e0.min)
  a[i].min     : min(g.s0.e0.min, (h.s0.x.x.loop_min + h.s0.x.x.base))

  a_copy[i].max: max(((h.s0.x.x.base + (h.s0.x.x.loop_extent + h.s0.x.x.loop_min)) + -1), g.s0.e0.max)
  a[i].max     : max(g.s0.e0.max, (((h.s0.x.x.loop_min + h.s0.x.x.loop_extent) + h.s0.x.x.base) + -1))
in: 0 102, out: 0 17
in: 0 102, out: 10 17
in: 0 102, out: 20 17
in: 0 102, out: 30 17
in: 0 102, out: 40 17
in: 0 102, out: 50 17
in: 0 102, out: 60 17
in: 0 102, out: 70 17
in: 0 102, out: 80 17
in: 0 102, out: 85 17

  a_copy[i].min: min(min(h$2.s0.x$3.min, (h$2.s0.x$3.max + -9)), g$2.s0.e1.min)
  a[i].min     : min(g$2.s0.e1.min, min((h$2.s0.x$3.max + -9), h$2.s0.x$3.min))

  a_copy[i].max: max(min((((((h$2.s0.x$3.max - h$2.s0.x$3.min)/10)*10) + h$2.s0.x$3.min) + 9), h$2.s0.x$3.max), g$2.s0.e1.max)
  a[i].max     : max(g$2.s0.e1.max, min((((((h$2.s0.x$3.max - h$2.s0.x$3.min)/10)*10) + h$2.s0.x$3.min) + 9), h$2.s0.x$3.max))
in: 0 102, out: 0 102
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_producer.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_producer -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_producer

  a_copy[i].min: min((sink.s0.x.xi.base + sink.s0.x.xi.loop_min), source.s0.e0.min)
  a[i].min     : min(source.s0.e0.min, (sink.s0.x.xi.loop_min + sink.s0.x.xi.base))

  a_copy[i].max: max(((sink.s0.x.xi.base + (sink.s0.x.xi.loop_extent + sink.s0.x.xi.loop_min)) + -1), source.s0.e0.max)
  a[i].max     : max(source.s0.e0.max, (((sink.s0.x.xi.loop_min + sink.s0.x.xi.loop_extent) + sink.s0.x.xi.base) + -1))

  a_copy[i].min: min((sink.s0.y.yi.base + sink.s0.y.yi.loop_min), source.s0.e1.min)
  a[i].min     : min(source.s0.e1.min, (sink.s0.y.yi.loop_min + sink.s0.y.yi.base))

  a_copy[i].max: max(((sink.s0.y.yi.base + (sink.s0.y.yi.loop_extent + sink.s0.y.yi.loop_min)) + -1), source.s0.e1.max)
  a[i].max     : max(source.s0.e1.max, (((sink.s0.y.yi.loop_min + sink.s0.y.yi.loop_extent) + sink.s0.y.yi.base) + -1))
Generating data over [0 40] x [0 40]
Generating data over [30 70] x [0 40]
Generating data over [60 100] x [0 40]
Generating data over [60 100] x [0 40]
Generating data over [0 40] x [32 72]
Generating data over [30 70] x [32 72]
Generating data over [60 100] x [32 72]
Generating data over [60 100] x [32 72]
Generating data over [0 40] x [60 100]
Generating data over [30 70] x [60 100]
Generating data over [60 100] x [60 100]
Generating data over [60 100] x [60 100]
Generating data over [0 40] x [60 100]
Generating data over [30 70] x [60 100]
Generating data over [60 100] x [60 100]
Generating data over [60 100] x [60 100]

  a_copy[i].min: min(sink_multi.s0.x.min, (sink_multi.s0.x.max + -31))
  a[i].min     : min((sink_multi.s0.x.max + -31), sink_multi.s0.x.min)

  a_copy[i].min: min(sink_multi.s0.y.min, (sink_multi.s0.y.max + -31))
  a[i].min     : min((sink_multi.s0.y.max + -31), sink_multi.s0.y.min)

  a_copy[i].min: (sink_multi.s0.x.xi.base + sink_multi.s0.x.xi.loop_min)
  a[i].min     : (sink_multi.s0.x.xi.loop_min + sink_multi.s0.x.xi.base)

  a_copy[i].max: ((sink_multi.s0.x.xi.base + (sink_multi.s0.x.xi.loop_extent + sink_multi.s0.x.xi.loop_min)) + -1)
  a[i].max     : (((sink_multi.s0.x.xi.loop_min + sink_multi.s0.x.xi.loop_extent) + sink_multi.s0.x.xi.base) + -1)

  a_copy[i].min: (sink_multi.s0.y.yi.base + sink_multi.s0.y.yi.loop_min)
  a[i].min     : (sink_multi.s0.y.yi.loop_min + sink_multi.s0.y.yi.base)

  a_copy[i].max: ((sink_multi.s0.y.yi.base + (sink_multi.s0.y.yi.loop_extent + sink_multi.s0.y.yi.loop_min)) + -1)
  a[i].max     : (((sink_multi.s0.y.yi.loop_min + sink_multi.s0.y.yi.loop_extent) + sink_multi.s0.y.yi.base) + -1)

  a_copy[i].min: min((sink_multi.s0.x.xi.loop_min + sink_multi.s0.x.xi.base), multi.s0.e2.min)
  a[i].min     : min(multi.s0.e2.min, (sink_multi.s0.x.xi.base + sink_multi.s0.x.xi.loop_min))

  a_copy[i].max: max((((sink_multi.s0.x.xi.loop_min + sink_multi.s0.x.xi.loop_extent) + sink_multi.s0.x.xi.base) + -1), multi.s0.e2.max)
  a[i].max     : max(multi.s0.e2.max, (((sink_multi.s0.x.xi.base + sink_multi.s0.x.xi.loop_extent) + sink_multi.s0.x.xi.loop_min) + -1))

  a_copy[i].min: min((sink_multi.s0.y.yi.loop_min + sink_multi.s0.y.yi.base), multi.s0.e3.min)
  a[i].min     : min(multi.s0.e3.min, (sink_multi.s0.y.yi.base + sink_multi.s0.y.yi.loop_min))

  a_copy[i].max: max((((sink_multi.s0.y.yi.loop_min + sink_multi.s0.y.yi.loop_extent) + sink_multi.s0.y.yi.base) + -1), multi.s0.e3.max)
  a[i].max     : max(multi.s0.e3.max, (((sink_multi.s0.y.yi.base + sink_multi.s0.y.yi.loop_extent) + sink_multi.s0.y.yi.loop_min) + -1))
Generating data over [0 32] x [0 32]
Generating data over [32 64] x [0 32]
Generating data over [64 96] x [0 32]
Generating data over [68 100] x [0 32]
Generating data over [0 32] x [32 64]
Generating data over [32 64] x [32 64]
Generating data over [64 96] x [32 64]
Generating data over [68 100] x [32 64]
Generating data over [0 32] x [64 96]
Generating data over [32 64] x [64 96]
Generating data over [64 96] x [64 96]
Generating data over [68 100] x [64 96]
Generating data over [0 32] x [68 100]
Generating data over [32 64] x [68 100]
Generating data over [64 96] x [68 100]
Generating data over [68 100] x [68 100]
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_sort.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_sort -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_sort
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/extern_stage.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_extern_stage -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_extern_stage

  a_copy[i].min: min((h.s0.s1.base + (((h.s0.x.x.x.xi.loop_min*16) + h.s0.s1.loop_min) + (((h.s0.x.x.v1.loop_min*8) + h.s0.s0.loop_min) + h.s0.x.v0.loop_min))), g.s0.e0.min)
  a[i].min     : min(g.s0.e0.min, (((((h.s0.x.v0.loop_min + h.s0.s0.loop_min) + (h.s0.x.x.v1.loop_min*8)) + h.s0.s1.loop_min) + (h.s0.x.x.x.xi.loop_min*16)) + h.s0.s1.base))

  a_copy[i].max: max(((h.s0.s1.base + ((((h.s0.x.x.x.xi.loop_extent + h.s0.x.x.x.xi.loop_min)*16) + h.s0.s1.loop_min) + ((((h.s0.x.x.v1.loop_extent + h.s0.x.x.v1.loop_min)*8) + h.s0.s0.loop_min) + (h.s0.x.v0.loop_extent + h.s0.x.v0.loop_min)))) + -25), g.s0.e0.max)
  a[i].max     : max(g.s0.e0.max, (((((((((h.s0.x.v0.loop_min + h.s0.x.v0.loop_extent) + h.s0.s0.loop_min) + (h.s0.x.x.v1.loop_min*8)) + (h.s0.x.x.v1.loop_extent*8)) + h.s0.s1.loop_min) + (h.s0.x.x.x.xi.loop_min*16)) + (h.s0.x.x.x.xi.loop_extent*16)) + h.s0.s1.base) + -25))
Doing flip_x bounds inference over [0 99]
Doing flip_x bounds inference over [0 99]
Doing flip_x bounds inference over [0 63]
Doing flip_x bounds inference over [0 63]
Computing flip_x over [0 63]
Doing flip_x bounds inference over [36 99]
Doing flip_x bounds inference over [36 99]
Computing flip_x over [36 99]
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/fibonacci.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_fibonacci -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_fibonacci

  a_copy[i].min: min((fib.s1.r.x$r.min + -2), (g.s0.x.min + 10))
  a[i].min     : min((g.s0.x.min + 10), (fib.s1.r.x$r.min + -2))

  a_copy[i].max: max((fib.s1.r.x$r.max + -1), (g.s0.x.max + 10))
  a[i].max     : max((g.s0.x.max + 10), (fib.s1.r.x$r.max + -1))

  a_copy[i].min: min(fib.s0.x.min, fib.s1.r.x$r.min)
  a[i].min     : min(fib.s1.r.x$r.min, fib.s0.x.min)

  a_copy[i].max: max(fib.s0.x.max, fib.s1.r.x$r.max)
  a[i].max     : max(fib.s1.r.x$r.max, fib.s0.x.max)

  a_copy[i].min: min(min((g.s0.x.min + 10), (fib.s1.r.x$r.min + -2)), min(fib.s1.r.x$r.min, fib.s0.x.min))
  a[i].min     : min(fib.s0.x.min, min((fib.s1.r.x$r.min + -2), (g.s0.x.min + 10)))

  a_copy[i].max: max(max((g.s0.x.max + 10), (fib.s1.r.x$r.max + -1)), max(fib.s1.r.x$r.max, fib.s0.x.max))
  a[i].max     : max(fib.s0.x.max, max(fib.s1.r.x$r.max, (g.s0.x.max + 10)))

  a_copy[i].min: min((fib.s1.r.x$r.min + -2), (g.s0.x.min + 10))
  a[i].min     : min((g.s0.x.min + 10), (fib.s1.r.x$r.min + -2))

  a_copy[i].max: max((fib.s1.r.x$r.max + -1), (g.s0.x.max + 10))
  a[i].max     : max((g.s0.x.max + 10), (fib.s1.r.x$r.max + -1))

  a_copy[i].min: min((fib.s1.r.x$r.min + -2), (g.s0.x.min + 10))
  a[i].min     : min((g.s0.x.min + 10), (fib.s1.r.x$r.min + -2))

  a_copy[i].max: max((fib.s1.r.x$r.max + -1), (g.s0.x.max + 10))
  a[i].max     : max((g.s0.x.max + 10), (fib.s1.r.x$r.max + -1))

  a_copy[i].min: min(fib.s0.x.min, fib.s1.r.x$r.min)
  a[i].min     : min(fib.s1.r.x$r.min, fib.s0.x.min)

  a_copy[i].max: max(fib.s0.x.max, fib.s1.r.x$r.max)
  a[i].max     : max(fib.s1.r.x$r.max, fib.s0.x.max)

  a_copy[i].min: min(min((g.s0.x.min + 10), (fib.s1.r.x$r.min + -2)), min(fib.s1.r.x$r.min, fib.s0.x.min))
  a[i].min     : min(fib.s0.x.min, min((fib.s1.r.x$r.min + -2), (g.s0.x.min + 10)))

  a_copy[i].max: max(max((g.s0.x.max + 10), (fib.s1.r.x$r.max + -1)), max(fib.s1.r.x$r.max, fib.s0.x.max))
  a[i].max     : max(fib.s0.x.max, max(fib.s1.r.x$r.max, (g.s0.x.max + 10)))
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/float16_t_comparison.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_float16_t_comparison -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_float16_t_comparison
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/float16_t_constants.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_float16_t_constants -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_float16_t_constants
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/float16_t_image_type.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_float16_t_image_type -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_float16_t_image_type
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/float16_t_implicit_upcast.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_float16_t_implicit_upcast -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_float16_t_implicit_upcast
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/float16_t_realize_constant.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_float16_t_realize_constant -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_float16_t_realize_constant
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/func_lifetime_2.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_func_lifetime_2 -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_func_lifetime_2
Defining function f...
Realizing function f...
Defining function g...
Realizing function g...
Realizing function g again...
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/func_lifetime.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_func_lifetime -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_func_lifetime
Defining function f...
Realizing function f...
Defining function g...
Realizing function g...
Realizing function f again...
Success!

mpicxx -std=c++11  -g -fno-omit-frame-pointer -fno-rtti -Wall -Werror -Wno-unused-function -Wignored-qualifiers -Wno-comment -Wsign-compare -rdynamic -O3 /home/psuriana/distributed-halide/test/correctness/fuse.cpp -Iinclude -I/home/psuriana/distributed-halide/non-linear-FM/src/ -Lbin -lHalide -L/usr/lib/llvm-3.5/lib  -lz -lpthread -lffi -ledit -ltinfo -ldl -lm  -lpthread -ldl -lz -o bin/correctness_fuse -L/home/psuriana/distributed-halide/non-linear-FM/bin/ -lnfm -L/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib -lisl -lgmp
cd bin/build/tmp ; LD_LIBRARY_PATH=:/home/psuriana/distributed-halide/bin:/home/psuriana/distributed-halide/non-linear-FM/bin/:/home/psuriana/distributed-halide/non-linear-FM/isl-0.15/release/lib /home/psuriana/distributed-halide/bin/correctness_fuse

  a_copy[i].min: min(maximum.s1.r.x$r.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, maximum.s1.r.x$r.min)

  a_copy[i].max: max(maximum.s1.r.x$r.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, maximum.s1.r.x$r.max)

  a_copy[i].min: min(maximum.s1.r.y$r.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, maximum.s1.r.y$r.min)

  a_copy[i].max: max(maximum.s1.r.y$r.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, maximum.s1.r.y$r.max)
Frac: maximum.s1.r.x$r.min + -1*g.s0.x.min + -6, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.min + -1*g.s0.x.min + -3*_div + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -6, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -3*_div + -3, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.min + -3*_div$2 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -3*_div$2 + 3, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: g.s0.x.max + -1*g.s0.x.min + -3*_div$2 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$7, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$7, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$7, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$7, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$12 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$12 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$12 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$12 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(maximum.s1.r.x$r.min, min(((min((max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1) + 1), 0)*3) + g.s0.x.min), (g.s0.x.max + -2)))
  a[i].min     : min((g.s0.x.max + -2), min(maximum.s1.r.x$r.min, g.s0.x.min))

  a_copy[i].max: max(maximum.s1.r.x$r.max, min((((max((max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1) + -1), 0)*3) + g.s0.x.min) + 2), g.s0.x.max))
  a[i].max     : max(maximum.s1.r.x$r.max, select(((((g.s0.x.max - g.s0.x.min) + 3)/3) < 1), min((g.s0.x.min + 2), g.s0.x.max), min(((((((g.s0.x.max - g.s0.x.min) + 3)/3)*3) + g.s0.x.min) + -1), g.s0.x.max)))

  a_copy[i].min: min(maximum.s1.r.y$r.min, (let t3 = min(((min(((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -4), 0)/3)*6), (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -6)) in min((((t3/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min), (g.s0.y.max + -4))))
  a[i].min     : min(maximum.s1.r.y$r.min, select((((t3 <= 0) && (((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6) + 6) <= ((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)))) || (((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6) <= 0) && ((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -5) <= (((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6))) || ((((t3 + 6) <= (((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6)) && (6 <= ((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)))) || ((1 <= ((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)) && (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) <= 5))))), (((t3/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min), (g.s0.y.max + -4)))

  a_copy[i].max: max(maximum.s1.r.y$r.max, (let t2 = min((((min(((((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -1)/4)*4), ((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -4)) + 3)/3)*6), (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -6)) in min((((((t2 + 5)/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min) + 4), g.s0.y.max)))
  a[i].max     : max(maximum.s1.r.y$r.max, min((((((t2 + 5)/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min) + 4), g.s0.y.max))

  a_copy[i].min: min(maximum.s1.r.x$r.min, f.s0.x.min)
  a[i].min     : min(f.s0.x.min, maximum.s1.r.x$r.min)

  a_copy[i].max: max(maximum.s1.r.x$r.max, f.s0.x.max)
  a[i].max     : max(f.s0.x.max, maximum.s1.r.x$r.max)

  a_copy[i].min: min(maximum.s1.r.y$r.min, f.s0.y.min)
  a[i].min     : min(f.s0.y.min, maximum.s1.r.y$r.min)

  a_copy[i].max: max(maximum.s1.r.y$r.max, f.s0.y.max)
  a[i].max     : max(f.s0.y.max, maximum.s1.r.y$r.max)
Frac: maximum.s1.r.x$r.min + -1*g.s0.x.min + -6, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.min + -1*g.s0.x.min + -3*_div$13 + -3, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: -6, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: -3*_div$13 + -3, num_sign: NFM_NEGATIVE, denom_sign: NFM_POSITIVE, sign: NFM_NEGATIVE
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.min + -3*_div$14 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.x$r.max + -1*g.s0.x.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: -3*_div$14 + 3, num_sign: NFM_NON_POSITIVE, denom_sign: NFM_POSITIVE, sign: NFM_NON_POSITIVE
Frac: g.s0.x.max + -1*g.s0.x.min + -2, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: g.s0.x.max + -1*g.s0.x.min + -3*_div$14 + 1, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: 0, num_sign: NFM_ZERO, denom_sign: NFM_POSITIVE, sign: NFM_ZERO
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.max + 4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$19, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$19, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$19, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.min + -1*g.s0.y.min + -5*_div$19, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$24 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$24 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$24 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.min + -5*_div$24 + -4, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN
Frac: maximum.s1.r.y$r.max + -1*g.s0.y.max, num_sign: NFM_UNKNOWN, denom_sign: NFM_POSITIVE, sign: NFM_UNKNOWN

  a_copy[i].min: min(maximum.s1.r.x$r.min, min(((min((max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1) + 1), 0)*3) + g.s0.x.min), (g.s0.x.max + -2)))
  a[i].min     : min((g.s0.x.max + -2), min(maximum.s1.r.x$r.min, g.s0.x.min))

  a_copy[i].max: max(maximum.s1.r.x$r.max, min((((max((max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1) + -1), 0)*3) + g.s0.x.min) + 2), g.s0.x.max))
  a[i].max     : max(maximum.s1.r.x$r.max, select(((((g.s0.x.max - g.s0.x.min) + 3)/3) < 1), min((g.s0.x.min + 2), g.s0.x.max), min(((((((g.s0.x.max - g.s0.x.min) + 3)/3)*3) + g.s0.x.min) + -1), g.s0.x.max)))

  a_copy[i].min: min(maximum.s1.r.y$r.min, (let t11 = min(((min(((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -4), 0)/3)*6), (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -6)) in min((((t11/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min), (g.s0.y.max + -4))))
  a[i].min     : min(maximum.s1.r.y$r.min, select((((t11 <= 0) && (((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6) + 6) <= ((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)))) || (((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6) <= 0) && ((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -5) <= (((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6))) || ((((t11 + 6) <= (((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)*6)) && (6 <= ((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)))) || ((1 <= ((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -7)/6)) && (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) <= 5))))), (((t11/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min), (g.s0.y.max + -4)))

  a_copy[i].max: max(maximum.s1.r.y$r.max, (let t10 = min((((min(((((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -1)/4)*4), ((((((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + 5)/6)*3) + -4)) + 3)/3)*6), (((((g.s0.x.max - g.s0.x.min) + 3)/3)*(((g.s0.y.max - g.s0.y.min) + 5)/5)) + -6)) in min((((((t10 + 5)/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min) + 4), g.s0.y.max)))
  a[i].max     : max(maximum.s1.r.y$r.max, min((((((t10 + 5)/max((((g.s0.x.max - g.s0.x.min) + 3)/3), 1))*5) + g.s0.y.min) + 4), g.s0.y.max))
